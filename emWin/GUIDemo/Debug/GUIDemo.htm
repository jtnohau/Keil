<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Debug\GUIDemo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Debug\GUIDemo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Nov 22 16:16:56 2021
<BR><P>
<H3>Maximum Stack Usage =       1668 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_DrawScreen_BMP_GIF_JPG &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _JPEG_DrawEx &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[632]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[92c]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92c]">WM__InvalidateRect</a><BR>
 <LI><a href="#[90c]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90c]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[906]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[906]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[8eb]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69e]">WM__SendMessage</a><BR>
 <LI><a href="#[8f5]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f5]">_GetDialogItem</a><BR>
 <LI><a href="#[8ef]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e9]">WM_DeleteWindow</a><BR>
 <LI><a href="#[942]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9b4]">_EnlargeBlocks</a><BR>
 <LI><a href="#[704]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[707]">_InitOnce</a><BR>
 <LI><a href="#[9c4]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c4]">_Findy1</a><BR>
 <LI><a href="#[9c6]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c6]">_Findx1</a><BR>
 <LI><a href="#[9c5]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9c5]">_Findx0</a><BR>
 <LI><a href="#[933]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[933]">_PaintTransChildren</a><BR>
 <LI><a href="#[90b]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90b]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[2c5]">__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c5]">__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</a><BR>
 <LI><a href="#[6d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">NMI_Handler</a><BR>
 <LI><a href="#[6e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">HardFault_Handler</a><BR>
 <LI><a href="#[6f]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">MemManage_Handler</a><BR>
 <LI><a href="#[70]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">BusFault_Handler</a><BR>
 <LI><a href="#[71]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">UsageFault_Handler</a><BR>
 <LI><a href="#[73]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">DebugMon_Handler</a><BR>
 <LI><a href="#[88]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">ADC_IRQHandler</a><BR>
 <LI><a href="#[9f5]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9f5]">_Screen2hWin</a><BR>
 <LI><a href="#[92f]">_MoveDescendants</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92f]">_MoveDescendants</a><BR>
 <LI><a href="#[8d4]">WM__UpdateChildPositions</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b4]">WM_ResizeWindow</a><BR>
 <LI><a href="#[7d2]">_CreateStatic</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d2]">_CreateStatic</a><BR>
 <LI><a href="#[7c6]">_GetWindowDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7c6]">_GetWindowDevice</a><BR>
 <LI><a href="#[7d5]">GUI_MEMDEV__RemoveStaticDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d5]">GUI_MEMDEV__RemoveStaticDevice</a><BR>
 <LI><a href="#[8f4]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f4]">WM__ForEachDesc</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[88]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[147]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[186]">BUTTON_CreateIndirect</a> from button.o(i.BUTTON_CreateIndirect) referenced 7 times from guidemo_1.o(.constdata)
 <LI><a href="#[186]">BUTTON_CreateIndirect</a> from button.o(i.BUTTON_CreateIndirect) referenced from messagebox.o(i.MESSAGEBOX_Create)
 <LI><a href="#[31]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced 2 times from button.o(.data)
 <LI><a href="#[31]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced from guidemo_1.o(.text)
 <LI><a href="#[70]">BusFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8a]">CAN1_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8b]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8c]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[89]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b6]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b7]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b8]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b5]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[69]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[69]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[68]">CHECKBOX__GetButtonSize</a> from checkbox.o(i.CHECKBOX__GetButtonSize) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[c4]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[81]">DMA1_Stream0_IRQHandler</a> from i2c_stm32f4xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[82]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[83]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[84]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[85]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[86]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[87]">DMA1_Stream6_IRQHandler</a> from i2c_stm32f4xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a5]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[ae]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[af]">DMA2_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b0]">DMA2_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b1]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b2]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[ba]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[bb]">DMA2_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[bc]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[148]">DROPDOWN_Callback</a> from dropdown.o(i.DROPDOWN_Callback) referenced from dropdown.o(i.DROPDOWN_CreateUser)
 <LI><a href="#[1f0]">DROPDOWN_CreateIndirect</a> from dropdown.o(i.DROPDOWN_CreateIndirect) referenced 2 times from guidemo_skinning.o(.constdata)
 <LI><a href="#[36]">DROPDOWN_DrawSkinFlex</a> from dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex) referenced 2 times from dropdown.o(.data)
 <LI><a href="#[36]">DROPDOWN_DrawSkinFlex</a> from dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[73]">DebugMon_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[149]">EDIT_Callback</a> from edit.o(i.EDIT_Callback) referenced from edit.o(i.EDIT_CreateUser)
 <LI><a href="#[1ee]">EDIT_CreateIndirect</a> from edit.o(i.EDIT_CreateIndirect) referenced from guidemo_skinning.o(.constdata)
 <LI><a href="#[b3]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b4]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7c]">EXTI0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9e]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7d]">EXTI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7e]">EXTI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7f]">EXTI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[80]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8d]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7a]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a6]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c6]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14c]">FRAMEWIN_Callback</a> from framewin.o(i.FRAMEWIN_Callback) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[184]">FRAMEWIN_CreateIndirect</a> from framewin.o(i.FRAMEWIN_CreateIndirect) referenced 7 times from guidemo_1.o(.constdata)
 <LI><a href="#[184]">FRAMEWIN_CreateIndirect</a> from framewin.o(i.FRAMEWIN_CreateIndirect) referenced from messagebox.o(i.MESSAGEBOX_Create)
 <LI><a href="#[3a]">FRAMEWIN_DrawSkinFlex</a> from framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex) referenced 4 times from framewin.o(.data)
 <LI><a href="#[39]">FRAMEWIN__GetBorderSize</a> from framewin.o(i.FRAMEWIN__GetBorderSize) referenced 2 times from framewin.o(.data)
 <LI><a href="#[14d]">FRAMEWIN__cbClient</a> from framewin.o(i.FRAMEWIN__cbClient) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[14e]">GRAPH_Callback</a> from graph.o(i.GRAPH_Callback) referenced from graph.o(i.GRAPH_CreateUser)
 <LI><a href="#[1a]">GUIDEMO_Automotive</a> from guidemo_automotive.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[f]">GUIDEMO_BarGraph</a> from guidemo_bargraph.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[11]">GUIDEMO_Bitmap</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[19]">GUIDEMO_ColorBar</a> from guidemo_colorbar.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[18]">GUIDEMO_Cursor</a> from guidemo_cursor.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[10]">GUIDEMO_Fading</a> from guidemo_fading.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[16]">GUIDEMO_Graph</a> from guidemo_graph.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[15]">GUIDEMO_Listview</a> from guidemo_listview.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[d]">GUIDEMO_RadialMenu</a> from guidemo_radialmenu.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[e]">GUIDEMO_Skinning</a> from guidemo_skinning.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[17]">GUIDEMO_Speed</a> from guidemo_speed.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[c]">GUIDEMO_Speedometer</a> from guidemo_speedometer.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[12]">GUIDEMO_TransparentDialog</a> from guidemo_transparentdialog.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[14]">GUIDEMO_Treeview</a> from guidemo_treeview.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[13]">GUIDEMO_WashingMachine</a> from guidemo_washingmachine.o(.text) referenced 2 times from guidemo_conf.o(.data)
 <LI><a href="#[144]">GUIDRV_FlexColor_SetFunc66712</a> from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetFunc66712) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[143]">GUIDRV_FlexColor_SetMode16bppC0B16</a> from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[155]">GUIDRV_FlexColor__GetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[15b]">GUIDRV_FlexColor__SetLog2Phys</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys) referenced from guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
 <LI><a href="#[156]">GUIDRV_FlexColor__SetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[246]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[247]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[248]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[249]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[1ed]">GUIPROP_AA2_EXT_DispChar</a> from guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar) referenced from guidemo_resource.o(.constdata)
 <LI><a href="#[1dc]">GUIPROP_AA4_DispChar</a> from guiaa_char4.o(i.GUIPROP_AA4_DispChar) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[1e8]">GUIPROP_AA4_EXT_DispChar</a> from guiaa_char4ext.o(i.GUIPROP_AA4_EXT_DispChar) referenced 8 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1dd]">GUIPROP_AA4_GetCharDistX</a> from guiaa_char4.o(i.GUIPROP_AA4_GetCharDistX) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[1de]">GUIPROP_AA4_GetFontInfo</a> from guiaa_char4.o(i.GUIPROP_AA4_GetFontInfo) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[1df]">GUIPROP_AA4_IsInFont</a> from guiaa_char4.o(i.GUIPROP_AA4_IsInFont) referenced 6 times from guidemo_bargraph.o(.constdata)
 <LI><a href="#[1e4]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 11 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1e9]">GUIPROP_EXT_GetCharDistX</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharDistX) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1ec]">GUIPROP_EXT_GetCharInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharInfo) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1ea]">GUIPROP_EXT_GetFontInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetFontInfo) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1eb]">GUIPROP_EXT_IsInFont</a> from gui_charpext.o(i.GUIPROP_EXT_IsInFont) referenced 9 times from guidemo_resource.o(.constdata)
 <LI><a href="#[26]">GUIPROP_EXT__ClearLine</a> from gui_encext.o(i.GUIPROP_EXT__ClearLine) referenced 2 times from gui_encext.o(.data)
 <LI><a href="#[202]">GUIPROP_EXT__DispLine</a> from gui_encext.o(i.GUIPROP_EXT__DispLine) referenced from gui_encext.o(.constdata)
 <LI><a href="#[1e5]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 11 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1e6]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 11 times from guidemo_resource.o(.constdata)
 <LI><a href="#[1e7]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 11 times from guidemo_resource.o(.constdata)
 <LI><a href="#[166]">GUI_BMP__GetData</a> from gui_bmp.o(i.GUI_BMP__GetData) referenced from gui_bmp.o(i.GUI_BMP_Draw)
 <LI><a href="#[18c]">GUI_DrawGradientH</a> from gui_drawgradient.o(i.GUI_DrawGradientH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[18f]">GUI_DrawGradientV</a> from gui_drawgradient.o(i.GUI_DrawGradientV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[16a]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_DrawSub)
 <LI><a href="#[16a]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetImageInfo)
 <LI><a href="#[16a]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetInfo)
 <LI><a href="#[13e]">GUI_JOYSTICK_Tick</a> from gui_x_rte.o(.text) referenced from gui_x_rte.o(.text)
 <LI><a href="#[16d]">GUI_JPEG__GetData</a> from gui_jpeg.o(i.GUI_JPEG__GetData) referenced from gui_jpeg.o(i.GUI_JPEG_Draw)
 <LI><a href="#[2e]">GUI_MEMDEV_CopyToLCD</a> from guidev.o(i.GUI_MEMDEV_CopyToLCD) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[1be]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[2d]">GUI_MEMDEV_Write</a> from guidev_write.o(i.GUI_MEMDEV_Write) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[16f]">GUI_MEMDEV__CalcParaFadeIn</a> from guidev_moveandfadewin.o(i.GUI_MEMDEV__CalcParaFadeIn) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow)
 <LI><a href="#[1b8]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[1b7]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced 2 times from guidev_8.o(i._GetDevFunc)
 <LI><a href="#[6b]">GUI_PID_GetState</a> from gui_pid.o(i.GUI_PID_GetState) referenced 2 times from wm_touch.o(.data)
 <LI><a href="#[518]">GUI_SetAlpha</a> from gui_setalpha.o(i.GUI_SetAlpha) referenced from gui_setalpha.o(i.GUI_SetAlpha)
 <LI><a href="#[175]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[13d]">GUI_TOUCH_Tick</a> from gui_x_rte.o(.text) referenced from gui_x_rte.o(.text)
 <LI><a href="#[295]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[294]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[296]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[298]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[5a]">GUI_X_ExecIdle</a> from gui_x_rte.o(.text) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[24]">GUI__DrawCharEXT</a> from gui_encext.o(i.GUI__DrawCharEXT) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[4d]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[4e]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[58]">GUI__NOBIDI_GetCharWrap</a> from gui__wrap.o(i.GUI__NOBIDI_GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[51]">GUI__NOBIDI_GetCursorCharacter</a> from gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorCharacter) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[50]">GUI__NOBIDI_GetCursorPosChar</a> from gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorPosChar) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[4f]">GUI__NOBIDI_GetCursorPosX</a> from gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorPosX) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[57]">GUI__NOBIDI_GetWordWrap</a> from gui__wrap.o(i.GUI__NOBIDI_GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[59]">GUI__NOBIDI_Log2VisBuffered</a> from gui_charline.o(i.GUI__NOBIDI_Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[118]">HAL_SRAM_DMA_XferCpltCallback</a> from stm32f4xx_hal_sram.o(.text) referenced from stm32f4xx_hal_sram.o(.text)
 <LI><a href="#[119]">HAL_SRAM_DMA_XferErrorCallback</a> from stm32f4xx_hal_sram.o(.text) referenced from stm32f4xx_hal_sram.o(.text)
 <LI><a href="#[c5]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[17a]">HEADER_Callback</a> from header.o(i.HEADER_Callback) referenced from header.o(i.HEADER_CreateUser)
 <LI><a href="#[3e]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced 2 times from header.o(.data)
 <LI><a href="#[3e]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced from guidemo_1.o(.text)
 <LI><a href="#[6e]">HardFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d9]">I2C1_Control</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[96]">I2C1_ER_IRQHandler</a> from i2c_stm32f4xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[95]">I2C1_EV_IRQHandler</a> from i2c_stm32f4xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d8]">I2C1_GetDataCount</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1da]">I2C1_GetStatus</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d1]">I2C1_Initialize</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d5]">I2C1_MasterReceive</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d4]">I2C1_MasterTransmit</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d3]">I2C1_PowerControl</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1cb]">I2C1_RX_DMA_Complete</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1cc]">I2C1_RX_DMA_Error</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d7]">I2C1_SlaveReceive</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d6]">I2C1_SlaveTransmit</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1cd]">I2C1_TX_DMA_Complete</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1ce]">I2C1_TX_DMA_Error</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1d2]">I2C1_Uninitialize</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[98]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[97]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[bf]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[be]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d0]">I2CX_GetCapabilities</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[1cf]">I2CX_GetVersion</a> from i2c_stm32f4xx.o(.text) referenced from i2c_stm32f4xx.o(.constdata)
 <LI><a href="#[5b]">LCD_AA_MixColors16</a> from lcd_aa.o(i.LCD_AA_MixColors16) referenced 2 times from lcd_aa.o(.data)
 <LI><a href="#[1f4]">LCD_Color2Index_8666</a> from guicc_8666.o(i.LCD_Color2Index_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[169]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[169]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[1fb]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[168]">LCD_DrawVLine</a> from lcd.o(i.LCD_DrawVLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientH)
 <LI><a href="#[23]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[1a6]">LCD_Index2Color_444_12</a> from guicc_444_12_index2color.o(i.LCD_Index2Color_444_12) referenced from gui_drawbitmap_444.o(.constdata)
 <LI><a href="#[1a6]">LCD_Index2Color_444_12</a> from guicc_444_12_index2color.o(i.LCD_Index2Color_444_12) referenced from gui_drawbitmap_444.o(i._DrawBitmap444_12)
 <LI><a href="#[1a5]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced 2 times from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[1a5]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_565.o(i._DrawBitmap)
 <LI><a href="#[1f5]">LCD_Index2Color_8666</a> from guicc_8666.o(i.LCD_Index2Color_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[1fd]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced 2 times from gui_drawbitmap_24.o(.constdata)
 <LI><a href="#[178]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced 2 times from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[178]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[178]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from lcd_rlealpha.o(i._Draw)
 <LI><a href="#[178]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui_drawbitmap_8888.o(i._DrawBitmap_8888)
 <LI><a href="#[178]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
 <LI><a href="#[1a3]">LCD_Index2Color_M555</a> from guicc_m555_index2color.o(i.LCD_Index2Color_M555) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[275]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[17c]">LCD_SetPixelAA4_NoTrans</a> from lcd_aa.o(i.LCD_SetPixelAA4_NoTrans) referenced from lcd_aa.o(i.LCD__GetPfSetPixel)
 <LI><a href="#[17d]">LCD_SetPixelAA4_Trans</a> from lcd_aa.o(i.LCD_SetPixelAA4_Trans) referenced from lcd_aa.o(i.LCD__GetPfSetPixel)
 <LI><a href="#[17d]">LCD_SetPixelAA4_Trans</a> from lcd_aa.o(i.LCD_SetPixelAA4_Trans) referenced from guiaa_lib.o(i._FlushLine)
 <LI><a href="#[17e]">LCD_SetPixelAA8_NoTrans</a> from lcd_aa.o(i.LCD_SetPixelAA8_NoTrans) referenced from lcd_aa.o(i.LCD__GetPfSetPixel)
 <LI><a href="#[17f]">LCD_SetPixelAA8_Trans</a> from lcd_aa.o(i.LCD_SetPixelAA8_Trans) referenced from lcd_aa.o(i.LCD__GetPfSetPixel)
 <LI><a href="#[142]">LCD_X_ReadM1_16</a> from lcd_x.o(.text) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[13f]">LCD_X_Write0_16</a> from lcd_x.o(.text) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[140]">LCD_X_Write1_16</a> from lcd_x.o(.text) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[141]">LCD_X_WriteM1_16</a> from lcd_x.o(.text) referenced from lcdconf_mcbqvga_lg.o(.text)
 <LI><a href="#[180]">LISTBOX_Callback</a> from listbox.o(i.LISTBOX_Callback) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[181]">LISTBOX_OwnerDraw</a> from listbox.o(i.LISTBOX_OwnerDraw) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[182]">LISTVIEW_Callback</a> from listview.o(i.LISTVIEW_Callback) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[1e3]">LISTVIEW_CompareDec</a> from listview_setsort.o(i.LISTVIEW_CompareDec) referenced from guidemo_listview.o(.constdata)
 <LI><a href="#[1e2]">LISTVIEW_CompareText</a> from listview_setsort.o(i.LISTVIEW_CompareText) referenced 2 times from guidemo_listview.o(.constdata)
 <LI><a href="#[1f1]">LISTVIEW_CreateIndirect</a> from listview.o(i.LISTVIEW_CreateIndirect) referenced from guidemo_skinning.o(.constdata)
 <LI><a href="#[183]">LISTVIEW_OwnerDraw</a> from listview.o(i.LISTVIEW_OwnerDraw) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[187]">MESSAGEBOX_Callback</a> from messagebox.o(i.MESSAGEBOX_Callback) referenced from messagebox.o(i.MESSAGEBOX_Create)
 <LI><a href="#[6f]">MemManage_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6d]">NMI_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b9]">OTG_FS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a0]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c1]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c0]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c3]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c2]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[188]">PROGBAR_Callback</a> from progbar.o(i.PROGBAR_Callback) referenced from progbar.o(i.PROGBAR_CreateUser)
 <LI><a href="#[1db]">PROGBAR_CreateIndirect</a> from progbar.o(i.PROGBAR_CreateIndirect) referenced 2 times from guidemo_1.o(.constdata)
 <LI><a href="#[41]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced 2 times from progbar.o(.data)
 <LI><a href="#[41]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced from guidemo_1.o(.text)
 <LI><a href="#[77]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[74]">PendSV_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[189]">RADIO_Callback</a> from radio.o(i.RADIO_Callback) referenced from radio.o(i.RADIO_CreateUser)
 <LI><a href="#[1ef]">RADIO_CreateIndirect</a> from radio.o(i.RADIO_CreateIndirect) referenced from guidemo_skinning.o(.constdata)
 <LI><a href="#[45]">RADIO_DrawSkinFlex</a> from radio_skinflex.o(i.RADIO_DrawSkinFlex) referenced 2 times from radio.o(.data)
 <LI><a href="#[45]">RADIO_DrawSkinFlex</a> from radio_skinflex.o(i.RADIO_DrawSkinFlex) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[44]">RADIO__GetButtonSize</a> from radio.o(i.RADIO__GetButtonSize) referenced 2 times from radio.o(.data)
 <LI><a href="#[7b]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9f]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[79]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6c]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[18a]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[6a]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced 2 times from scrollbar.o(.data)
 <LI><a href="#[6a]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced from guidemo_1.o(.text)
 <LI><a href="#[a7]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[191]">SLIDER_Callback</a> from slider.o(i.SLIDER_Callback) referenced from slider.o(i.SLIDER_CreateUser)
 <LI><a href="#[1f2]">SLIDER_CreateIndirect</a> from slider.o(i.SLIDER_CreateIndirect) referenced 2 times from guidemo_transparentdialog.o(.constdata)
 <LI><a href="#[4a]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced 2 times from slider.o(.data)
 <LI><a href="#[4a]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced from guidemo_1.o(.text)
 <LI><a href="#[99]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9a]">SPI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a9]">SPI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[72]">SVC_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[75]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[75]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[11a]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[78]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[192]">TEXT_Callback</a> from text.o(i.TEXT_Callback) referenced from text.o(i.TEXT_CreateUser)
 <LI><a href="#[185]">TEXT_CreateIndirect</a> from text.o(i.TEXT_CreateIndirect) referenced 9 times from guidemo_1.o(.constdata)
 <LI><a href="#[185]">TEXT_CreateIndirect</a> from text.o(i.TEXT_CreateIndirect) referenced from messagebox.o(i.MESSAGEBOX_Create)
 <LI><a href="#[8e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[91]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[90]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[92]">TIM2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[93]">TIM3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[94]">TIM4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a8]">TIM5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[ac]">TIM6_DAC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[ad]">TIM7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a1]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a4]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a3]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a2]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[193]">TREEVIEW_Callback</a> from treeview.o(i.TREEVIEW_Callback) referenced from treeview.o(i.TREEVIEW_CreateUser)
 <LI><a href="#[1f3]">TREEVIEW_CreateIndirect</a> from treeview.o(i.TREEVIEW_CreateIndirect) referenced from guidemo_treeview.o(.constdata)
 <LI><a href="#[194]">TREEVIEW_OwnerDraw</a> from treeview.o(i.TREEVIEW_OwnerDraw) referenced from treeview.o(i.TREEVIEW_CreateUser)
 <LI><a href="#[aa]">UART4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[ab]">UART5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9b]">USART1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9c]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9d]">USART3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[bd]">USART6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[71]">UsageFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[174]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[1bf]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[76]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1b]">_AddData_Heartbeat</a> from guidemo_graph.o(.text) referenced 2 times from guidemo_graph.o(.data)
 <LI><a href="#[1c]">_AddData_Sine</a> from guidemo_graph.o(.text) referenced 2 times from guidemo_graph.o(.data)
 <LI><a href="#[170]">_CalcParaFadeOut</a> from guidev_moveandfadewin.o(i._CalcParaFadeOut) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow)
 <LI><a href="#[171]">_CalcParaMoveIn</a> from guidev_moveandfadewin.o(i._CalcParaMoveIn) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveInWindow)
 <LI><a href="#[172]">_CalcParaMoveOut</a> from guidev_moveandfadewin.o(i._CalcParaMoveOut) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveOutWindow)
 <LI><a href="#[19c]">_CalcPositions</a> from scrollbar_skin.o(i._CalcPositions) referenced from scrollbar_skin.o(i._Create)
 <LI><a href="#[26a]">_CalcSizeOfChar</a> from gui_uc.o(i._CalcSizeOfChar) referenced 2 times from gui_uc.o(.constdata)
 <LI><a href="#[131]">_CalcXIn</a> from guidemo_speedometer.o(.text) referenced from guidemo_speedometer.o(.text)
 <LI><a href="#[130]">_CalcXOut</a> from guidemo_speedometer.o(.text) referenced from guidemo_speedometer.o(.text)
 <LI><a href="#[201]">_CallDrawBitmapHW</a> from gui_drawbitmap_8888.o(i._CallDrawBitmapHW) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[16b]">_ClearUnusedPixels</a> from gui_gif.o(i._ClearUnusedPixels) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[203]">_Color2Index</a> from gui_setalpha.o(i._Color2Index) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[206]">_Color2IndexBulk</a> from gui_setalpha.o(i._Color2IndexBulk) referenced 5 times from gui_setalpha.o(.constdata)
 <LI><a href="#[29e]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[220]">_Color2Index_565</a> from guicc_565.o(i._Color2Index_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[270]">_Color2Index_888</a> from guicc_888.o(i._Color2Index_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[224]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[274]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[33]">_Create</a> from button_skin.o(i._Create) referenced 18 times from button_skin.o(.data)
 <LI><a href="#[1a2]">_DecodeBlockAC_First</a> from gui_jpeg.o(i._DecodeBlockAC_First) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[1a1]">_DecodeBlockAC_Refine</a> from gui_jpeg.o(i._DecodeBlockAC_Refine) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[1a0]">_DecodeBlockDC_First</a> from gui_jpeg.o(i._DecodeBlockDC_First) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[19f]">_DecodeBlockDC_Refine</a> from gui_jpeg.o(i._DecodeBlockDC_Refine) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[2a1]">_Draw</a> from gui_draw_self.o(i._Draw) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[132]">_Draw</a> from guidemo_speedometer.o(.text) referenced from guidemo_speedometer.o(.text)
 <LI><a href="#[14a]">_Draw</a> from framewin_buttonclose.o(i._Draw) referenced from framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
 <LI><a href="#[1a9]">_Draw</a> from lcd_rlealpha.o(i._Draw) referenced from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
 <LI><a href="#[18e]">_DrawBackgroundH</a> from scrollbar_skinflex.o(i._DrawBackgroundH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[18b]">_DrawBackgroundV</a> from scrollbar_skinflex.o(i._DrawBackgroundV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[1fc]">_DrawBitmap</a> from gui_drawbitmap_24.o(i._DrawBitmap) referenced 9 times from gui_drawbitmap_24.o(.constdata)
 <LI><a href="#[153]">_DrawBitmap</a> from guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[60]">_DrawBitmap180</a> from lcd_rotate180.o(i._DrawBitmap180) referenced 2 times from lcd_rotate180.o(.data)
 <LI><a href="#[1fe]">_DrawBitmap444_12</a> from gui_drawbitmap_444.o(i._DrawBitmap444_12) referenced from gui_drawbitmap_444.o(.constdata)
 <LI><a href="#[62]">_DrawBitmapCCW</a> from lcd_rotateccw.o(i._DrawBitmapCCW) referenced 2 times from lcd_rotateccw.o(.data)
 <LI><a href="#[65]">_DrawBitmapCW</a> from lcd_rotatecw.o(i._DrawBitmapCW) referenced 2 times from lcd_rotatecw.o(.data)
 <LI><a href="#[200]">_DrawBitmap_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmap_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[228]">_DrawBitmap_RLE8</a> from lcd_rle8.o(i._DrawBitmap_RLE8) referenced from lcd_rle8.o(.constdata)
 <LI><a href="#[229]">_DrawBitmap_RLEAlpha</a> from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha) referenced from lcd_rlealpha.o(.constdata)
 <LI><a href="#[125]">_DrawBk</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[124]">_DrawBkCircle</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[126]">_DrawBkSimple</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[1d]">_DrawCharAA4_Trans</a> from guiaa_char4.o(i._DrawCharAA4_Trans) referenced 2 times from guiaa_char4.o(.data)
 <LI><a href="#[1a8]">_DrawClip</a> from lcd_rlealpha.o(i._DrawClip) referenced from lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
 <LI><a href="#[264]">_DrawDown</a> from widget_effect_simple.o(i._DrawDown) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[265]">_DrawDownRect</a> from widget_effect_simple.o(i._DrawDownRect) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[29d]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[16c]">_DrawFromDataBlock</a> from gui_gif.o(i._DrawFromDataBlock) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[190]">_DrawGraspH</a> from scrollbar_skinflex.o(i._DrawGraspH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[18d]">_DrawGraspV</a> from scrollbar_skinflex.o(i._DrawGraspV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[209]">_DrawHLine</a> from gui_setalpha.o(i._DrawHLine) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[165]">_DrawHLine</a> from guiaa_lib.o(i._DrawHLine) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[1e]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[1e]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[1e]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._DrawBitmap_RGB)
 <LI><a href="#[1fa]">_DrawNonExistingCharacter</a> from gui_char.o(i._DrawNonExistingCharacter) referenced from gui_char.o(.constdata)
 <LI><a href="#[1f8]">_DrawNonExistingCharacter_Dummy</a> from gui_char.o(i._DrawNonExistingCharacter_Dummy) referenced from gui_char.o(.constdata)
 <LI><a href="#[a]">_DrawScreenAlphaBitmaps</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[b]">_DrawScreenGrayScale</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[9]">_DrawScreenHighColor</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[7]">_DrawScreenPaletteBasedBitmaps</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[8]">_DrawScreen_BMP_GIF_JPG</a> from guidemo_bitmap.o(.text) referenced 2 times from guidemo_bitmap.o(.data)
 <LI><a href="#[12b]">_DrawSkin</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[11d]">_DrawSkin_BUTTON</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[11c]">_DrawSkin_FRAMEWIN</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[11e]">_DrawSkin_PROGBAR</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[262]">_DrawUp</a> from widget_effect_simple.o(i._DrawUp) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[263]">_DrawUpRect</a> from widget_effect_simple.o(i._DrawUpRect) referenced 2 times from widget_effect_simple.o(.constdata)
 <LI><a href="#[20a]">_DrawVLine</a> from gui_setalpha.o(i._DrawVLine) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[5]">_Draw_0</a> from guidemo_automotive.o(.text) referenced 2 times from guidemo_automotive.o(.data)
 <LI><a href="#[6]">_Draw_1</a> from guidemo_automotive.o(.text) referenced 2 times from guidemo_automotive.o(.data)
 <LI><a href="#[26b]">_Encode</a> from gui_uc.o(i._Encode) referenced 2 times from gui_uc.o(.constdata)
 <LI><a href="#[1b9]">_FillPolygon</a> from guidev_measure.o(i._FillPolygon) referenced from guidev_measure.o(i._GetDevFunc)
 <LI><a href="#[1ba]">_FillPolygonAA</a> from guidev_measure.o(i._FillPolygonAA) referenced from guidev_measure.o(i._GetDevFunc)
 <LI><a href="#[20b]">_FillRect</a> from gui_setalpha.o(i._FillRect) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[154]">_FillRect</a> from guidrv_flexcolor_16bpp_c0b16.o(i._FillRect) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[121]">_FrameDrawSkinFlex</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[19d]">_Free</a> from listview_setsort.o(i._Free) referenced from listview_setsort.o(i._CreateSortObject)
 <LI><a href="#[297]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[3]">_GetAngle_0</a> from guidemo_automotive.o(.text) referenced 2 times from guidemo_automotive.o(.data)
 <LI><a href="#[4]">_GetAngle_1</a> from guidemo_automotive.o(.text) referenced 2 times from guidemo_automotive.o(.data)
 <LI><a href="#[3b]">_GetBorderSize</a> from framewin_skin.o(i._GetBorderSize) referenced 2 times from framewin_skin.o(.data)
 <LI><a href="#[1a7]">_GetByte_pPixel</a> from lcd_rle8.o(i._GetByte_pPixel) referenced from lcd_rle8.o(i._DrawBitmap_RLE8)
 <LI><a href="#[268]">_GetCharCode</a> from gui_uc.o(i._GetCharCode) referenced 2 times from gui_uc.o(.constdata)
 <LI><a href="#[269]">_GetCharSize</a> from gui_uc.o(i._GetCharSize) referenced 2 times from gui_uc.o(.constdata)
 <LI><a href="#[212]">_GetDevData</a> from gui_setalpha.o(i._GetDevData) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[210]">_GetDevFunc</a> from gui_setalpha.o(i._GetDevFunc) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[1b6]">_GetDevFunc_Exit</a> from guidrv_flexcolor.o(i._GetDevFunc_Exit) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1b3]">_GetDevFunc_Init</a> from guidrv_flexcolor.o(i._GetDevFunc_Init) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1b0]">_GetDevFunc_Off</a> from guidrv_flexcolor.o(i._GetDevFunc_Off) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1af]">_GetDevFunc_On</a> from guidrv_flexcolor.o(i._GetDevFunc_On) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1bb]">_GetDevFunc_SetRect</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRect) referenced from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
 <LI><a href="#[1b5]">_GetDevFunc_SetRectOutside</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1b2]">_GetDevFunc_SetSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[1b1]">_GetDevFunc_SetVSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetVSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[211]">_GetDevProp</a> from gui_setalpha.o(i._GetDevProp) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[205]">_GetIndexMask</a> from gui_setalpha.o(i._GetIndexMask) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[2a0]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[221]">_GetIndexMask_565</a> from guicc_565.o(i._GetIndexMask_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[1f6]">_GetIndexMask_8666</a> from guicc_8666.o(i._GetIndexMask_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[271]">_GetIndexMask_888</a> from guicc_888.o(i._GetIndexMask_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[225]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[276]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[1ad]">_GetMotionTagR</a> from wm_motion.o(i._GetMotionTagR) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[1aa]">_GetMotionTagXY</a> from wm_motion.o(i._GetMotionTagXY) referenced from wm_motion.o(i._ExecMotion)
 <LI><a href="#[1f9]">_GetNonExistingCharWidth</a> from gui_char.o(i._GetNonExistingCharWidth) referenced from gui_char.o(.constdata)
 <LI><a href="#[1f7]">_GetNonExistingCharWidth_Dummy</a> from gui_char.o(i._GetNonExistingCharWidth_Dummy) referenced from gui_char.o(.constdata)
 <LI><a href="#[20c]">_GetPixelIndex</a> from gui_setalpha.o(i._GetPixelIndex) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[213]">_GetRect</a> from gui_setalpha.o(i._GetRect) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[1ca]">_GetStuff</a> from gui_jpeg.o(i._GetStuff) referenced from gui_jpeg.o(i._StoreU8)
 <LI><a href="#[16e]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
 <LI><a href="#[16e]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i._GetStuff)
 <LI><a href="#[2a2]">_GetXSize</a> from gui_draw_self.o(i._GetXSize) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[2a3]">_GetYSize</a> from gui_draw_self.o(i._GetYSize) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[204]">_Index2Color</a> from gui_setalpha.o(i._Index2Color) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[1a4]">_Index2ColorBitfields</a> from gui_bmp.o(i._Index2ColorBitfields) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[207]">_Index2ColorBulk</a> from gui_setalpha.o(i._Index2ColorBulk) referenced 5 times from gui_setalpha.o(.constdata)
 <LI><a href="#[29f]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[14f]">_InvalidateNewItem</a> from graph_data_yt.o(i._InvalidateNewItem) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[236]">_Log2PhysX_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23a]">_Log2PhysX_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[238]">_Log2PhysX_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23c]">_Log2PhysX_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[237]">_Log2PhysX_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23b]">_Log2PhysX_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[239]">_Log2PhysX_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23d]">_Log2PhysX_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23e]">_Log2PhysY_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[242]">_Log2PhysY_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[240]">_Log2PhysY_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[244]">_Log2PhysY_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[23f]">_Log2PhysY_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[243]">_Log2PhysY_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[241]">_Log2PhysY_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[245]">_Log2PhysY_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[266]">_MULTIBUF_Begin</a> from wm_multibuf.o(i._MULTIBUF_Begin) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[267]">_MULTIBUF_End</a> from wm_multibuf.o(i._MULTIBUF_End) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[1ac]">_Motion_AutoWithinParent</a> from wm_motion.o(i._Motion_AutoWithinParent) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[1ab]">_Motion_ByWindow</a> from wm_motion.o(i._Motion_ByWindow) referenced from wm_motion.o(i._GetConfirmation)
 <LI><a href="#[22]">_NextPixel_End</a> from gui_bmp.o(i._NextPixel_End) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[21]">_NextPixel_NextLine</a> from gui_bmp.o(i._NextPixel_NextLine) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[20]">_NextPixel_SetPixel</a> from gui_bmp.o(i._NextPixel_SetPixel) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[1f]">_NextPixel_Start</a> from gui_bmp.o(i._NextPixel_Start) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[151]">_OnDelete</a> from graph_data_yt.o(i._OnDelete) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[163]">_OnExit</a> from gui_task.o(i._OnExit) referenced from gui_task.o(i.GUITASK_Init)
 <LI><a href="#[164]">_OnExit</a> from guiaa_lib.o(i._OnExit) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[167]">_OnExit</a> from gui_cursor.o(i._OnExit) referenced from gui_cursor.o(i.GUI_CURSOR_SelectEx)
 <LI><a href="#[173]">_OnExit</a> from gui_pid.o(i._OnExit) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[176]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[177]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[179]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[17b]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[198]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[199]">_OnExit</a> from wm_motion.o(i._OnExit) referenced from wm_motion.o(i.WM_MOTION_Enable)
 <LI><a href="#[1bd]">_OnExit</a> from gui_setalpha.o(i._OnExit) referenced from gui_setalpha.o(i._InitAlpha)
 <LI><a href="#[1c0]">_OnExit</a> from wm_touch.o(i._OnExit) referenced from wm_touch.o(i._RegisterExit)
 <LI><a href="#[150]">_OnPaint</a> from graph_data_yt.o(i._OnPaint) referenced from graph_data_yt.o(i.GRAPH_DATA_YT_Create)
 <LI><a href="#[152]">_OnPaint</a> from graph_scale.o(i._OnPaint) referenced from graph_scale.o(i.GRAPH_SCALE_Create)
 <LI><a href="#[30]">_OnPidStateChange</a> from button.o(i._OnPidStateChange) referenced 2 times from button.o(.data)
 <LI><a href="#[30]">_OnPidStateChange</a> from button.o(i._OnPidStateChange) referenced from button.o(i.BUTTON_SetReactOnLevel)
 <LI><a href="#[2f]">_OnTouchReactOnLevel</a> from button.o(i._OnTouchReactOnLevel) referenced 2 times from button.o(.data)
 <LI><a href="#[2f]">_OnTouchReactOnLevel</a> from button.o(i._OnTouchReactOnLevel) referenced from button.o(i.BUTTON_SetReactOnLevel)
 <LI><a href="#[32]">_Paint</a> from button_skin.o(i._Paint) referenced 18 times from button_skin.o(.data)
 <LI><a href="#[1e0]">_Paint0</a> from guidemo_fading.o(.text) referenced from guidemo_fading.o(.constdata)
 <LI><a href="#[1e1]">_Paint1</a> from guidemo_fading.o(.text) referenced from guidemo_fading.o(.constdata)
 <LI><a href="#[157]">_ReadData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._ReadData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[1c3]">_ReadPixelCust_16bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[1c2]">_ReadPixelCust_18bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[27]">_ReadPixel_16bpp_B16_I</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[27]">_ReadPixel_16bpp_B16_I</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_I) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
 <LI><a href="#[159]">_ReadPixel_16bpp_B16_II</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_II) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
 <LI><a href="#[15a]">_ReadPixel_16bpp_B16_III</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_III) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
 <LI><a href="#[15f]">_ReadPixel_16bpp_B8</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B8) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[160]">_ReadPixel_18bpp_B18</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_18bpp_B18) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[28]">_ReadPixel_18bpp_B9_I</a> from guidrv_flexcolor_func66712.o(i._ReadPixel_18bpp_B9_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[1ae]">_ReadRect</a> from gui_sprite.o(i._ReadRect) referenced from gui_sprite.o(i._GetDevFunc)
 <LI><a href="#[1c4]">_ReadRectCust_16bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[1c1]">_ReadRectCust_18bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[1bc]">_ReadRectFromMemdev</a> from gui_setalpha.o(i._ReadRectFromMemdev) referenced from gui_setalpha.o(i._GetLine)
 <LI><a href="#[161]">_ReadRect_18bpp_B18</a> from guidrv_flexcolor_func66712.o(i._ReadRect_18bpp_B18) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[61]">_Rect2TextRect</a> from lcd_rotate180.o(i._Rect2TextRect) referenced 6 times from lcd_rotate180.o(.data)
 <LI><a href="#[27a]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[279]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[1b4]">_SetDevFunc</a> from guidrv_flexcolor.o(i._SetDevFunc) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[27b]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[162]">_SetInterface</a> from guidrv_flexcolor_func66712.o(i._SetInterface) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[20f]">_SetOrg</a> from gui_setalpha.o(i._SetOrg) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[15e]">_SetOrientation</a> from guidrv_flexcolor_func66712.o(i._SetOrientation) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[15c]">_SetPhysRAMAddr</a> from guidrv_flexcolor_func66712.o(i._SetPhysRAMAddr) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[25]">_SetPixelAlpha</a> from gui_drawbitmap_8888.o(i._SetPixelAlpha) referenced 2 times from gui_drawbitmap_8888.o(.data)
 <LI><a href="#[20d]">_SetPixelIndex</a> from gui_setalpha.o(i._SetPixelIndex) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[15d]">_SetRect</a> from guidrv_flexcolor_func66712.o(i._SetRect) referenced from guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
 <LI><a href="#[1c7]">_SetReg_B16</a> from guidrv_flexcolor_func66712.o(i._SetReg_B16) referenced from guidrv_flexcolor_func66712.o(i._SetInterface)
 <LI><a href="#[29]">_SetReg_B18_I</a> from guidrv_flexcolor_func66712.o(i._SetReg_B18_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[1c5]">_SetReg_B8</a> from guidrv_flexcolor_func66712.o(i._SetReg_B8) referenced from guidrv_flexcolor_func66712.o(i._SetInterface)
 <LI><a href="#[2b]">_SetReg_B9_I</a> from guidrv_flexcolor_func66712.o(i._SetReg_B9_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[19e]">_Sort</a> from listview_setsort.o(i._Sort) referenced from listview_setsort.o(i._CreateSortObject)
 <LI><a href="#[64]">_TransformRect</a> from lcd_rotateccw.o(i._TransformRect) referenced 4 times from lcd_rotateccw.o(.data)
 <LI><a href="#[158]">_WriteData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._WriteData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[1c8]">_WritePara_B16</a> from guidrv_flexcolor_func66712.o(i._WritePara_B16) referenced from guidrv_flexcolor_func66712.o(i._SetInterface)
 <LI><a href="#[2a]">_WritePara_B18_I</a> from guidrv_flexcolor_func66712.o(i._WritePara_B18_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[1c6]">_WritePara_B8</a> from guidrv_flexcolor_func66712.o(i._WritePara_B8) referenced from guidrv_flexcolor_func66712.o(i._SetInterface)
 <LI><a href="#[2c]">_WritePara_B9_I</a> from guidrv_flexcolor_func66712.o(i._WritePara_B9_I) referenced 2 times from guidrv_flexcolor_func66712.o(.data)
 <LI><a href="#[20e]">_XorPixel</a> from gui_setalpha.o(i._XorPixel) referenced 7 times from gui_setalpha.o(.constdata)
 <LI><a href="#[2a6]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[12e]">_cbAnimation</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[197]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[123]">_cbBk</a> from guidemo_1.o(.text) referenced 3 times from guidemo_1.o(.text)
 <LI><a href="#[13a]">_cbBkWin</a> from guidemo_washingmachine.o(.text) referenced from guidemo_washingmachine.o(.text)
 <LI><a href="#[12d]">_cbBkWindow</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[13c]">_cbButton</a> from guidemo_washingmachine.o(.text) referenced from guidemo_washingmachine.o(.text)
 <LI><a href="#[134]">_cbClient</a> from guidemo_transparentdialog.o(.text) referenced from guidemo_transparentdialog.o(.text)
 <LI><a href="#[14b]">_cbClose</a> from framewin_buttonclose.o(i._cbClose) referenced from framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
 <LI><a href="#[136]">_cbDialog</a> from guidemo_transparentdialog.o(.text) referenced 2 times from guidemo_transparentdialog.o(.text)
 <LI><a href="#[12f]">_cbDialogOrder</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[12c]">_cbDialogProgress</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[12a]">_cbDialogSelect</a> from guidemo_skinning.o(.text) referenced from guidemo_skinning.o(.text)
 <LI><a href="#[128]">_cbDraw</a> from guidemo_radialmenu.o(.text) referenced from guidemo_radialmenu.o(.text)
 <LI><a href="#[122]">_cbEffect</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[133]">_cbFrame</a> from guidemo_transparentdialog.o(.text) referenced from guidemo_transparentdialog.o(.text)
 <LI><a href="#[11f]">_cbFrameWinControl</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[120]">_cbFrameWinInfo</a> from guidemo_1.o(.text) referenced from guidemo_1.o(.text)
 <LI><a href="#[195]">_cbInvalidateOne</a> from wm_lib.o(i._cbInvalidateOne) referenced from wm_lib.o(i.WM_BringToTop)
 <LI><a href="#[13b]">_cbMain</a> from guidemo_washingmachine.o(.text) referenced from guidemo_washingmachine.o(.text)
 <LI><a href="#[129]">_cbMotion</a> from guidemo_radialmenu.o(.text) referenced from guidemo_radialmenu.o(.text)
 <LI><a href="#[19a]">_cbMotion</a> from wm_motion.o(i._cbMotion) referenced from wm_motion.o(i.WM_MOTION_Enable)
 <LI><a href="#[19b]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[139]">_cbStatus</a> from guidemo_washingmachine.o(.text) referenced from guidemo_washingmachine.o(.text)
 <LI><a href="#[138]">_cbSubMenu</a> from guidemo_washingmachine.o(.text) referenced from guidemo_washingmachine.o(.text)
 <LI><a href="#[196]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[1c9]">_cbTimer</a> from wm_motion.o(i._cbTimer) referenced from wm_motion.o(i._StartMotionTimer)
 <LI><a href="#[146]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[145]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[c7]">app_main</a> from guidemo.o(.text) referenced from main.o(.text)
 <LI><a href="#[53]">memcpy</a> from memcpy.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[52]">memset</a> from memset.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[ca]">osRtxEventFlagsPostProcess</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[fc]">osRtxIdleThread</a> from rtx_config.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[df]">osRtxMemoryPoolPostProcess</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e9]">osRtxMessageQueuePostProcess</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[fb]">osRtxThreadPostProcess</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[2a5]">osRtxTimerSetup</a> from rtx_timer.o(.text) referenced from rtx_lib.o(.rodata)
 <LI><a href="#[2a4]">osRtxTimerThread</a> from rtx_timer.o(.text) referenced from rtx_lib.o(.rodata)
 <LI><a href="#[111]">osRtxTimerTick</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[2d7]">osThreadExit</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[54]">strcmp</a> from strcmpv7m.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[56]">strcpy</a> from strcpy.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[55]">strlen</a> from strlen.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[c8]">svcRtxDelay</a> from rtx_delay.o(.text) referenced from rtx_delay.o(.text)
 <LI><a href="#[c9]">svcRtxDelayUntil</a> from rtx_delay.o(.text) referenced from rtx_delay.o(.text)
 <LI><a href="#[ce]">svcRtxEventFlagsClear</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[d1]">svcRtxEventFlagsDelete</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[cf]">svcRtxEventFlagsGet</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[cc]">svcRtxEventFlagsGetName</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[cb]">svcRtxEventFlagsNew</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[cd]">svcRtxEventFlagsSet</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[d0]">svcRtxEventFlagsWait</a> from rtx_evflags.o(.text) referenced from rtx_evflags.o(.text)
 <LI><a href="#[d3]">svcRtxKernelGetInfo</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d4]">svcRtxKernelGetState</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[dd]">svcRtxKernelGetSysTimerCount</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[de]">svcRtxKernelGetSysTimerFreq</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[db]">svcRtxKernelGetTickCount</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[dc]">svcRtxKernelGetTickFreq</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d2]">svcRtxKernelInitialize</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d6]">svcRtxKernelLock</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d8]">svcRtxKernelRestoreLock</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[da]">svcRtxKernelResume</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d5]">svcRtxKernelStart</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d9]">svcRtxKernelSuspend</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[d7]">svcRtxKernelUnlock</a> from rtx_kernel.o(.text) referenced from rtx_kernel.o(.text)
 <LI><a href="#[e2]">svcRtxMemoryPoolAlloc</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e8]">svcRtxMemoryPoolDelete</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e3]">svcRtxMemoryPoolFree</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e5]">svcRtxMemoryPoolGetBlockSize</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e4]">svcRtxMemoryPoolGetCapacity</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e6]">svcRtxMemoryPoolGetCount</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e1]">svcRtxMemoryPoolGetName</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e7]">svcRtxMemoryPoolGetSpace</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[e0]">svcRtxMemoryPoolNew</a> from rtx_mempool.o(.text) referenced from rtx_mempool.o(.text)
 <LI><a href="#[f3]">svcRtxMessageQueueDelete</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[ed]">svcRtxMessageQueueGet</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[ee]">svcRtxMessageQueueGetCapacity</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[f0]">svcRtxMessageQueueGetCount</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[ef]">svcRtxMessageQueueGetMsgSize</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[eb]">svcRtxMessageQueueGetName</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[f1]">svcRtxMessageQueueGetSpace</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[ea]">svcRtxMessageQueueNew</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[ec]">svcRtxMessageQueuePut</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[f2]">svcRtxMessageQueueReset</a> from rtx_msgqueue.o(.text) referenced from rtx_msgqueue.o(.text)
 <LI><a href="#[f6]">svcRtxMutexAcquire</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[f9]">svcRtxMutexDelete</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[f5]">svcRtxMutexGetName</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[f8]">svcRtxMutexGetOwner</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[f4]">svcRtxMutexNew</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[f7]">svcRtxMutexRelease</a> from rtx_mutex.o(.text) referenced from rtx_mutex.o(.text)
 <LI><a href="#[108]">svcRtxThreadDetach</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10c]">svcRtxThreadEnumerate</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[fa]">svcRtxThreadExit</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10e]">svcRtxThreadFlagsClear</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10f]">svcRtxThreadFlagsGet</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10d]">svcRtxThreadFlagsSet</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[110]">svcRtxThreadFlagsWait</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10b]">svcRtxThreadGetCount</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[ff]">svcRtxThreadGetId</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[fe]">svcRtxThreadGetName</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[104]">svcRtxThreadGetPriority</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[101]">svcRtxThreadGetStackSize</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[102]">svcRtxThreadGetStackSpace</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[100]">svcRtxThreadGetState</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[109]">svcRtxThreadJoin</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[fd]">svcRtxThreadNew</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[107]">svcRtxThreadResume</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[103]">svcRtxThreadSetPriority</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[106]">svcRtxThreadSuspend</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[10a]">svcRtxThreadTerminate</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[105]">svcRtxThreadYield</a> from rtx_thread.o(.text) referenced from rtx_thread.o(.text)
 <LI><a href="#[117]">svcRtxTimerDelete</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[113]">svcRtxTimerGetName</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[116]">svcRtxTimerIsRunning</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[112]">svcRtxTimerNew</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[114]">svcRtxTimerStart</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
 <LI><a href="#[115]">svcRtxTimerStop</a> from rtx_timer.o(.text) referenced from rtx_timer.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a6]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2af]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2b1]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a10]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a11]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[a12]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[a13]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[a14]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2b2]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[623]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[a15]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[2bc]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[2b4]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[a16]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a17]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[2b6]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[a18]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a19]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a1a]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[a1b]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a1c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a1d]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[a1e]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[a1f]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[a20]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a21]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a22]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a23]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a24]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a25]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a26]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a27]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a28]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a29]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[2c1]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a2a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a2b]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a2c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a2d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[a2e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[a2f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[a30]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[a31]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[2b0]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a32]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2b8]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2ba]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __rt_entry_postsh_1 &rArr; _platform_post_stackheap_init &rArr; osKernelInitialize &rArr; osRtxKernelPreInit &rArr; EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
</UL>

<P><STRONG><a name="[2bb]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[2bd]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a33]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[633]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2c0]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a34]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2c2]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[a35]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[2f3]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>

<P><STRONG><a name="[2f5]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsClear
</UL>

<P><STRONG><a name="[2f7]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[2f8]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[a36]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a37]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a38]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a39]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a3a]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a3b]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[a3c]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c4]"></a>__asm___13_rtx_evflags_c_e167c757__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_evflags.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_link_put
</UL>

<P><STRONG><a name="[a3d]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a3e]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a3f]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a40]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a41]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3df]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[a42]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a43]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3e0]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[a44]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[a45]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[3de]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[2c5]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_mempool.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
</UL>

<P><STRONG><a name="[3f2]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[a46]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a47]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a48]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a49]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[3ef]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
</UL>

<P><STRONG><a name="[a4a]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a4b]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a4c]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[3f1]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[a4d]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[a4e]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c6]"></a>__asm___14_rtx_msgqueue_c_a86a7a93__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_msgqueue.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_a86a7a93__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_a86a7a93__atomic_link_put
</UL>

<P><STRONG><a name="[a4f]"></a>__asm___12_rtx_system_c_024f2f18__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a50]"></a>__asm___12_rtx_system_c_024f2f18__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a51]"></a>__asm___12_rtx_system_c_024f2f18__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a52]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a53]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a54]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[40c]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
</UL>

<P><STRONG><a name="[40d]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
</UL>

<P><STRONG><a name="[a55]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[a56]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[40f]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
</UL>

<P><STRONG><a name="[a57]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c7]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_system.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>

<P><STRONG><a name="[a58]"></a>__asm___12_rtx_thread_c_add96be5__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[413]"></a>__asm___12_rtx_thread_c_add96be5__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
</UL>

<P><STRONG><a name="[415]"></a>__asm___12_rtx_thread_c_add96be5__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsClear
</UL>

<P><STRONG><a name="[417]"></a>__asm___12_rtx_thread_c_add96be5__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[418]"></a>__asm___12_rtx_thread_c_add96be5__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[a59]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5a]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5b]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5c]"></a>__asm___12_rtx_thread_c_add96be5__atomic_dec32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5d]"></a>__asm___12_rtx_thread_c_add96be5__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5e]"></a>__asm___12_rtx_thread_c_add96be5__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[a5f]"></a>__asm___12_rtx_thread_c_add96be5__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c8]"></a>__asm___12_rtx_thread_c_add96be5__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_thread.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_link_put
</UL>

<P><STRONG><a name="[471]"></a>__asm___15_EventRecorder_c_e8d3082c__atomic_inc8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, eventrecorder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext
</UL>

<P><STRONG><a name="[462]"></a>__asm___15_EventRecorder_c_e8d3082c__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, eventrecorder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[467]"></a>__asm___15_EventRecorder_c_e8d3082c__atomic_xch32</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, eventrecorder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>

<P><STRONG><a name="[463]"></a>__asm___15_EventRecorder_c_e8d3082c__LockRecord</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, eventrecorder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[464]"></a>__asm___15_EventRecorder_c_e8d3082c__UnlockRecord</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, eventrecorder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[554]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[2c9]"></a>HAL_GetTick</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterReceive
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransmit
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_GetECC
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
</UL>

<P><STRONG><a name="[2be]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c7]"></a>app_main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = app_main &rArr; MainTask &rArr; GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2d8]"></a>Joystick_Initialize</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, joystick_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Joystick_Initialize &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Initialize
</UL>

<P><STRONG><a name="[2db]"></a>Joystick_Uninitialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, joystick_stmpe811.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Write
</UL>

<P><STRONG><a name="[2dc]"></a>Joystick_GetState</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, joystick_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Joystick_GetState &rArr; Touch_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
</UL>

<P><STRONG><a name="[2de]"></a>LCD_X_Init</STRONG> (Thumb, 432 bytes, Stack size 56 bytes, lcd_x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_X_Init &rArr; HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>

<P><STRONG><a name="[13f]"></a>LCD_X_Write0_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[a60]"></a>LCD_X_Read0_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_x.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>LCD_X_Write1_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[a61]"></a>LCD_X_Read1_16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_x.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>LCD_X_WriteM1_16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>LCD_X_ReadM1_16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[2e2]"></a>Touch_Initialize</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, touch_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Touch_Initialize &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Write
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Initialize
</UL>

<P><STRONG><a name="[2e4]"></a>Touch_Uninitialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, touch_stmpe811.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Write
</UL>

<P><STRONG><a name="[2e5]"></a>Touch_GetState</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, touch_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Touch_GetState &rArr; Touch_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Write
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[72]"></a>SVC_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>PendSV_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PendSV_Handler &rArr; osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SysTick_Handler &rArr; osRtxTick_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rtx_kernel.o(.text)
<LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2da]"></a>osDelay</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rtx_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelay
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Initialize
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_Initialize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>

<P><STRONG><a name="[2f0]"></a>osDelayUntil</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rtx_delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayUntil
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[30d]"></a>osEventFlagsNew</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osEventFlagsNew &rArr; EvrRtxEventFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsNew
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[311]"></a>osEventFlagsGetName</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsGetName
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[312]"></a>osEventFlagsSet</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSet
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_SignalEvent
</UL>

<P><STRONG><a name="[315]"></a>osEventFlagsClear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClear
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[317]"></a>osEventFlagsGet</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsGet
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[318]"></a>osEventFlagsWait</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWait
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitEventTimed
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_WaitEvent
</UL>

<P><STRONG><a name="[31b]"></a>osEventFlagsDelete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDelete
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[31d]"></a>EvrRtxMemoryInit</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMemoryInit &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
</UL>

<P><STRONG><a name="[31f]"></a>EvrRtxMemoryAlloc</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>

<P><STRONG><a name="[320]"></a>EvrRtxMemoryFree</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>

<P><STRONG><a name="[321]"></a>EvrRtxMemoryBlockInit</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMemoryBlockInit &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
</UL>

<P><STRONG><a name="[322]"></a>EvrRtxMemoryBlockAlloc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryBlockAlloc &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[324]"></a>EvrRtxMemoryBlockFree</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMemoryBlockFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[325]"></a>EvrRtxKernelError</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelResume
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelSuspend
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelSuspend
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelRestoreLock
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelUnlock
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelLock
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[326]"></a>EvrRtxKernelInitialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelInitialize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[327]"></a>EvrRtxKernelInitialized</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelInitialized &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[328]"></a>EvrRtxKernelGetInfo</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>

<P><STRONG><a name="[329]"></a>EvrRtxKernelInfoRetrieved</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = EvrRtxKernelInfoRetrieved &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
</UL>

<P><STRONG><a name="[32b]"></a>EvrRtxKernelStart</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelStart &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[32c]"></a>EvrRtxKernelStarted</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelStarted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[32d]"></a>EvrRtxKernelLock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
</UL>

<P><STRONG><a name="[32e]"></a>EvrRtxKernelLocked</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelLocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelLock
</UL>

<P><STRONG><a name="[32f]"></a>EvrRtxKernelUnlock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
</UL>

<P><STRONG><a name="[330]"></a>EvrRtxKernelUnlocked</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelUnlocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelUnlock
</UL>

<P><STRONG><a name="[331]"></a>EvrRtxKernelRestoreLock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
</UL>

<P><STRONG><a name="[332]"></a>EvrRtxKernelLockRestored</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelLockRestored &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelRestoreLock
</UL>

<P><STRONG><a name="[333]"></a>EvrRtxKernelSuspend</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelSuspend
</UL>

<P><STRONG><a name="[334]"></a>EvrRtxKernelSuspended</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelSuspended &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelSuspend
</UL>

<P><STRONG><a name="[335]"></a>EvrRtxKernelResume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelResume
</UL>

<P><STRONG><a name="[336]"></a>EvrRtxKernelResumed</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelResumed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelResume
</UL>

<P><STRONG><a name="[337]"></a>EvrRtxKernelGetTickCount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickCount
</UL>

<P><STRONG><a name="[338]"></a>EvrRtxKernelGetTickFreq</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelGetTickFreq &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickFreq
</UL>

<P><STRONG><a name="[339]"></a>EvrRtxKernelGetSysTimerCount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelGetSysTimerCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerCount
</UL>

<P><STRONG><a name="[33a]"></a>EvrRtxKernelGetSysTimerFreq</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxKernelGetSysTimerFreq &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerFreq
</UL>

<P><STRONG><a name="[33b]"></a>EvrRtxKernelErrorNotify</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>

<P><STRONG><a name="[33c]"></a>EvrRtxThreadError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadJoin
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadDetach
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadYield
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadDetach
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadResume
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[33d]"></a>EvrRtxThreadNew</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxThreadNew &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[33e]"></a>EvrRtxThreadCreated</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[33f]"></a>EvrRtxThreadGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetName
</UL>

<P><STRONG><a name="[340]"></a>EvrRtxThreadGetId</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
</UL>

<P><STRONG><a name="[341]"></a>EvrRtxThreadGetState</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadGetState &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetState
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetState
</UL>

<P><STRONG><a name="[342]"></a>EvrRtxThreadGetStackSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadGetStackSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSize
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetStackSize
</UL>

<P><STRONG><a name="[343]"></a>EvrRtxThreadGetStackSpace</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadGetStackSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSpace
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetStackSpace
</UL>

<P><STRONG><a name="[344]"></a>EvrRtxThreadSetPriority</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
</UL>

<P><STRONG><a name="[345]"></a>EvrRtxThreadPriorityUpdated</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadPriorityUpdated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
</UL>

<P><STRONG><a name="[346]"></a>EvrRtxThreadGetPriority</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadGetPriority &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetPriority
</UL>

<P><STRONG><a name="[347]"></a>EvrRtxThreadYield</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadYield
</UL>

<P><STRONG><a name="[348]"></a>EvrRtxThreadSuspend</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
</UL>

<P><STRONG><a name="[349]"></a>EvrRtxThreadSuspended</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadSuspended &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
</UL>

<P><STRONG><a name="[34a]"></a>EvrRtxThreadResume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
</UL>

<P><STRONG><a name="[34b]"></a>EvrRtxThreadResumed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadResumed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadResume
</UL>

<P><STRONG><a name="[34c]"></a>EvrRtxThreadDetach</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadDetach
</UL>

<P><STRONG><a name="[34d]"></a>EvrRtxThreadDetached</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadDetached &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadDetach
</UL>

<P><STRONG><a name="[34e]"></a>EvrRtxThreadJoin</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadJoin
</UL>

<P><STRONG><a name="[34f]"></a>EvrRtxThreadJoinPending</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadJoinPending &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
</UL>

<P><STRONG><a name="[350]"></a>EvrRtxThreadJoined</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadJoined &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
</UL>

<P><STRONG><a name="[351]"></a>EvrRtxThreadBlocked</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadBlocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[352]"></a>EvrRtxThreadUnblocked</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadUnblocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>

<P><STRONG><a name="[353]"></a>EvrRtxThreadPreempted</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
</UL>

<P><STRONG><a name="[354]"></a>EvrRtxThreadSwitched</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
</UL>

<P><STRONG><a name="[355]"></a>EvrRtxThreadExit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadExit &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
</UL>

<P><STRONG><a name="[356]"></a>EvrRtxThreadTerminate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
</UL>

<P><STRONG><a name="[357]"></a>EvrRtxThreadDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>

<P><STRONG><a name="[358]"></a>EvrRtxThreadGetCount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetCount
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetCount
</UL>

<P><STRONG><a name="[359]"></a>EvrRtxThreadEnumerate</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxThreadEnumerate &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadEnumerate
</UL>

<P><STRONG><a name="[35a]"></a>EvrRtxThreadFlagsError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxThreadFlagsSet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
</UL>

<P><STRONG><a name="[35b]"></a>EvrRtxThreadFlagsSet</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[35c]"></a>EvrRtxThreadFlagsSetDone</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadFlagsSetDone &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxThreadFlagsSet
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
</UL>

<P><STRONG><a name="[35d]"></a>EvrRtxThreadFlagsClear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
</UL>

<P><STRONG><a name="[35e]"></a>EvrRtxThreadFlagsClearDone</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadFlagsClearDone &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
</UL>

<P><STRONG><a name="[35f]"></a>EvrRtxThreadFlagsGet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadFlagsGet &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsGet
</UL>

<P><STRONG><a name="[360]"></a>EvrRtxThreadFlagsWait</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>

<P><STRONG><a name="[361]"></a>EvrRtxThreadFlagsWaitPending</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxThreadFlagsWaitPending &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
</UL>

<P><STRONG><a name="[362]"></a>EvrRtxThreadFlagsWaitTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxThreadFlagsWaitTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
</UL>

<P><STRONG><a name="[363]"></a>EvrRtxThreadFlagsWaitCompleted</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxThreadFlagsWaitCompleted &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[364]"></a>EvrRtxThreadFlagsWaitNotCompleted</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxThreadFlagsWaitNotCompleted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
</UL>

<P><STRONG><a name="[2e9]"></a>EvrRtxDelayError</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelayUntil
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[2ed]"></a>EvrRtxDelay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxDelay &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[2f1]"></a>EvrRtxDelayUntil</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
</UL>

<P><STRONG><a name="[2eb]"></a>EvrRtxDelayStarted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxDelayStarted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
</UL>

<P><STRONG><a name="[2ec]"></a>EvrRtxDelayUntilStarted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxDelayUntilStarted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelayUntil
</UL>

<P><STRONG><a name="[365]"></a>EvrRtxDelayCompleted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxDelayCompleted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[366]"></a>EvrRtxTimerError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
</UL>

<P><STRONG><a name="[367]"></a>EvrRtxTimerCallback</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerCallback &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[368]"></a>EvrRtxTimerNew</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxTimerNew &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[369]"></a>EvrRtxTimerCreated</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
</UL>

<P><STRONG><a name="[36a]"></a>EvrRtxTimerGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerGetName
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerGetName
</UL>

<P><STRONG><a name="[36b]"></a>EvrRtxTimerStart</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerStart &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
</UL>

<P><STRONG><a name="[36c]"></a>EvrRtxTimerStarted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxTimerStarted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
</UL>

<P><STRONG><a name="[36d]"></a>EvrRtxTimerStop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
</UL>

<P><STRONG><a name="[36e]"></a>EvrRtxTimerStopped</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxTimerStopped &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
</UL>

<P><STRONG><a name="[36f]"></a>EvrRtxTimerIsRunning</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxTimerIsRunning &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerIsRunning
</UL>

<P><STRONG><a name="[370]"></a>EvrRtxTimerDelete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
</UL>

<P><STRONG><a name="[371]"></a>EvrRtxTimerDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxTimerDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
</UL>

<P><STRONG><a name="[2fc]"></a>EvrRtxEventFlagsError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
</UL>

<P><STRONG><a name="[30e]"></a>EvrRtxEventFlagsNew</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxEventFlagsNew &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[2ff]"></a>EvrRtxEventFlagsCreated</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
</UL>

<P><STRONG><a name="[300]"></a>EvrRtxEventFlagsGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGetName
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsGetName
</UL>

<P><STRONG><a name="[313]"></a>EvrRtxEventFlagsSet</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[302]"></a>EvrRtxEventFlagsSetDone</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsSetDone &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[316]"></a>EvrRtxEventFlagsClear</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[303]"></a>EvrRtxEventFlagsClearDone</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsClearDone &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
</UL>

<P><STRONG><a name="[304]"></a>EvrRtxEventFlagsGet</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxEventFlagsGet &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsGet
</UL>

<P><STRONG><a name="[319]"></a>EvrRtxEventFlagsWait</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[305]"></a>EvrRtxEventFlagsWaitPending</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxEventFlagsWaitPending &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[307]"></a>EvrRtxEventFlagsWaitTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxEventFlagsWaitTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[2fb]"></a>EvrRtxEventFlagsWaitCompleted</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxEventFlagsWaitCompleted &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
</UL>

<P><STRONG><a name="[308]"></a>EvrRtxEventFlagsWaitNotCompleted</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxEventFlagsWaitNotCompleted &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[31c]"></a>EvrRtxEventFlagsDelete</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[30c]"></a>EvrRtxEventFlagsDestroyed</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxEventFlagsDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
</UL>

<P><STRONG><a name="[372]"></a>EvrRtxMutexError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[373]"></a>EvrRtxMutexNew</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexNew &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[374]"></a>EvrRtxMutexCreated</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
</UL>

<P><STRONG><a name="[375]"></a>EvrRtxMutexGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetName
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexGetName
</UL>

<P><STRONG><a name="[376]"></a>EvrRtxMutexAcquire</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexAcquire &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[377]"></a>EvrRtxMutexAcquirePending</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexAcquirePending &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[378]"></a>EvrRtxMutexAcquireTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexAcquireTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[379]"></a>EvrRtxMutexAcquired</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexAcquired &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[37a]"></a>EvrRtxMutexNotAcquired</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexNotAcquired &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[37b]"></a>EvrRtxMutexRelease</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexRelease &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[37c]"></a>EvrRtxMutexReleased</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexReleased &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
</UL>

<P><STRONG><a name="[37d]"></a>EvrRtxMutexGetOwner</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMutexGetOwner &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetOwner
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexGetOwner
</UL>

<P><STRONG><a name="[37e]"></a>EvrRtxMutexDelete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexDelete &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[37f]"></a>EvrRtxMutexDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMutexDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
</UL>

<P><STRONG><a name="[380]"></a>EvrRtxSemaphoreError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[381]"></a>EvrRtxSemaphoreNew</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>

<P><STRONG><a name="[382]"></a>EvrRtxSemaphoreCreated</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[383]"></a>EvrRtxSemaphoreGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[384]"></a>EvrRtxSemaphoreAcquire</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[385]"></a>EvrRtxSemaphoreAcquirePending</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[386]"></a>EvrRtxSemaphoreAcquireTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxSemaphoreAcquireTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[387]"></a>EvrRtxSemaphoreAcquired</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[388]"></a>EvrRtxSemaphoreNotAcquired</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[389]"></a>EvrRtxSemaphoreRelease</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[38a]"></a>EvrRtxSemaphoreReleased</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[38b]"></a>EvrRtxSemaphoreGetCount</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[38c]"></a>EvrRtxSemaphoreDelete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[38d]"></a>EvrRtxSemaphoreDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[38e]"></a>EvrRtxMemoryPoolError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolDelete
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolNew
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[38f]"></a>EvrRtxMemoryPoolNew</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolNew
</UL>

<P><STRONG><a name="[390]"></a>EvrRtxMemoryPoolCreated</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[391]"></a>EvrRtxMemoryPoolGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetName
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetName
</UL>

<P><STRONG><a name="[392]"></a>EvrRtxMemoryPoolAlloc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
</UL>

<P><STRONG><a name="[393]"></a>EvrRtxMemoryPoolAllocPending</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolAllocPending &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[394]"></a>EvrRtxMemoryPoolAllocTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMemoryPoolAllocTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[395]"></a>EvrRtxMemoryPoolAllocated</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolAllocated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolPostProcess
</UL>

<P><STRONG><a name="[396]"></a>EvrRtxMemoryPoolAllocFailed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMemoryPoolAllocFailed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[397]"></a>EvrRtxMemoryPoolFree</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolFree
</UL>

<P><STRONG><a name="[398]"></a>EvrRtxMemoryPoolDeallocated</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolDeallocated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[399]"></a>EvrRtxMemoryPoolFreeFailed</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolFreeFailed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[39a]"></a>EvrRtxMemoryPoolGetCapacity</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolGetCapacity &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetCapacity
</UL>

<P><STRONG><a name="[39b]"></a>EvrRtxMemoryPoolGetBlockSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolGetBlockSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetBlockSize
</UL>

<P><STRONG><a name="[39c]"></a>EvrRtxMemoryPoolGetCount</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetCount
</UL>

<P><STRONG><a name="[39d]"></a>EvrRtxMemoryPoolGetSpace</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMemoryPoolGetSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetSpace
</UL>

<P><STRONG><a name="[39e]"></a>EvrRtxMemoryPoolDelete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolDelete
</UL>

<P><STRONG><a name="[39f]"></a>EvrRtxMemoryPoolDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMemoryPoolDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
</UL>

<P><STRONG><a name="[3a0]"></a>EvrRtxMessageQueueError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueReset
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[3a1]"></a>EvrRtxMessageQueueNew</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[3a2]"></a>EvrRtxMessageQueueCreated</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueCreated &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[3a3]"></a>EvrRtxMessageQueueGetName</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetName
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetName
</UL>

<P><STRONG><a name="[3a4]"></a>EvrRtxMessageQueuePut</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMessageQueuePut &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[3a5]"></a>EvrRtxMessageQueuePutPending</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMessageQueuePutPending &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3a6]"></a>EvrRtxMessageQueuePutTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMessageQueuePutTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3a7]"></a>EvrRtxMessageQueueInsertPending</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueInsertPending &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3a8]"></a>EvrRtxMessageQueueInserted</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueInserted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3a9]"></a>EvrRtxMessageQueueNotInserted</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueNotInserted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[3aa]"></a>EvrRtxMessageQueueGet</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMessageQueueGet &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[3ab]"></a>EvrRtxMessageQueueGetPending</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EvrRtxMessageQueueGetPending &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3ac]"></a>EvrRtxMessageQueueGetTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMessageQueueGetTimeout &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3ad]"></a>EvrRtxMessageQueueRetrieved</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueRetrieved &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3ae]"></a>EvrRtxMessageQueueNotRetrieved</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueNotRetrieved &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3af]"></a>EvrRtxMessageQueueGetCapacity</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueGetCapacity &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetCapacity
</UL>

<P><STRONG><a name="[3b0]"></a>EvrRtxMessageQueueGetMsgSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueGetMsgSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetMsgSize
</UL>

<P><STRONG><a name="[3b1]"></a>EvrRtxMessageQueueGetCount</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetCount
</UL>

<P><STRONG><a name="[3b2]"></a>EvrRtxMessageQueueGetSpace</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EvrRtxMessageQueueGetSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetSpace
</UL>

<P><STRONG><a name="[3b3]"></a>EvrRtxMessageQueueReset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueReset
</UL>

<P><STRONG><a name="[3b4]"></a>EvrRtxMessageQueueResetDone</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMessageQueueResetDone &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
</UL>

<P><STRONG><a name="[3b5]"></a>EvrRtxMessageQueueDelete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
</UL>

<P><STRONG><a name="[3b6]"></a>EvrRtxMessageQueueDestroyed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_evr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EvrRtxMessageQueueDestroyed &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
</UL>

<P><STRONG><a name="[3c9]"></a>osRtxKernelErrorNotify</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>

<P><STRONG><a name="[2d3]"></a>osKernelInitialize</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osKernelInitialize &rArr; osRtxKernelPreInit &rArr; EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialize
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelPreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
</UL>

<P><STRONG><a name="[3cd]"></a>osKernelGetInfo</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPrivileged
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetInfo
</UL>

<P><STRONG><a name="[2ca]"></a>osKernelGetState</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsPrivileged
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetState
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelPreInit
</UL>

<P><STRONG><a name="[2d5]"></a>osKernelStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osKernelStart &rArr; EvrRtxKernelStart &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStart
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3cf]"></a>osKernelLock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLock
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>

<P><STRONG><a name="[3d0]"></a>osKernelUnlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelUnlock
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>

<P><STRONG><a name="[3d1]"></a>osKernelRestoreLock</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelRestoreLock
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>

<P><STRONG><a name="[3d2]"></a>osKernelSuspend</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelSuspend
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>

<P><STRONG><a name="[3d3]"></a>osKernelResume</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelResume
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>

<P><STRONG><a name="[2cb]"></a>osKernelGetTickCount</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickCount
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[3d4]"></a>osKernelGetTickFreq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetTickFreq
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3d5]"></a>osKernelGetSysTimerCount</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerCount
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3d6]"></a>osKernelGetSysTimerFreq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_kernel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerFreq
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[2ae]"></a>_platform_post_stackheap_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rtx_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _platform_post_stackheap_init &rArr; osKernelInitialize &rArr; osRtxKernelPreInit &rArr; EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_postsh_1
</UL>

<P><STRONG><a name="[2a8]"></a>osRtxKernelPreInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rtx_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxKernelPreInit &rArr; EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[2a9]"></a>__user_perthread_libspace</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rtx_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[2aa]"></a>_mutex_initialize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rtx_lib.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _mutex_initialize &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[2ab]"></a>_mutex_acquire</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtx_lib.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _mutex_acquire &rArr; osMutexAcquire &rArr; EvrRtxMutexAcquire &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[2ac]"></a>_mutex_release</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_lib.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _mutex_release &rArr; osMutexRelease &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[2ad]"></a>_mutex_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rtx_lib.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _mutex_free &rArr; osMutexDelete &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[3bb]"></a>osRtxMemoryInit</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, rtx_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osRtxMemoryInit &rArr; EvrRtxMemoryInit &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryInit
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemBlockPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[2fe]"></a>osRtxMemoryAlloc</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, rtx_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryAlloc
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemBlockPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[30b]"></a>osRtxMemoryFree</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, rtx_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryFree
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemBlockPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[3bc]"></a>osRtxMemoryPoolInit</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osRtxMemoryPoolInit &rArr; EvrRtxMemoryBlockInit &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[2fd]"></a>osRtxMemoryPoolAlloc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxMemoryPoolAlloc &rArr; EvrRtxMemoryBlockAlloc &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockAlloc
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_get
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerNew
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolPostProcess
</UL>

<P><STRONG><a name="[30a]"></a>osRtxMemoryPoolFree</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osRtxMemoryPoolFree &rArr; EvrRtxMemoryBlockFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockFree
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_dec32
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[3e2]"></a>osMemoryPoolNew</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolNew
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3e5]"></a>osMemoryPoolGetName</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetName
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3e6]"></a>osMemoryPoolAlloc</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocFailed
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocated
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAlloc
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3e7]"></a>osMemoryPoolFree</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolFree
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3e9]"></a>osMemoryPoolGetCapacity</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetCapacity
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3ea]"></a>osMemoryPoolGetBlockSize</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetBlockSize
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3eb]"></a>osMemoryPoolGetCount</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetCount
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3ec]"></a>osMemoryPoolGetSpace</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolGetSpace
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3ed]"></a>osMemoryPoolDelete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDelete
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3f5]"></a>osRtxMessageQueueTimerSetup</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = osRtxMessageQueueTimerSetup &rArr; svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerSetup
</UL>

<P><STRONG><a name="[3f6]"></a>osMessageQueueNew</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNew
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3f9]"></a>osMessageQueueGetName</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetName
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3fa]"></a>osMessageQueuePut</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = osMessageQueuePut &rArr; isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePut
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[3fc]"></a>osMessageQueueGet</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = osMessageQueueGet &rArr; isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGet
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[3fe]"></a>osMessageQueueGetCapacity</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetCapacity
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3ff]"></a>osMessageQueueGetMsgSize</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetMsgSize
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[400]"></a>osMessageQueueGetCount</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetCount
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[401]"></a>osMessageQueueGetSpace</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGetSpace
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[402]"></a>osMessageQueueReset</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueReset
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[403]"></a>osMessageQueueDelete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueDelete
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[404]"></a>osRtxMutexOwnerRelease</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[405]"></a>osRtxMutexOwnerRestore</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[3d9]"></a>osMutexNew</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexNew &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNew
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[409]"></a>osMutexGetName</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_mutex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetName
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3da]"></a>osMutexAcquire</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexAcquire &rArr; EvrRtxMutexAcquire &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquire
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
</UL>

<P><STRONG><a name="[3db]"></a>osMutexRelease</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexRelease &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexRelease
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[40a]"></a>osMutexGetOwner</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_mutex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetOwner
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3dc]"></a>osMutexDelete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_mutex.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osMutexDelete &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDelete
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_free
</UL>

<P><STRONG><a name="[2e8]"></a>osRtxTick_Handler</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, rtx_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osRtxTick_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_AcknowledgeIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2e7]"></a>osRtxPendSV_Handler</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, rtx_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[314]"></a>osRtxPostProcess</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rtx_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxThreadFlagsSet
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[306]"></a>osRtxThreadListPut</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[309]"></a>osRtxThreadListGet</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolPostProcess
</UL>

<P><STRONG><a name="[2f9]"></a>osRtxThreadListRemove</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadResume
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>

<P><STRONG><a name="[406]"></a>osRtxThreadListSort</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[411]"></a>osRtxThreadReadyPut</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
</UL>

<P><STRONG><a name="[3f4]"></a>osRtxThreadRegPtr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3c4]"></a>osRtxThreadDelayTick</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxThreadDelayTick &rArr; EvrRtxThreadUnblocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocTimeout
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquireTimeout
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayCompleted
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelResume
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3c1]"></a>osRtxThreadSwitch</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSwitched
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[301]"></a>osRtxThreadDispatch</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelResume
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadResume
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
</UL>

<P><STRONG><a name="[2fa]"></a>osRtxThreadWaitExit</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueDelete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolDelete
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolFree
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolPostProcess
</UL>

<P><STRONG><a name="[2ea]"></a>osRtxThreadWaitEnter</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadBlocked
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelayUntil
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[422]"></a>osRtxThreadStackCheck</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[2d7]"></a>osThreadExit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = osThreadExit &rArr; EvrRtxThreadError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadExit
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[3be]"></a>osRtxThreadStartup</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[2d4]"></a>osThreadNew</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osThreadNew &rArr; EvrRtxThreadNew &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadNew
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[427]"></a>osThreadGetName</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetName
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3d8]"></a>osThreadGetId</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
</UL>

<P><STRONG><a name="[428]"></a>osThreadGetState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetState
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[429]"></a>osThreadGetStackSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSize
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42a]"></a>osThreadGetStackSpace</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSpace
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42b]"></a>osThreadSetPriority</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSetPriority
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42c]"></a>osThreadGetPriority</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetPriority
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42d]"></a>osThreadYield</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadYield
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42e]"></a>osThreadSuspend</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSuspend
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[42f]"></a>osThreadResume</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadResume
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[430]"></a>osThreadDetach</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDetach
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[431]"></a>osThreadJoin</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoin
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[432]"></a>osThreadTerminate</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadTerminate
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[433]"></a>osThreadGetCount</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetCount
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[434]"></a>osThreadEnumerate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadEnumerate
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[435]"></a>osThreadFlagsSet</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSet
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxThreadFlagsSet
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[437]"></a>osThreadFlagsClear</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClear
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[438]"></a>osThreadFlagsGet</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsGet
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[439]"></a>osThreadFlagsWait</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWait
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[2a5]"></a>osRtxTimerSetup</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = osRtxTimerSetup &rArr; osRtxMessageQueueTimerSetup &rArr; svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueueTimerSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_lib.o(.rodata)
</UL>
<P><STRONG><a name="[2a4]"></a>osRtxTimerThread</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = osRtxTimerThread &rArr; osMessageQueueGet &rArr; isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCallback
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_lib.o(.rodata)
</UL>
<P><STRONG><a name="[43e]"></a>osTimerNew</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osTimerNew &rArr; EvrRtxTimerNew &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerNew
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[441]"></a>osTimerGetName</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerGetName
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[442]"></a>osTimerStart</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osTimerStart &rArr; EvrRtxTimerStart &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStart
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[443]"></a>osTimerStop</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStop
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[444]"></a>osTimerIsRunning</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerIsRunning
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[445]"></a>osTimerDelete</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDelete
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsException
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsIrqMasked
</UL>

<P><STRONG><a name="[3bf]"></a>OS_Tick_Setup</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, os_systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_Tick_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3ba]"></a>OS_Tick_Enable</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KernelUnblock
</UL>

<P><STRONG><a name="[3b8]"></a>OS_Tick_Disable</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KernelBlock
</UL>

<P><STRONG><a name="[410]"></a>OS_Tick_AcknowledgeIRQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3c0]"></a>OS_Tick_GetIRQn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3c8]"></a>OS_Tick_GetClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerFreq
</UL>

<P><STRONG><a name="[3c7]"></a>OS_Tick_GetInterval</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerCount
</UL>

<P><STRONG><a name="[3c5]"></a>OS_Tick_GetCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerCount
</UL>

<P><STRONG><a name="[3c6]"></a>OS_Tick_GetOverflow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, os_systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetSysTimerCount
</UL>

<P><STRONG><a name="[fc]"></a>osRtxIdleThread</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_config.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[3ca]"></a>osRtxErrorNotify</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>

<P><STRONG><a name="[95]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C1_EV_IRQHandler &rArr; I2C_EV_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2C1_ER_IRQHandler &rArr; I2C_ER_IRQHandler &rArr; HAL_DMA_Abort &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Stream6_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[466]"></a>EventRecorderTimerGetCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, eventrecorder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
</UL>

<P><STRONG><a name="[46a]"></a>EventRecorderTimerSetup</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, eventrecorder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[46b]"></a>EventRecorderTimerGetFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, eventrecorder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderClockUpdate
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[468]"></a>EventRecorderStart</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[46c]"></a>EventRecorderEnable</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EventRecorderEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[3d7]"></a>EventRecorderInitialize</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EventRecorderInitialize &rArr; EventRecorderStart &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerGetFreq
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerSetup
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderEnable
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelPreInit
</UL>

<P><STRONG><a name="[a62]"></a>EventRecorderDisable</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, eventrecorder.o(.text), UNUSED)

<P><STRONG><a name="[46d]"></a>EventRecorderStop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, eventrecorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[46e]"></a>EventRecorderClockUpdate</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, eventrecorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerGetFreq
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>

<P><STRONG><a name="[32a]"></a>EventRecordData</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventCheckFilter
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInfoRetrieved
</UL>

<P><STRONG><a name="[323]"></a>EventRecord2</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventCheckFilter
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueDestroyed
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueDelete
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueResetDone
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueReset
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetSpace
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetCount
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetMsgSize
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetCapacity
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInsertPending
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetName
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueCreated
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDestroyed
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDelete
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetSpace
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetCount
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetBlockSize
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetCapacity
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolFreeFailed
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDeallocated
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolFree
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocFailed
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocated
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocTimeout
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocPending
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAlloc
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetName
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolCreated
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreDestroyed
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreDelete
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreGetCount
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreReleased
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreRelease
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreNotAcquired
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquired
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquireTimeout
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquirePending
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquire
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreGetName
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreCreated
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreError
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDestroyed
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDelete
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetOwner
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexRelease
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNotAcquired
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquirePending
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquire
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetName
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexCreated
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNew
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDestroyed
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDelete
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerIsRunning
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStopped
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStop
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStarted
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStart
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerGetName
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCreated
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCallback
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayCompleted
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitNotCompleted
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsGet
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClearDone
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClear
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSetDone
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSet
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetCount
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDestroyed
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadTerminate
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadExit
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSwitched
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadBlocked
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoined
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoinPending
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoin
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDetached
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDetach
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadResumed
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadResume
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSuspended
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSuspend
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadYield
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetPriority
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPriorityUpdated
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSetPriority
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSpace
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSize
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetState
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetId
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetName
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadCreated
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelErrorNotify
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetSysTimerFreq
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetSysTimerCount
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetTickFreq
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetTickCount
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelResumed
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelResume
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelSuspended
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelSuspend
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLockRestored
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelRestoreLock
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelUnlocked
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelUnlock
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLocked
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStarted
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStart
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInfoRetrieved
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialized
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialize
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockAlloc
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSet
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsNew
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsGetName
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsGet
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDestroyed
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDelete
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsCreated
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClearDone
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClear
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayUntilStarted
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayUntil
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayStarted
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelay
</UL>

<P><STRONG><a name="[31e]"></a>EventRecord4</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventCheckFilter
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetPending
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGet
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutPending
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePut
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNew
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolNew
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreNew
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerNew
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitPending
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWait
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadEnumerate
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadNew
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetInfo
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockFree
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockInit
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryFree
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryAlloc
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryInit
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitPending
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWait
</UL>

<P><STRONG><a name="[476]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[472]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SetTickFreq
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[478]"></a>HAL_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DeInit
</UL>

<P><STRONG><a name="[477]"></a>HAL_DeInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspDeInit
</UL>

<P><STRONG><a name="[a63]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a64]"></a>HAL_GetTickPrio</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[479]"></a>HAL_SetTickFreq</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a65]"></a>HAL_GetTickFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[458]"></a>HAL_Delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_Delay &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
</UL>

<P><STRONG><a name="[a66]"></a>HAL_SuspendTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a67]"></a>HAL_ResumeTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a68]"></a>HAL_GetHalVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a69]"></a>HAL_GetDEVID</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6a]"></a>HAL_DBGMCU_EnableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6b]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6c]"></a>HAL_DBGMCU_EnableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6d]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6e]"></a>HAL_DBGMCU_EnableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a6f]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a70]"></a>HAL_EnableCompensationCell</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a71]"></a>HAL_DisableCompensationCell</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a72]"></a>HAL_GetUIDw0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a73]"></a>HAL_GetUIDw1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[a74]"></a>HAL_GetUIDw2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[475]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[474]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[44f]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_PowerControl
</UL>

<P><STRONG><a name="[44d]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_PowerControl
</UL>

<P><STRONG><a name="[a75]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[473]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a76]"></a>HAL_MPU_Disable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[a77]"></a>HAL_MPU_Enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[a78]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[47c]"></a>HAL_NVIC_GetPriorityGrouping</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[a79]"></a>HAL_NVIC_GetPriority</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[a7a]"></a>HAL_NVIC_SetPendingIRQ</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[a7b]"></a>HAL_NVIC_GetPendingIRQ</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[450]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_PowerControl
</UL>

<P><STRONG><a name="[a7c]"></a>HAL_NVIC_GetActive</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[a7d]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[47e]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[47d]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[448]"></a>HAL_DMA_Init</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_DMA_Init &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Initialize
</UL>

<P><STRONG><a name="[481]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>

<P><STRONG><a name="[482]"></a>HAL_DMA_Start</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>

<P><STRONG><a name="[452]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveReceive
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveTransmit
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterReceive
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransmit
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Write_DMA
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Read_DMA
</UL>

<P><STRONG><a name="[44e]"></a>HAL_DMA_Abort</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_DMA_Abort &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ER_IRQHandler
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_PowerControl
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
</UL>

<P><STRONG><a name="[a7e]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[484]"></a>HAL_DMA_PollForTransfer</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[45e]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 570 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[a7f]"></a>HAL_DMA_RegisterCallback</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[a80]"></a>HAL_DMA_UnRegisterCallback</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[a81]"></a>HAL_DMA_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[a82]"></a>HAL_DMA_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[2df]"></a>HAL_GPIO_Init</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Init
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Initialize
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
</UL>

<P><STRONG><a name="[44b]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Uninitialize
</UL>

<P><STRONG><a name="[459]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
</UL>

<P><STRONG><a name="[2e1]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Init
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
</UL>

<P><STRONG><a name="[a83]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[a84]"></a>HAL_GPIO_LockPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[486]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[485]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[2cd]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1152 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[487]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 390 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[489]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[a85]"></a>HAL_RCC_EnableCSS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[a86]"></a>HAL_RCC_DisableCSS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[48a]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[457]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
</UL>

<P><STRONG><a name="[48b]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[a87]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[a88]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[48d]"></a>HAL_RCC_CSSCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_NMI_IRQHandler
</UL>

<P><STRONG><a name="[48c]"></a>HAL_RCC_NMI_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_CSSCallback
</UL>

<P><STRONG><a name="[48e]"></a>HAL_SRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[2e0]"></a>HAL_SRAM_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_hal_sram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Timing_Init
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Init
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Init
</UL>

<P><STRONG><a name="[493]"></a>HAL_SRAM_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_DeInit
</UL>

<P><STRONG><a name="[492]"></a>HAL_SRAM_DeInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspDeInit
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_DeInit
</UL>

<P><STRONG><a name="[118]"></a>HAL_SRAM_DMA_XferCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sram.o(.text)
</UL>
<P><STRONG><a name="[119]"></a>HAL_SRAM_DMA_XferErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_sram.o(.text)
</UL>
<P><STRONG><a name="[a89]"></a>HAL_SRAM_Read_8b</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[a8a]"></a>HAL_SRAM_Write_8b</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[a8b]"></a>HAL_SRAM_Read_16b</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[a8c]"></a>HAL_SRAM_Write_16b</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[a8d]"></a>HAL_SRAM_Read_32b</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[a8e]"></a>HAL_SRAM_Write_32b</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[495]"></a>HAL_SRAM_Read_DMA</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[496]"></a>HAL_SRAM_Write_DMA</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[497]"></a>HAL_SRAM_WriteOperation_Enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_WriteOperation_Enable
</UL>

<P><STRONG><a name="[499]"></a>HAL_SRAM_WriteOperation_Disable</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_WriteOperation_Disable
</UL>

<P><STRONG><a name="[a8f]"></a>HAL_SRAM_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_sram.o(.text), UNUSED)

<P><STRONG><a name="[48f]"></a>FSMC_NORSRAM_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NORSRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[494]"></a>FSMC_NORSRAM_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_DeInit
</UL>

<P><STRONG><a name="[490]"></a>FSMC_NORSRAM_Timing_Init</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f4xx_ll_fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[491]"></a>FSMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f4xx_ll_fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[498]"></a>FSMC_NORSRAM_WriteOperation_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_WriteOperation_Enable
</UL>

<P><STRONG><a name="[49a]"></a>FSMC_NORSRAM_WriteOperation_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_WriteOperation_Disable
</UL>

<P><STRONG><a name="[a90]"></a>FSMC_NAND_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a91]"></a>FSMC_NAND_CommonSpace_Timing_Init</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a92]"></a>FSMC_NAND_AttributeSpace_Timing_Init</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a93]"></a>FSMC_NAND_DeInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a94]"></a>FSMC_NAND_ECC_Enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a95]"></a>FSMC_NAND_ECC_Disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[49b]"></a>FSMC_NAND_GetECC</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[a96]"></a>FSMC_PCCARD_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a97]"></a>FSMC_PCCARD_CommonSpace_Timing_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a98]"></a>FSMC_PCCARD_AttributeSpace_Timing_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a99]"></a>FSMC_PCCARD_IOSpace_Timing_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[a9a]"></a>FSMC_PCCARD_DeInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_ll_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c4]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b9]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[632]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11a]"></a>SystemInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SystemInit_ExtMemCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[2d2]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49e]"></a>GUIDEMO_CheckCancel</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
</UL>

<P><STRONG><a name="[4b3]"></a>GUIDEMO_ClearHalt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidemo_1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[4c9]"></a>GUIDEMO_AddIntToString</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIDEMO_AddIntToString
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[4c8]"></a>GUIDEMO_AddStringToString</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_AddStringToString
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[4ca]"></a>GUIDEMO_NotifyStartNext</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUIDEMO_NotifyStartNext &rArr; _UpdateControlText &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
</UL>

<P><STRONG><a name="[4cb]"></a>GUIDEMO_GetTime</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUIDEMO_GetTime &rArr; GUI_GetTime &rArr; GUI_X_GetTime &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
</UL>

<P><STRONG><a name="[4ce]"></a>GUIDEMO_Delay</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[4d2]"></a>GUIDEMO_Wait</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
</UL>

<P><STRONG><a name="[4d7]"></a>GUIDEMO_DrawBk</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
</UL>

<P><STRONG><a name="[4d4]"></a>GUIDEMO_GetConfFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidemo_1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4d3]"></a>GUIDEMO_ShowCursor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUIDEMO_ShowCursor &rArr; GUI_CURSOR_Show &rArr; GUI_CURSOR_ShowEx &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
</UL>

<P><STRONG><a name="[4ea]"></a>GUIDEMO_HideCursor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GUIDEMO_HideCursor &rArr; GUI_CURSOR_Hide &rArr; GUI_CURSOR_HideEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>

<P><STRONG><a name="[4ec]"></a>GUIDEMO_SetInfoText</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GUIDEMO_SetInfoText &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[4ee]"></a>GUIDEMO_CheckCancelDelay</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[a9b]"></a>GUIDEMO_ClearText</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidemo_1.o(.text), UNUSED)

<P><STRONG><a name="[4ef]"></a>GUIDEMO_ConfigureDemo</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_TransparentDialog
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speedometer
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Skinning
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Fading
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
</UL>

<P><STRONG><a name="[4f0]"></a>GUIDEMO_DispTitle</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUIDEMO_DispTitle &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
</UL>

<P><STRONG><a name="[4f2]"></a>GUIDEMO_DispHint</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, guidemo_1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[a9c]"></a>GUIDEMO_GetTitleSizeY</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidemo_1.o(.text), UNUSED)

<P><STRONG><a name="[4f3]"></a>GUIDEMO_Main</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetDefaultSkin
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultSkin
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetDefaultSkin
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDefaultSkin
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetAnimationCallback
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Config
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultSkin
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetReactOnLevel
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[51f]"></a>GUIDEMO_MixColors</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUIDEMO_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPalette
</UL>

<P><STRONG><a name="[54c]"></a>GUIDEMO_ShiftRight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIDEMO_ShiftRight
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[1a]"></a>GUIDEMO_Automotive</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = GUIDEMO_Automotive &rArr; _AutomotiveDemo &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>GUIDEMO_BarGraph</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidemo_bargraph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = GUIDEMO_BarGraph &rArr; _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>GUIDEMO_Bitmap</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = GUIDEMO_Bitmap &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>GUIDEMO_ColorBar</STRONG> (Thumb, 872 bytes, Stack size 280 bytes, guidemo_colorbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = GUIDEMO_ColorBar &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[4fc]"></a>GUIDEMO_Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidemo_conf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[18]"></a>GUIDEMO_Cursor</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GUIDEMO_Cursor &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>GUIDEMO_Fading</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GUIDEMO_Fading &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>GUIDEMO_Graph</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = GUIDEMO_Graph &rArr; _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[4e8]"></a>GUIDEMO_Intro</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, guidemo_intro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetVersionString
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[15]"></a>GUIDEMO_Listview</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = GUIDEMO_Listview &rArr; _DemoListview &rArr; _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>GUIDEMO_RadialMenu</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guidemo_radialmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GUIDEMO_RadialMenu &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>GUIDEMO_Skinning</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = GUIDEMO_Skinning &rArr; _DemoSkinning &rArr; GUI_MEMDEV_MoveInWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>GUIDEMO_Speed</STRONG> (Thumb, 456 bytes, Stack size 136 bytes, guidemo_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = GUIDEMO_Speed &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>GUIDEMO_Speedometer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = GUIDEMO_Speedometer &rArr; _SpeedometerDemo &rArr; _RollIn &rArr; _Roll &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[2d6]"></a>MainTask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo_start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = MainTask &rArr; GUIDEMO_Main &rArr; _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MULTIBUF_Enable
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[12]"></a>GUIDEMO_TransparentDialog</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GUIDEMO_TransparentDialog &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>GUIDEMO_Treeview</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = GUIDEMO_Treeview &rArr; _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>GUIDEMO_WashingMachine</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GUIDEMO_WashingMachine &rArr; GUIDEMO_ConfigureDemo &rArr; _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_conf.o(.data)
</UL>
<P><STRONG><a name="[602]"></a>GUI_JOYSTICK_Initialize</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_joystick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_JOYSTICK_Initialize &rArr; Joystick_Initialize &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[603]"></a>GUI_JOYSTICK_Exec</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, gui_x_joystick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_JOYSTICK_Exec &rArr; Joystick_GetState &rArr; Touch_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_GetState
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Tick
</UL>

<P><STRONG><a name="[604]"></a>GUI_X_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_X_GetTime &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[605]"></a>GUI_X_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_X_Delay &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[607]"></a>GUI_X_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_X_Init &rArr; osTimerNew &rArr; EvrRtxTimerNew &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Initialize
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[5a]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_X_ExecIdle &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[a9d]"></a>GUI_X_Log</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_rte.o(.text), UNUSED)

<P><STRONG><a name="[a9e]"></a>GUI_X_Warn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_rte.o(.text), UNUSED)

<P><STRONG><a name="[a9f]"></a>GUI_X_ErrorOut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_rte.o(.text), UNUSED)

<P><STRONG><a name="[609]"></a>GUI_X_InitOS</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_X_InitOS &rArr; osEventFlagsNew &rArr; EvrRtxEventFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[60a]"></a>GUI_X_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_X_Unlock &rArr; osMutexRelease &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[60b]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_X_Lock &rArr; osMutexAcquire &rArr; EvrRtxMutexAcquire &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[60c]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>

<P><STRONG><a name="[60d]"></a>GUI_X_WaitEvent</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_x_rte.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[60e]"></a>GUI_X_WaitEventTimed</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_x_rte.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[60f]"></a>GUI_X_SignalEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_rte.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[608]"></a>GUI_TOUCH_Initialize</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_TOUCH_Initialize &rArr; Touch_Initialize &rArr; osDelay &rArr; EvrRtxDelayError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[61f]"></a>GUI_TOUCH_SetOrientation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[aa0]"></a>GUI_TOUCH_GetxPhys</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_touch.o(.text), UNUSED)

<P><STRONG><a name="[aa1]"></a>GUI_TOUCH_GetyPhys</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_touch.o(.text), UNUSED)

<P><STRONG><a name="[610]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, gui_x_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TOUCH_Calibrate &rArr; LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[aa2]"></a>GUI_TOUCH_GetCalData</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_x_touch.o(.text), UNUSED)

<P><STRONG><a name="[606]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, gui_x_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_TOUCH_Exec &rArr; Touch_GetState &rArr; Touch_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetState
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Tick
</UL>

<P><STRONG><a name="[612]"></a>GUI_X_Config</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guiconf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[617]"></a>LCD_X_Config</STRONG> (Thumb, 192 bytes, Stack size 136 bytes, lcdconf_mcbqvga_lg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_SetOrientation
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetReadFunc66712_B16
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[620]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcdconf_mcbqvga_lg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = LCD_X_DisplayDriver &rArr; _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_On
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Off
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[488]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[aa3]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[555]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[622]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[2b3]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[625]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[2b7]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[807]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[56]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[552]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>

<P><STRONG><a name="[3bd]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetInfo
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[626]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[aa4]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[6de]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>

<P><STRONG><a name="[627]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[aa5]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>memcpy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[51b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkinFlexProps
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetSkinFlexProps
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__SetLog2Phys
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[aa6]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[aa7]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[aa8]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>memset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[62a]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[3e1]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMemoryPoolNew
</UL>

<P><STRONG><a name="[62b]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[629]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>

<P><STRONG><a name="[449]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Initialize
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHuffmanTable
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorHQ
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[aa9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[aaa]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[62c]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[54]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[aab]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aac]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aad]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[62d]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[62f]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[624]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[621]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[145]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[aae]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[aaf]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[630]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[628]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[ab0]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[62e]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[ab1]"></a>__errno$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text), UNUSED)

<P><STRONG><a name="[ab2]"></a>__rt_errno_addr$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_twolibspace.o(.text), UNUSED)

<P><STRONG><a name="[ab3]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[631]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2b9]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2bf]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2c3]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ab4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ab5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ab6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>BUTTON_Callback</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[63d]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[601]"></a>BUTTON_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[186]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo_1.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[63e]"></a>BUTTON_CreateUser</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>

<P><STRONG><a name="[31]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 562 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_BUTTON
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.text)
<LI> button.o(.data)
</UL>
<P><STRONG><a name="[4dc]"></a>BUTTON_IsPressed</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, button.o(i.BUTTON_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BUTTON_IsPressed &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_BUTTON
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[4e5]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_skin.o(i.BUTTON_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[63c]"></a>BUTTON_SetPressed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[4f6]"></a>BUTTON_SetReactOnLevel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetReactOnLevel))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[649]"></a>BUTTON_SetSelfDraw</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, button_selfdraw.o(i.BUTTON_SetSelfDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = BUTTON_SetSelfDraw &rArr; BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[64a]"></a>BUTTON_SetSelfDrawEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, button_selfdraw.o(i.BUTTON_SetSelfDrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>

<P><STRONG><a name="[63f]"></a>BUTTON_SetText</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[63a]"></a>BUTTON_Toggle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, button.o(i.BUTTON_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = BUTTON_Toggle &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[64c]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, button__setdrawobj.o(i.BUTTON__SetDrawObj))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[69]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_skinning.o(.text)
<LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[653]"></a>CHECKBOX_GetBkColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CHECKBOX_GetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[650]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, checkbox_skinflex.o(i.CHECKBOX_GetSkinFlexButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CHECKBOX_GetSkinFlexButtonSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[599]"></a>CHECKBOX_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, checkbox_skin.o(i.CHECKBOX_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[68]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 48 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CHECKBOX__GetButtonSize &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[659]"></a>DROPDOWN_AddKey</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, dropdown.o(i.DROPDOWN_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DROPDOWN_AddKey &rArr; DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[57b]"></a>DROPDOWN_AddString</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DROPDOWN_AddString &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[148]"></a>DROPDOWN_Callback</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, dropdown.o(i.DROPDOWN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = DROPDOWN_Callback &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(i.DROPDOWN_CreateUser)
</UL>
<P><STRONG><a name="[662]"></a>DROPDOWN_Collapse</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = DROPDOWN_Collapse &rArr; WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[1f0]"></a>DROPDOWN_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, dropdown.o(i.DROPDOWN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = DROPDOWN_CreateIndirect &rArr; DROPDOWN_CreateUser &rArr; DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[668]"></a>DROPDOWN_CreateUser</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, dropdown.o(i.DROPDOWN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = DROPDOWN_CreateUser &rArr; DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateIndirect
</UL>

<P><STRONG><a name="[65d]"></a>DROPDOWN_DecSel</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DROPDOWN_DecSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[36]"></a>DROPDOWN_DrawSkinFlex</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DROPDOWN_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_skinning.o(.text)
<LI> dropdown.o(.data)
</UL>
<P><STRONG><a name="[667]"></a>DROPDOWN_Expand</STRONG> (Thumb, 560 bytes, Stack size 160 bytes, dropdown.o(i.DROPDOWN_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[66c]"></a>DROPDOWN_GetItemDisabled</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, dropdown_itemdisabled.o(i.DROPDOWN_GetItemDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DROPDOWN_GetItemDisabled &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
</UL>

<P><STRONG><a name="[67f]"></a>DROPDOWN_GetNumItems</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DROPDOWN_GetNumItems &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
</UL>

<P><STRONG><a name="[66b]"></a>DROPDOWN_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DROPDOWN_GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
</UL>

<P><STRONG><a name="[65c]"></a>DROPDOWN_IncSel</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[57c]"></a>DROPDOWN_SetBkColor</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = DROPDOWN_SetBkColor &rArr; LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[59a]"></a>DROPDOWN_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dropdown_skin.o(i.DROPDOWN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[65f]"></a>DROPDOWN_SetSel</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[57d]"></a>DROPDOWN_SetTextColor</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = DROPDOWN_SetTextColor &rArr; LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[669]"></a>DROPDOWN__AdjustHeight</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN__AdjustHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>

<P><STRONG><a name="[65a]"></a>DROPDOWN__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(i.DROPDOWN__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DROPDOWN__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[65e]"></a>DROPDOWN__GetpItemLocked</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DROPDOWN__GetpItemLocked &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[682]"></a>EDIT_AddKey</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, edit.o(i.EDIT_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = EDIT_AddKey &rArr; EDIT__SetCursorPosEx &rArr; _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPosEx
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[149]"></a>EDIT_Callback</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, edit.o(i.EDIT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = EDIT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageTimer
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(i.EDIT_CreateUser)
</UL>
<P><STRONG><a name="[1ee]"></a>EDIT_CreateIndirect</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, edit.o(i.EDIT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = EDIT_CreateIndirect &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[68e]"></a>EDIT_CreateUser</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, edit.o(i.EDIT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[690]"></a>EDIT_GetCursorPixelPos</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, edit.o(i.EDIT_GetCursorPixelPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>

<P><STRONG><a name="[68a]"></a>EDIT_GetNumChars</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, edit.o(i.EDIT_GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDIT_GetNumChars &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[58f]"></a>EDIT_SetBkColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EDIT_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[68c]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, edit.o(i.EDIT_SetCursorAtPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[580]"></a>EDIT_SetText</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, edit.o(i.EDIT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EDIT_SetText &rArr; _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
</UL>

<P><STRONG><a name="[58e]"></a>EDIT_SetTextAlign</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = EDIT_SetTextAlign &rArr; _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[689]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit.o(i.EDIT__SetCursorPos))
<BR><BR>[Called By]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[685]"></a>EDIT__SetCursorPosEx</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, edit.o(i.EDIT__SetCursorPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EDIT__SetCursorPosEx &rArr; _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[699]"></a>FRAMEWIN_AddButton</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, framewin_addbutton.o(i.FRAMEWIN_AddButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[591]"></a>FRAMEWIN_AddCloseButton</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = FRAMEWIN_AddCloseButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[14c]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 440 bytes, Stack size 88 bytes, framewin.o(i.FRAMEWIN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[184]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, framewin.o(i.FRAMEWIN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>
<BR>[Address Reference Count : 5]<UL><LI> guidemo_1.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_transparentdialog.o(.constdata)
<LI> guidemo_treeview.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[6a3]"></a>FRAMEWIN_CreateUser</STRONG> (Thumb, 230 bytes, Stack size 80 bytes, framewin.o(i.FRAMEWIN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
</UL>

<P><STRONG><a name="[3a]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 888 bytes, Stack size 112 bytes, framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin
</UL>
<BR>[Address Reference Count : 2]<UL><LI> framewin_skin.o(.data)
<LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[6a6]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_GetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FRAMEWIN_GetActive &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[69b]"></a>FRAMEWIN_GetBorderSize</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FRAMEWIN_GetBorderSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[6aa]"></a>FRAMEWIN_GetBorderSizeEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, framewin.o(i.FRAMEWIN_GetBorderSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = FRAMEWIN_GetBorderSizeEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[59c]"></a>FRAMEWIN_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[4f7]"></a>FRAMEWIN_GetSkinFlexProps</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_skinflex.o(i.FRAMEWIN_GetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN_GetSkinFlexProps &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[4df]"></a>FRAMEWIN_GetText</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, framewin.o(i.FRAMEWIN_GetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = FRAMEWIN_GetText &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
</UL>

<P><STRONG><a name="[69a]"></a>FRAMEWIN_GetTitleHeight</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN_GetTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = FRAMEWIN_GetTitleHeight &rArr; FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[69f]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = FRAMEWIN_SetActive &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[590]"></a>FRAMEWIN_SetClientColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetClientColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN_SetClientColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
</UL>

<P><STRONG><a name="[59d]"></a>FRAMEWIN_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[4e4]"></a>FRAMEWIN_SetDefaultSkin</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, framewin_skin.o(i.FRAMEWIN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[59e]"></a>FRAMEWIN_SetDefaultTextAlign</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, framewin_default.o(i.FRAMEWIN_SetDefaultTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[4a8]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, framewin.o(i.FRAMEWIN_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[592]"></a>FRAMEWIN_SetSkin</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, framewin_skin.o(i.FRAMEWIN_SetSkin))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = FRAMEWIN_SetSkin &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[4f8]"></a>FRAMEWIN_SetSkinFlexProps</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, framewin_skinflex.o(i.FRAMEWIN_SetSkinFlexProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FRAMEWIN_SetSkinFlexProps &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[6a5]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, framewin.o(i.FRAMEWIN_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = FRAMEWIN_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[4c3]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>

<P><STRONG><a name="[4c4]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FRAMEWIN_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>

<P><STRONG><a name="[4a9]"></a>FRAMEWIN_SetTitleHeight</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN_SetTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[69c]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[6ac]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin.o(i.FRAMEWIN__CalcTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[39]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 68 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[6b0]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, framewin.o(i.FRAMEWIN__GetTitleLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[6ae]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, framewin__updatebuttons.o(i.FRAMEWIN__UpdateButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[6ad]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__UpdatePositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
</UL>

<P><STRONG><a name="[657]"></a>GL_DispChar</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[6ba]"></a>GL_DrawArcHR</STRONG> (Thumb, 268 bytes, Stack size 72 bytes, gui_arc.o(i.GL_DrawArcHR))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GL_DrawArcHR &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[6bc]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_NoTrans
</UL>

<P><STRONG><a name="[6bf]"></a>GL_DrawCircle</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gui_circ.o(i.GL_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GL_DrawCircle &rArr; _Draw8Point
</UL>
<BR>[Calls]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[6c1]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; _DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[6c2]"></a>GL_DrawLineEx</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_DrawLineEx &rArr; _DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[6ca]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawlib.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>

<P><STRONG><a name="[6cb]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[6cc]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guiaa_circle.o(i.GL_FillCircleAA_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillCircle
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
</UL>

<P><STRONG><a name="[6c8]"></a>GL_FillPolygon</STRONG> (Thumb, 464 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[6d1]"></a>GL_SetDefault</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_common.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[53b]"></a>GRAPH_AttachData</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, graph.o(i.GRAPH_AttachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GRAPH_AttachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[549]"></a>GRAPH_AttachScale</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, graph.o(i.GRAPH_AttachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GRAPH_AttachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[14e]"></a>GRAPH_Callback</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, graph.o(i.GRAPH_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = GRAPH_Callback &rArr; _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph.o(i.GRAPH_CreateUser)
</UL>
<P><STRONG><a name="[53f]"></a>GRAPH_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, graph.o(i.GRAPH_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = GRAPH_CreateEx &rArr; GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[6d9]"></a>GRAPH_CreateUser</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, graph.o(i.GRAPH_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GRAPH_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
</UL>

<P><STRONG><a name="[539]"></a>GRAPH_DATA_YT_AddValue</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Heartbeat
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
</UL>

<P><STRONG><a name="[547]"></a>GRAPH_DATA_YT_Create</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GRAPH_DATA_YT_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[550]"></a>GRAPH_DATA_YT_Delete</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, graph_data_yt.o(i.GRAPH_DATA_YT_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GRAPH_DATA_YT_Delete &rArr; _OnDelete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[53c]"></a>GRAPH_DetachData</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, graph.o(i.GRAPH_DetachData))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GRAPH_DetachData &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>

<P><STRONG><a name="[54e]"></a>GRAPH_DetachScale</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, graph.o(i.GRAPH_DetachScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GRAPH_DetachScale &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[548]"></a>GRAPH_SCALE_Create</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, graph_scale.o(i.GRAPH_SCALE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GRAPH_SCALE_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[54f]"></a>GRAPH_SCALE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graph_scale.o(i.GRAPH_SCALE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GRAPH_SCALE_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[54b]"></a>GRAPH_SCALE_SetOff</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph_scale.o(i.GRAPH_SCALE_SetOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SCALE_SetOff &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[54a]"></a>GRAPH_SCALE_SetPos</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph_scale.o(i.GRAPH_SCALE_SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SCALE_SetPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[540]"></a>GRAPH_SetBorder</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, graph.o(i.GRAPH_SetBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = GRAPH_SetBorder &rArr; _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[542]"></a>GRAPH_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[544]"></a>GRAPH_SetGridDistX</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridDistX &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[545]"></a>GRAPH_SetGridDistY</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridDistY &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[54d]"></a>GRAPH_SetGridOffY</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridOffY))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GRAPH_SetGridOffY &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[543]"></a>GRAPH_SetGridVis</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, graph.o(i.GRAPH_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GRAPH_SetGridVis &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[6da]"></a>GRAPH__AddValue</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, graph.o(i.GRAPH__AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GRAPH__AddValue &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>

<P><STRONG><a name="[6dd]"></a>GRAPH__InvalidateGraph</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, graph.o(i.GRAPH__InvalidateGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
</UL>

<P><STRONG><a name="[61e]"></a>GUIDRV_FlexColor_Config</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[61d]"></a>GUIDRV_FlexColor_SetFunc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUIDRV_FlexColor_SetFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[144]"></a>GUIDRV_FlexColor_SetFunc66712</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetFunc66712))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUIDRV_FlexColor_SetFunc66712 &rArr; GUIDRV_FlexColor__SetFunc66712 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__SetFunc66712
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>GUIDRV_FlexColor_SetMode16bppC0B16</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUIDRV_FlexColor_SetMode16bppC0B16 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_mcbqvga_lg.o(.text)
</UL>
<P><STRONG><a name="[61c]"></a>GUIDRV_FlexColor_SetReadFunc66712_B16</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUIDRV_FlexColor_SetReadFunc66712_B16 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[155]"></a>GUIDRV_FlexColor__GetPixelIndexNoCache</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUIDRV_FlexColor__GetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[6e2]"></a>GUIDRV_FlexColor__InitOnce</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetReadFunc66712_B16
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetMode16bppC0B16
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__SetFunc66712
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetVSize
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetSize
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_On
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Off
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[6e3]"></a>GUIDRV_FlexColor__SetFunc66712</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUIDRV_FlexColor__SetFunc66712 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc66712
</UL>

<P><STRONG><a name="[15b]"></a>GUIDRV_FlexColor__SetLog2Phys</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUIDRV_FlexColor__SetLog2Phys &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
</UL>
<P><STRONG><a name="[156]"></a>GUIDRV_FlexColor__SetPixelIndexNoCache</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUIDRV_FlexColor__SetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[246]"></a>GUIMONO_DispChar</STRONG> (Thumb, 302 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[247]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[248]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[249]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[1ed]"></a>GUIPROP_AA2_EXT_DispChar</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUIPROP_AA2_EXT_DispChar &rArr; GUI_AA__DrawCharAA2 &rArr; _DrawCharAA2_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_resource.o(.constdata)
</UL>
<P><STRONG><a name="[1dc]"></a>GUIPROP_AA4_DispChar</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, guiaa_char4.o(i.GUIPROP_AA4_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUIPROP_AA4_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[1e8]"></a>GUIPROP_AA4_EXT_DispChar</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, guiaa_char4ext.o(i.GUIPROP_AA4_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUIPROP_AA4_EXT_DispChar &rArr; GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo_resource.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_speedometer.o(.constdata)
</UL>
<P><STRONG><a name="[1dd]"></a>GUIPROP_AA4_GetCharDistX</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_AA4_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[1de]"></a>GUIPROP_AA4_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guiaa_char4.o(i.GUIPROP_AA4_GetFontInfo))
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>GUIPROP_AA4_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_char4.o(i.GUIPROP_AA4_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_AA4_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_bargraph.o(.constdata)
<LI> guidemo_washingmachine.o(.constdata)
</UL>
<P><STRONG><a name="[1e4]"></a>GUIPROP_DispChar</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIPROP_DispChar &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawNonExistingCharacter
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[1e9]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_EXT_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo_resource.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_speedometer.o(.constdata)
</UL>
<P><STRONG><a name="[1ec]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUIPROP_EXT_GetCharInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo_resource.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_speedometer.o(.constdata)
</UL>
<P><STRONG><a name="[1ea]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetFontInfo))
<BR>[Address Reference Count : 3]<UL><LI> guidemo_resource.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_speedometer.o(.constdata)
</UL>
<P><STRONG><a name="[1eb]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charpext.o(i.GUIPROP_EXT_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_EXT_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 3]<UL><LI> guidemo_resource.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_speedometer.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gui_encext.o(i.GUIPROP_EXT__ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIPROP_EXT__ClearLine &rArr; _ClearTextBackground &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearTextBackground
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.data)
</UL>
<P><STRONG><a name="[202]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gui_encext.o(i.GUIPROP_EXT__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUIPROP_EXT__DispLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.constdata)
</UL>
<P><STRONG><a name="[6e7]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_IsInFont
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharInfo
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharDistX
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[1e5]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[1e6]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[1e7]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 11]<UL><LI> guidemo_resource.o(.constdata)
<LI> f08_ascii.o(.constdata)
<LI> f08_1.o(.constdata)
<LI> f10s_ascii.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f16_ascii.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[6ea]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_IsInFont
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_GetCharDistX
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[6ef]"></a>GUITASK_CopyContext</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUITASK_CopyContext &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6f1]"></a>GUITASK_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[50d]"></a>GUI_AA_DisableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_DisableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
</UL>

<P><STRONG><a name="[5ae]"></a>GUI_AA_DrawArc</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, guiaa_arc.o(i.GUI_AA_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_AA_DrawArc &rArr; GUI_AA_DrawArcHR &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
</UL>

<P><STRONG><a name="[6f3]"></a>GUI_AA_DrawArcHR</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, guiaa_arc.o(i.GUI_AA_DrawArcHR))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_AA_DrawArcHR &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[5f6]"></a>GUI_AA_DrawLine</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, guiaa_line.o(i.GUI_AA_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_AA_DrawLine &rArr; _AA_DrawLine &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[50b]"></a>GUI_AA_EnableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_EnableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[6cf]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[5ab]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, guiaa_circle.o(i.GUI_AA_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_AA_FillCircle &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
</UL>

<P><STRONG><a name="[505]"></a>GUI_AA_FillPolygon</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, guiaa_poly.o(i.GUI_AA_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[6f9]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_HiRes2Pixel))
<BR><BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[6fb]"></a>GUI_AA_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[6cd]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[50c]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_SetFactor))
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[6e8]"></a>GUI_AA__DrawCharAA2</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guiaa_char2.o(i.GUI_AA__DrawCharAA2))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_AA__DrawCharAA2 &rArr; _DrawCharAA2_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_Trans
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_NoTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
</UL>

<P><STRONG><a name="[6eb]"></a>GUI_AA__DrawCharAA4</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, guiaa_char4.o(i.GUI_AA__DrawCharAA4))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_AA__DrawCharAA4 &rArr; _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[702]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[703]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[6db]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[613]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[666]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[737]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Exit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[637]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>

<P><STRONG><a name="[638]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[6e4]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[70a]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[4fe]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetNumFreeBytes))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[70d]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
</UL>

<P><STRONG><a name="[73b]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[635]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPosEx
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageTimer
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcOnDemand
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[70c]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[70e]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[73c]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[636]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPosEx
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageTimer
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__AddValue
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcOnDemand
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>

<P><STRONG><a name="[70b]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>

<P><STRONG><a name="[660]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[66a]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[665]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6dc]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
</UL>

<P><STRONG><a name="[67e]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>

<P><STRONG><a name="[672]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnDelete
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[710]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[712]"></a>GUI_ARRAY_InsertBlankItem</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, gui_array_insertitem.o(i.GUI_ARRAY_InsertBlankItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_ARRAY_InsertBlankItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
</UL>

<P><STRONG><a name="[713]"></a>GUI_ARRAY_InsertItem</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_array_insertitem.o(i.GUI_ARRAY_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_ARRAY_InsertItem &rArr; GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertBlankItem
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[715]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gui_array_resizeitem.o(i.GUI_ARRAY_ResizeItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[714]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, gui_array.o(i.GUI_ARRAY_SetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
</UL>

<P><STRONG><a name="[70f]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[711]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>

<P><STRONG><a name="[716]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__SethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[717]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_val.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[719]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_common.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[71a]"></a>GUI_AddRect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_common.o(i.GUI_AddRect))
<BR><BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[741]"></a>GUI_AddSign</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_AddSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_AddSign
</UL>
<BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[525]"></a>GUI_BMP_Draw</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_bmp.o(i.GUI_BMP_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = GUI_BMP_Draw &rArr; GUI_BMP_DrawEx &rArr; _Draw &rArr; _DrawBitmap_16bpp &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[71c]"></a>GUI_BMP_DrawEx</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = GUI_BMP_DrawEx &rArr; _Draw &rArr; _DrawBitmap_16bpp &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
</UL>

<P><STRONG><a name="[166]"></a>GUI_BMP__GetData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_bmp.o(i.GUI_BMP__GetData))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i.GUI_BMP_Draw)
</UL>
<P><STRONG><a name="[71e]"></a>GUI_BMP__Init</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, gui_bmp.o(i.GUI_BMP__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_BMP__Init &rArr; _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[71f]"></a>GUI_BMP__ReadData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[723]"></a>GUI_BMP__ReadPalette</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_BMP__ReadPalette &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
</UL>

<P><STRONG><a name="[725]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_cursor.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_CURSOR_GetStateEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[4eb]"></a>GUI_CURSOR_Hide</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_cursor.o(i.GUI_CURSOR_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_CURSOR_Hide &rArr; GUI_CURSOR_HideEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_HideCursor
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[726]"></a>GUI_CURSOR_HideEx</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_HideEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_CURSOR_HideEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
</UL>

<P><STRONG><a name="[52b]"></a>GUI_CURSOR_Select</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_cursor.o(i.GUI_CURSOR_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GUI_CURSOR_Select &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[72b]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, gui_cursor.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[730]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4d5]"></a>GUI_CURSOR_Show</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_cursor.o(i.GUI_CURSOR_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_CURSOR_Show &rArr; GUI_CURSOR_ShowEx &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
</UL>

<P><STRONG><a name="[732]"></a>GUI_CURSOR_ShowEx</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_cursor.o(i.GUI_CURSOR_ShowEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_CURSOR_ShowEx &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Show
</UL>

<P><STRONG><a name="[95a]"></a>GUI_CalcColorDist</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_common.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[4be]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[504]"></a>GUI_ClearRect</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ClearRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[733]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_core.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5a3]"></a>GUI_Color2Index</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Color2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_Color2Index &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[4e7]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, dialog.o(i.GUI_CreateDialogBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[7dc]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_core.o(i.GUI_DCACHE_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[734]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[618]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[736]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[735]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
</UL>

<P><STRONG><a name="[738]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_LinkDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_LinkDevices &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[7a3]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
</UL>

<P><STRONG><a name="[79e]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[7f1]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDevice))
<BR><BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[7b0]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevCap
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[64b]"></a>GUI_DRAW_SELF_Create</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_draw_self.o(i.GUI_DRAW_SELF_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DRAW_SELF_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[645]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[739]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[73a]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[49f]"></a>GUI_Delay</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
</UL>

<P><STRONG><a name="[529]"></a>GUI_DispCharAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
</UL>

<P><STRONG><a name="[501]"></a>GUI_DispDecAt</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
</UL>

<P><STRONG><a name="[512]"></a>GUI_DispDecMin</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
</UL>

<P><STRONG><a name="[73d]"></a>GUI_DispDecShift</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[73e]"></a>GUI_DispFloatMin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_valf.o(i.GUI_DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_DispFloatMin &rArr; _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>
<BR>[Called By]<UL><LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[6b9]"></a>GUI_DispNextLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_DispNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[740]"></a>GUI_DispSDecShift</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispSDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[5f8]"></a>GUI_DispString</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>

<P><STRONG><a name="[500]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstring.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[4da]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[4e0]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstring.o(i.GUI_DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[748]"></a>GUI_DispStringInRectEx</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui_dispstringinrectex.o(i.GUI_DispStringInRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_DispStringInRectEx &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
</UL>

<P><STRONG><a name="[747]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gui_dispstring.o(i.GUI_DispStringInRectMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
</UL>

<P><STRONG><a name="[533]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 442 bytes, Stack size 80 bytes, gui_dispstring.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[750]"></a>GUI_DispStringInRectWrapEx</STRONG> (Thumb, 638 bytes, Stack size 80 bytes, gui_dispstring.o(i.GUI_DispStringInRectWrapEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GUI_DispStringInRectWrapEx &rArr; GUI_DispStringInRectEx &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5b3]"></a>GUI_DrawArc</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, gui_arc.o(i.GUI_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_DrawArc &rArr; GL_DrawArcHR &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArcHR
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
</UL>

<P><STRONG><a name="[4b9]"></a>GUI_DrawBitmap</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_BUTTON
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
</UL>

<P><STRONG><a name="[516]"></a>GUI_DrawBitmapMag</STRONG> (Thumb, 214 bytes, Stack size 88 bytes, gui_drawlib.o(i.GUI_DrawBitmapMag))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DrawBitmapMag &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[4c0]"></a>GUI_DrawCircle</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_circ.o(i.GUI_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawCircle &rArr; GUI_GetPenSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCircle_PenSize
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[753]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, gui_drawlib.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawFocusRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[18c]"></a>GUI_DrawGradientH</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[18f]"></a>GUI_DrawGradientV</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFontColor
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[755]"></a>GUI_DrawGraphEx</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, gui_drawgraphex.o(i.GUI_DrawGraphEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DrawGraphEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[515]"></a>GUI_DrawHLine</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[757]"></a>GUI_DrawLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; _DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
</UL>

<P><STRONG><a name="[6a8]"></a>GUI_DrawPixel</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawPixel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[4a5]"></a>GUI_DrawRect</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DrawRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[5a6]"></a>GUI_DrawRoundedFrame</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, gui_drawroundedframe.o(i.GUI_DrawRoundedFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DrawRoundedFrame &rArr; GUI_DrawRoundedRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
</UL>

<P><STRONG><a name="[519]"></a>GUI_DrawRoundedRect</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, gui_drawroundedrect.o(i.GUI_DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawRoundedRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
</UL>

<P><STRONG><a name="[5fa]"></a>GUI_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawVLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[587]"></a>GUI_EndDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_EndDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
</UL>

<P><STRONG><a name="[4a0]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[75d]"></a>GUI_Exec1</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[583]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_ExecCreatedDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
</UL>

<P><STRONG><a name="[5b5]"></a>GUI_FillCircle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_circ.o(i.GUI_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_FillCircle &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
</UL>

<P><STRONG><a name="[4e1]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
</UL>

<P><STRONG><a name="[6a9]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_drawlib.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
</UL>

<P><STRONG><a name="[514]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_FillRoundedRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRectEx
</UL>

<P><STRONG><a name="[762]"></a>GUI_FillRoundedRectEx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_FillRoundedRectEx &rArr; GUI_FillRoundedRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[522]"></a>GUI_GIF_DrawSub</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF_DrawSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_GIF_DrawSub &rArr; GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[763]"></a>GUI_GIF_DrawSubEx</STRONG> (Thumb, 190 bytes, Stack size 80 bytes, gui_gif.o(i.GUI_GIF_DrawSubEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSub
</UL>

<P><STRONG><a name="[523]"></a>GUI_GIF_GetImageInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_GIF_GetImageInfo &rArr; GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[768]"></a>GUI_GIF_GetImageInfoEx</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, gui_gif.o(i.GUI_GIF_GetImageInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
</UL>

<P><STRONG><a name="[521]"></a>GUI_GIF_GetInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_GIF_GetInfo &rArr; GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
</UL>

<P><STRONG><a name="[76a]"></a>GUI_GIF_GetInfoEx</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_gif.o(i.GUI_GIF_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
</UL>

<P><STRONG><a name="[766]"></a>GUI_GIF__DrawFromFilePointer</STRONG> (Thumb, 350 bytes, Stack size 136 bytes, gui_gif.o(i.GUI_GIF__DrawFromFilePointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_GIF__DrawFromFilePointer &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[16a]"></a>GUI_GIF__GetData</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gui_gif.o(i.GUI_GIF__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_GIF__GetData
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_gif.o(i.GUI_GIF_GetInfo)
<LI> gui_gif.o(i.GUI_GIF_DrawSub)
<LI> gui_gif.o(i.GUI_GIF_GetImageInfo)
</UL>
<P><STRONG><a name="[771]"></a>GUI_GIF__GetNextByte</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF__GetNextByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[9ad]"></a>GUI_GIF__InitLZW</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_gif.o(i.GUI_GIF__InitLZW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GIF__InitLZW
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[76d]"></a>GUI_GIF__ReadData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF__ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[773]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[774]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[817]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[5a1]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearTextBackground
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
</UL>

<P><STRONG><a name="[503]"></a>GUI_GetCharDistX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetWordWrap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCharWrap
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosX
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosChar
</UL>

<P><STRONG><a name="[777]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[646]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5a0]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearTextBackground
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
</UL>

<P><STRONG><a name="[728]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[75b]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, dialog.o(i.GUI_GetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[584]"></a>GUI_GetDispPosY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetDispPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetDispPosY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
</UL>

<P><STRONG><a name="[4db]"></a>GUI_GetFontDistY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[778]"></a>GUI_GetFontInfo</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GetFontInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_GetFontInfo &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[50f]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[77a]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[77c]"></a>GUI_GetLineStyle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetLineStyle &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[77d]"></a>GUI_GetOrg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_GetOrg &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[751]"></a>GUI_GetPenSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetPenSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[4f1]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_dispstring.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[77f]"></a>GUI_GetStringDistXEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_dispstring.o(i.GUI_GetStringDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_GetStringDistXEx &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>

<P><STRONG><a name="[5c4]"></a>GUI_GetTextExtend</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gui_common.o(i.GUI_GetTextExtend))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_GetTextExtend &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[4b1]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagXY
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[551]"></a>GUI_GetVersionString</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetVersionString))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
</UL>

<P><STRONG><a name="[742]"></a>GUI_GetYAdjust</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[680]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[6b1]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[81c]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[818]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[510]"></a>GUI_GotoXY</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_GotoXY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[5c7]"></a>GUI_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[526]"></a>GUI_JPEG_Draw</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1628<LI>Call Chain = GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _JPEG_DrawEx &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[78b]"></a>GUI_JPEG_DrawEx</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 1612<LI>Call Chain = GUI_JPEG_DrawEx &rArr; _JPEG_DrawEx &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
</UL>

<P><STRONG><a name="[78d]"></a>GUI_JPEG__DecodeLine</STRONG> (Thumb, 366 bytes, Stack size 168 bytes, gui_jpeg.o(i.GUI_JPEG__DecodeLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_JPEG__DecodeLine &rArr; _DecodeNextRow &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IDCT
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
</UL>
<BR>[Called By]<UL><LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[796]"></a>GUI_JPEG(long double, ..., ...)</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG__Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_JPEG(long double, ..., ...) &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[16d]"></a>GUI_JPEG__GetData</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gui_jpeg.o(i.GUI_JPEG__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_JPEG__GetData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG_Draw)
</UL>
<P><STRONG><a name="[797]"></a>GUI_JPEG__GetInfoEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG__GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_JPEG__GetInfoEx &rArr; GUI_JPEG__ReadUntilSOF &rArr; _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Called By]<UL><LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[799]"></a>GUI_JPEG__InitDraw</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG__InitDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444<LI>Call Chain = GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>
<BR>[Called By]<UL><LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[798]"></a>GUI_JPEG__ReadUntilSOF</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_JPEG__ReadUntilSOF &rArr; _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
</UL>

<P><STRONG><a name="[640]"></a>GUI_Lock</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistXEx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[718]"></a>GUI_Long2Len</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[79f]"></a>GUI_MEASDEV_ClearRect</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEASDEV_ClearRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
</UL>

<P><STRONG><a name="[7a0]"></a>GUI_MEASDEV_Create</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_MEASDEV_Create &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[7a1]"></a>GUI_MEASDEV_Delete</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEASDEV_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[7a4]"></a>GUI_MEASDEV_GetRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEASDEV_GetRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[7a5]"></a>GUI_MEASDEV_Select</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEASDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[7a8]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[51d]"></a>GUI_MEMDEV_CopyFromLCD</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, guidev_copyfromlcd.o(i.GUI_MEMDEV_CopyFromLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_MEMDEV_CopyFromLCD &rArr; GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfIndex2ColorEx
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__XY2PTREx
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[2e]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[7ae]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[51c]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[507]"></a>GUI_MEMDEV_CreateAuto</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_CreateAuto))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[4bb]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[537]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFontColor
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[4ba]"></a>GUI_MEMDEV_CreateFixed32</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed32))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_MEMDEV_CreateFixed32 &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
</UL>

<P><STRONG><a name="[4c2]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_KillMemdevs
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[50a]"></a>GUI_MEMDEV_DeleteAuto</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_DeleteAuto))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[7b3]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[509]"></a>GUI_MEMDEV_DrawAuto</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, guidev_auto.o(i.GUI_MEMDEV_DrawAuto))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = GUI_MEMDEV_DrawAuto &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[4c1]"></a>GUI_MEMDEV_DrawPerspectiveX</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, guidev_perspective.o(i.GUI_MEMDEV_DrawPerspectiveX))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_MEMDEV_DrawPerspectiveX &rArr; _DrawMemdevPerspective &rArr; _GetX &rArr; __hardfp_sqrt &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
</UL>

<P><STRONG><a name="[535]"></a>GUI_MEMDEV_FadeInDevices</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_moveandfade.o(i.GUI_MEMDEV_FadeInDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GUI_MEMDEV_FadeInDevices &rArr; _FadeDevices &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
</UL>

<P><STRONG><a name="[596]"></a>GUI_MEMDEV_FadeInWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = GUI_MEMDEV_FadeInWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[58a]"></a>GUI_MEMDEV_FadeOutWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[7a9]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[4bf]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFontColor
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColors
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColorsGradient
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[7c4]"></a>GUI_MEMDEV_GetStaticDevice</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetStaticDevice &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[7c5]"></a>GUI_MEMDEV_GetWindowDevice</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[7c7]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetXPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetXPos &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[52e]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getxsize.o(i.GUI_MEMDEV_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColors
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColorsGradient
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[7c8]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetYPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[52f]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColors
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColorsGradient
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[594]"></a>GUI_MEMDEV_MoveInWindow</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveInWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = GUI_MEMDEV_MoveInWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[586]"></a>GUI_MEMDEV_MoveOutWindow</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveOutWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = GUI_MEMDEV_MoveOutWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[1be]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[7ba]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5be]"></a>GUI_MEMDEV_Rotate</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, guidev_rotate.o(i.GUI_MEMDEV_Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GUI_MEMDEV_Rotate &rArr; GUI_MEMDEV__Rotate &rArr; _Rotate32 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
</UL>

<P><STRONG><a name="[531]"></a>GUI_MEMDEV_RotateHQ</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, guidev_rotate.o(i.GUI_MEMDEV_RotateHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_MEMDEV_RotateHQ &rArr; _Rotate32HQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
</UL>

<P><STRONG><a name="[4bc]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFontColor
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4f4]"></a>GUI_MEMDEV_SetAnimationCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_moveandfade.o(i.GUI_MEMDEV_SetAnimationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[7bb]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2d]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[530]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
</UL>

<P><STRONG><a name="[16f]"></a>GUI_MEMDEV__CalcParaFadeIn</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__CalcParaFadeIn))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow)
</UL>
<P><STRONG><a name="[7bf]"></a>GUI_MEMDEV__ClipBK</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__ClipBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = GUI_MEMDEV__ClipBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[7b1]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[7d1]"></a>GUI_MEMDEV__CreateStatic</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_staticdevices.o(i.GUI_MEMDEV__CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[7d3]"></a>GUI_MEMDEV__FadeDevice</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, guidev_moveandfade.o(i.GUI_MEMDEV__FadeDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_MEMDEV__FadeDevice &rArr; GUI_MEMDEV__FadeDeviceEx &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
</UL>

<P><STRONG><a name="[7d4]"></a>GUI_MEMDEV__FadeDeviceEx</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, guidev_moveandfade.o(i.GUI_MEMDEV__FadeDeviceEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MEMDEV__FadeDeviceEx &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDevice
</UL>

<P><STRONG><a name="[7d5]"></a>GUI_MEMDEV__RemoveStaticDevice</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__RemoveStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = GUI_MEMDEV__RemoveStaticDevice &rArr;  GUI_MEMDEV__RemoveStaticDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[7cb]"></a>GUI_MEMDEV__Rotate</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, guidev_rotate.o(i.GUI_MEMDEV__Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_MEMDEV__Rotate &rArr; _Rotate32 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Rotate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
</UL>

<P><STRONG><a name="[7f2]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_banding.o(i.GUI_MEMDEV__SetAlphaCallback))
<BR><BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[7c1]"></a>GUI_MEMDEV__UndoClipBK</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__UndoClipBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = GUI_MEMDEV__UndoClipBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[1b8]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[7cf]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[1b7]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidev_8.o(i._GetDevFunc)
<LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[7ab]"></a>GUI_MEMDEV__XY2PTREx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidev_xy2ptr.o(i.GUI_MEMDEV__XY2PTREx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__XY2PTREx
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[5ba]"></a>GUI_MULTIBUF_Begin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
</UL>

<P><STRONG><a name="[7da]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_BeginEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_Begin
</UL>

<P><STRONG><a name="[5bb]"></a>GUI_MULTIBUF_End</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_End &rArr; GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
</UL>

<P><STRONG><a name="[7db]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_EndEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_End
</UL>

<P><STRONG><a name="[7bc]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_common.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5c5]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_common.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6b]"></a>GUI_PID_GetState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbEffect
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_touch.o(.data)
</UL>
<P><STRONG><a name="[8fd]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[597]"></a>GUI_PID_StoreState</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[7e0]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[7e3]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[8dc]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[7e5]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[508]"></a>GUI_RotatePolygon</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_common.o(i.GUI_RotatePolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_RotatePolygon &rArr; GUI__CosHQ &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5e2]"></a>GUI_SPRITE_Create</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_sprite.o(i.GUI_SPRITE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_SPRITE_Create &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[5e3]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[72a]"></a>GUI_SPRITE_Hide</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_SPRITE_Hide &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[5d0]"></a>GUI_SPRITE_SetBitmapAndPosition</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, gui_sprite.o(i.GUI_SPRITE_SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
</UL>

<P><STRONG><a name="[727]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
</UL>

<P><STRONG><a name="[7eb]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[72e]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[7ee]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[7a2]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
</UL>

<P><STRONG><a name="[72c]"></a>GUI_SelectLayer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[518]"></a>GUI_SetAlpha</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_setalpha.o(i.GUI_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrame
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i.GUI_SetAlpha)
</UL>
<P><STRONG><a name="[4bd]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkSimple
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5aa]"></a>GUI_SetBkColorIndex</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetBkColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SetBkColorIndex &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
</UL>

<P><STRONG><a name="[517]"></a>GUI_SetClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
</UL>

<P><STRONG><a name="[4a4]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_BUTTON
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenAlphaBitmaps
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearTextBackground
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[5a4]"></a>GUI_SetColorIndex</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SetColorIndex &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[614]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[75f]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, dialog.o(i.GUI_SetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_SetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[6bd]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[4d9]"></a>GUI_SetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetFont &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[731]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetLayerPosEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[72d]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetLayerSizeEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[729]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetLayerVisEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[6d2]"></a>GUI_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
</UL>

<P><STRONG><a name="[789]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetOrg &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[7f7]"></a>GUI_SetPenShape</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetPenShape))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetPenShape &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
</UL>

<P><STRONG><a name="[5ad]"></a>GUI_SetPenSize</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AA_DrawLine
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[511]"></a>GUI_SetTextAlign</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[4d8]"></a>GUI_SetTextMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[7df]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[7f8]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[5ff]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_onkey.o(i.GUI_StoreKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_StoreKeyMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
</UL>

<P><STRONG><a name="[7fa]"></a>GUI_TIMER_Create</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
</UL>

<P><STRONG><a name="[7fc]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[175]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[7ff]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER_GetFlag &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[800]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[801]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[802]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[803]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[804]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_TIMER__GetPeriod &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[805]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER__IsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_TIMER__IsActive &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[611]"></a>GUI_TOUCH_StoreState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_touch_storestate.o(i.GUI_TOUCH_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[806]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>

<P><STRONG><a name="[808]"></a>GUI_UC_Encode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_uc.o(i.GUI_UC_Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_UC_Encode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[687]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_UC_GetCharCode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosChar
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorCharacter
</UL>

<P><STRONG><a name="[809]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_UC_GetCharSize &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosChar
</UL>

<P><STRONG><a name="[952]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[80b]"></a>GUI_UC__DisableLigatures</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__DisableLigatures))
<BR><BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
</UL>

<P><STRONG><a name="[80a]"></a>GUI_UC__EnableLigatures</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__EnableLigatures))
<BR><BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
</UL>

<P><STRONG><a name="[6ed]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawCharEXT
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetWordWrap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCharWrap
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosX
</UL>

<P><STRONG><a name="[9cc]"></a>GUI_UC__GetLigature</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__GetLigature))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharSize
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharCode
</UL>

<P><STRONG><a name="[825]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumBytes2NumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__NOBIDI_GetCursorPosChar
</UL>

<P><STRONG><a name="[746]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[686]"></a>GUI_UC__NumGlyphs2NumBytes</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC__NumGlyphs2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_UC__NumGlyphs2NumBytes &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__EnableLigatures
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__DisableLigatures
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[98e]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[7d0]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[7b2]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[642]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; osMutexRelease &rArr; EvrRtxMutexError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistXEx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_HideEx
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeDevices
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetItemDisabled
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[760]"></a>GUI_WaitEvent</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_waitevent.o(i.GUI_WaitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_WaitEvent &rArr; GUI_TIMER__GetPeriod &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitEvent
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[74d]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
</UL>

<P><STRONG><a name="[80e]"></a>GUI__ASinHQ</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, gui__sinhq.o(i.GUI__ASinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__ASinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
</UL>

<P><STRONG><a name="[80d]"></a>GUI__ATan2</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui__sinhq.o(i.GUI__ATan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI__ATan2 &rArr; GUI__ASinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ASinHQ
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
</UL>

<P><STRONG><a name="[80f]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[811]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaPreserveTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[693]"></a>GUI__CalcTextRect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui__private.o(i.GUI__CalcTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[95e]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[813]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[781]"></a>GUI__Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[814]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__ConvertColor2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[56d]"></a>GUI__CosHQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui__sinhq.o(i.GUI__CosHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__CosHQ &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[745]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[74c]"></a>GUI__DispStringInRect</STRONG> (Thumb, 480 bytes, Stack size 72 bytes, gui_dispstring.o(i.GUI__DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[94b]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorHQ
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[816]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 438 bytes, Stack size 104 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[81a]"></a>GUI__DrawBitmap16bpp</STRONG> (Thumb, 558 bytes, Stack size 96 bytes, gui__drawbitmap16bpp.o(i.GUI__DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap444_12
</UL>

<P><STRONG><a name="[24]"></a>GUI__DrawCharEXT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_encext.o(i.GUI__DrawCharEXT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__DrawCharEXT &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[6e9]"></a>GUI__DrawNonExistingCharacter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_char.o(i.GUI__DrawNonExistingCharacter))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
</UL>

<P><STRONG><a name="[6a7]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI__DrawTwinArc2 &rArr; _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[643]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[9d5]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 210 bytes, Stack size 20 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>

<P><STRONG><a name="[819]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[81f]"></a>GUI__FillTrippleArc</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
</UL>

<P><STRONG><a name="[810]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
</UL>

<P><STRONG><a name="[94f]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui__getcursorpos.o(i.GUI__GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[695]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosChar))
<BR><BR>[Called By]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[694]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosX))
<BR><BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[779]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
</UL>

<P><STRONG><a name="[744]"></a>GUI__GetLineDistX</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistXEx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
</UL>

<P><STRONG><a name="[743]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[6ec]"></a>GUI__GetNonExistingCharWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_char.o(i.GUI__GetNonExistingCharWidth))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT_GetCharDistX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_GetCharDistX
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[692]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_uc.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPosEx
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetNumChars
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>

<P><STRONG><a name="[77e]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[655]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[780]"></a>GUI__HandleEOLine</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui__private.o(i.GUI__HandleEOLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__HandleEOLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[908]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__private.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[74a]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__private.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[821]"></a>GUI__InvertRectColors</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_common.o(i.GUI__InvertRectColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__InvertRectColors &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6c6]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[824]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[4d]"></a>GUI__MixColors</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>GUI__NOBIDI_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__NOBIDI_GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI__NOBIDI_GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>GUI__NOBIDI_GetCursorCharacter</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI__NOBIDI_GetCursorCharacter &rArr; GUI_UC_GetCharCode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>GUI__NOBIDI_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorPosChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI__NOBIDI_GetCursorPosChar &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>GUI__NOBIDI_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui__getcursorpos.o(i.GUI__NOBIDI_GetCursorPosX))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI__NOBIDI_GetCursorPosX &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>GUI__NOBIDI_GetWordWrap</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui__wrap.o(i.GUI__NOBIDI_GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI__NOBIDI_GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>GUI__NOBIDI_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i.GUI__NOBIDI_Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[720]"></a>GUI__Read16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>

<P><STRONG><a name="[721]"></a>GUI__Read32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read32))
<BR><BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine_RGB
</UL>

<P><STRONG><a name="[71b]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddRect
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[6f2]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RegisterExit
</UL>

<P><STRONG><a name="[826]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui__private.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>

<P><STRONG><a name="[64d]"></a>GUI__SetText</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui__private.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
</UL>

<P><STRONG><a name="[538]"></a>GUI__SinHQ</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, gui__sinhq.o(i.GUI__SinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddData_Sine
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[74f]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
</UL>

<P><STRONG><a name="[74e]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
</UL>

<P><STRONG><a name="[82a]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[9c2]"></a>GUI__memset16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui__private.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[761]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCircle_PenSize
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedFrame
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPositionXY
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestinationXY
</UL>

<P><STRONG><a name="[696]"></a>GUI__strcmp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[828]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui__private.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[829]"></a>GUI__strlen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[6c4]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[6c5]"></a>GUI_sin</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[82c]"></a>HEADER_AddItem</STRONG> (Thumb, 186 bytes, Stack size 72 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HEADER_AddItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[17a]"></a>HEADER_Callback</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = HEADER_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[830]"></a>HEADER_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[831]"></a>HEADER_CreateUser</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[3e]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.text)
<LI> header.o(.data)
</UL>
<P><STRONG><a name="[839]"></a>HEADER_GetHeight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>

<P><STRONG><a name="[83a]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[83b]"></a>HEADER_GetNumItems</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth
</UL>

<P><STRONG><a name="[83c]"></a>HEADER_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, header.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HEADER_GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4fb]"></a>HEADER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, header_skin.o(i.HEADER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[83d]"></a>HEADER_SetDirIndicator</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, header.o(i.HEADER_SetDirIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = HEADER_SetDirIndicator &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[55a]"></a>HEADER_SetDragLimit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header.o(i.HEADER_SetDragLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HEADER_SetDragLimit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[83e]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, header.o(i.HEADER_SetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = HEADER_SetItemWidth &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[83f]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
</UL>

<P><STRONG><a name="[5b]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd_aa.o(i.LCD_AA_MixColors16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_NoTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(.data)
</UL>
<P><STRONG><a name="[850]"></a>LCD_AA_MixColors256</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors256))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors256
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
</UL>

<P><STRONG><a name="[812]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[724]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Color2Index
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[1f4]"></a>LCD_Color2Index_8666</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, guicc_8666.o(i.LCD_Color2Index_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[6be]"></a>LCD_DrawBitmap</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[169]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedFrame
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[1fb]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedRect
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[6e6]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearTextBackground
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRoundedFrame
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCCW
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap180
</UL>

<P><STRONG><a name="[4fd]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixel &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[841]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[775]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
</UL>

<P><STRONG><a name="[765]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[527]"></a>LCD_GetDevCap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_info.o(i.LCD_GetDevCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetDevCap &rArr; _GetDevCap
</UL>
<BR>[Calls]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevCap
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
</UL>

<P><STRONG><a name="[81b]"></a>LCD_GetNextPixelAPI</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i.LCD_GetNextPixelAPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNextPixelAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[843]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[844]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[845]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[846]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[847]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[827]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
</UL>

<P><STRONG><a name="[822]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
</UL>

<P><STRONG><a name="[77b]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[619]"></a>LCD_GetSwapXY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXY &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[7aa]"></a>LCD_GetVXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[7b6]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[6fc]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[5a2]"></a>LCD_GetVYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[7b7]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[4b6]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_1
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw_0
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcXOut
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcXIn
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
</UL>

<P><STRONG><a name="[784]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[7b4]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[787]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[4b8]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispHint
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBkCircle
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBk
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ColorBar
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Bitmap
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelsPerSecond
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
</UL>

<P><STRONG><a name="[785]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[7b5]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[786]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[849]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[23]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[84a]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_NoTrans
</UL>

<P><STRONG><a name="[84b]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfColor2IndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfColor2IndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[7ad]"></a>LCD_GetpfIndex2ColorEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfIndex2ColorEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfIndex2ColorEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[776]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_NoTrans
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_NoTrans
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_NoTrans
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_Trans
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA8_NoTrans
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[1a6]"></a>LCD_Index2Color_444_12</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_444_12_index2color.o(i.LCD_Index2Color_444_12))
<BR>[Address Reference Count : 2]<UL><LI> gui_drawbitmap_444.o(i._DrawBitmap444_12)
<LI> gui_drawbitmap_444.o(.constdata)
</UL>
<P><STRONG><a name="[1a5]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565.o(i.LCD_Index2Color_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_565
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_drawbitmap_565.o(.constdata)
<LI> gui_drawbitmap_565.o(i._DrawBitmap)
<LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[1f5]"></a>LCD_Index2Color_8666</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, guicc_8666.o(i.LCD_Index2Color_8666))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_8666
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[1fd]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 2]<UL><LI> gui_drawbitmap_24.o(.constdata)
<LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 6]<UL><LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> guicc_8888.o(.constdata)
<LI> lcd_rlealpha.o(i._Draw)
<LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[1a3]"></a>LCD_Index2Color_M555</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_m555_index2color.o(i.LCD_Index2Color_M555))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[275]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[783]"></a>LCD_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[84c]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[84d]"></a>LCD_InitLUT</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[7ac]"></a>LCD_ReadRect</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lcd_readrect.o(i.LCD_ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_ReadRect &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>

<P><STRONG><a name="[7ef]"></a>LCD_SelectLCD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[6b7]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[7f3]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[84f]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[7a7]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>

<P><STRONG><a name="[7f4]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[767]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[788]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6e5]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_EXT_DispChar
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA4_DispChar
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonExistingCharacter
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[84e]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[17c]"></a>LCD_SetPixelAA4_NoTrans</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA4_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetPixelAA4_NoTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(i.LCD__GetPfSetPixel)
</UL>
<P><STRONG><a name="[17d]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA4_Trans
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCharAA2_Trans
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guiaa_lib.o(i._FlushLine)
<LI> lcd_aa.o(i.LCD__GetPfSetPixel)
</UL>
<P><STRONG><a name="[17e]"></a>LCD_SetPixelAA8_NoTrans</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA8_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetPixelAA8_NoTrans &rArr; LCD_AA_MixColors256
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors256
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(i.LCD__GetPfSetPixel)
</UL>
<P><STRONG><a name="[17f]"></a>LCD_SetPixelAA8_Trans</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA8_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA8_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors256
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(i.LCD__GetPfSetPixel)
</UL>
<P><STRONG><a name="[823]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>

<P><STRONG><a name="[7f5]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[61a]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[61b]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[7f6]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[7ce]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[851]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[852]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[7c3]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[99b]"></a>LCD__GetPfSetPixel</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD__GetPfSetPixel))
<BR><BR>[Called By]<UL><LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[853]"></a>LISTBOX_AddKey</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[855]"></a>LISTBOX_AddString</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[673]"></a>LISTBOX_AddStringH</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_AddStringH))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = LISTBOX_AddStringH &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[180]"></a>LISTBOX_Callback</STRONG> (Thumb, 766 bytes, Stack size 72 bytes, listbox.o(i.LISTBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[66f]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[865]"></a>LISTBOX_CreateUser</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
</UL>

<P><STRONG><a name="[867]"></a>LISTBOX_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[661]"></a>LISTBOX_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTBOX_GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[869]"></a>LISTBOX_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[86a]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX_InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[181]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 566 bytes, Stack size 80 bytes, listbox.o(i.LISTBOX_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = LISTBOX_OwnerDraw &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[671]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[674]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[679]"></a>LISTBOX_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[677]"></a>LISTBOX_SetItemDisabled</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetItemDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = LISTBOX_SetItemDisabled &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[678]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetItemSpacing))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[67c]"></a>LISTBOX_SetOwner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LISTBOX_SetOwner &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[676]"></a>LISTBOX_SetScrollbarColor</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = LISTBOX_SetScrollbarColor &rArr; LISTBOX__SetScrollbarColor &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[670]"></a>LISTBOX_SetScrollbarWidth</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[67d]"></a>LISTBOX_SetSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(i.LISTBOX_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = LISTBOX_SetSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[866]"></a>LISTBOX_SetText</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[67a]"></a>LISTBOX_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LISTBOX_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[675]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[858]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_UpdateScrollers))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[857]"></a>LISTBOX__AddSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__AddSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LISTBOX__AddSize &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[860]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(i.LISTBOX__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[86c]"></a>LISTBOX__GetpStringLocked</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__GetpStringLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[85b]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[859]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, listbox.o(i.LISTBOX__InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[86b]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__InvalidateItemAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[856]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX__InvalidateItemSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[86f]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[870]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[55f]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[557]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[182]"></a>LISTVIEW_Callback</STRONG> (Thumb, 548 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; _GetNumVisibleRows &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1e3]"></a>LISTVIEW_CompareDec</STRONG> (Thumb, 130 bytes, Stack size 28 bytes, listview_setsort.o(i.LISTVIEW_CompareDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LISTVIEW_CompareDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[1e2]"></a>LISTVIEW_CompareText</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listview_setsort.o(i.LISTVIEW_CompareText))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_listview.o(.constdata)
</UL>
<P><STRONG><a name="[56a]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[1f1]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[883]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[567]"></a>LISTVIEW_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = LISTVIEW_DecSel &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[561]"></a>LISTVIEW_EnableSort</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listview_setsort.o(i.LISTVIEW_EnableSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTVIEW_EnableSort &rArr; _CreateSortObject &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[559]"></a>LISTVIEW_GetHeader</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetHeader &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
</UL>

<P><STRONG><a name="[886]"></a>LISTVIEW_GetLBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetLBorder &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[565]"></a>LISTVIEW_GetNumColumns</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
</UL>

<P><STRONG><a name="[563]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetNumRows &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[887]"></a>LISTVIEW_GetRBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetRBorder &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[57f]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LISTVIEW_GetSel &rArr; _GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[889]"></a>LISTVIEW_GetWrapMode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LISTVIEW_GetWrapMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[566]"></a>LISTVIEW_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = LISTVIEW_IncSel &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[556]"></a>LISTVIEW_InsertRow</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, listview_insertrow.o(i.LISTVIEW_InsertRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_InsertItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>

<P><STRONG><a name="[183]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[88b]"></a>LISTVIEW_RowIsDisabled</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_RowIsDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTVIEW_RowIsDisabled &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[55b]"></a>LISTVIEW_SetAutoScrollV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = LISTVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[560]"></a>LISTVIEW_SetCompareFunc</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listview_setsort.o(i.LISTVIEW_SetCompareFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LISTVIEW_SetCompareFunc &rArr; LISTVIEW_GetNumColumns &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[55c]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[564]"></a>LISTVIEW_SetItemBkColor</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, listview_setitemcolor.o(i.LISTVIEW_SetItemBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = LISTVIEW_SetItemBkColor &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[576]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_SetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
</UL>

<P><STRONG><a name="[55e]"></a>LISTVIEW_SetLBorder</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_SetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTVIEW_SetLBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[55d]"></a>LISTVIEW_SetRBorder</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_SetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTVIEW_SetRBorder &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>

<P><STRONG><a name="[568]"></a>LISTVIEW_SetSort</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, listview_setsort.o(i.LISTVIEW_SetSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = LISTVIEW_SetSort &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateSortObject
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[88e]"></a>LISTVIEW__CreateCellInfoLocked</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, listview_setitemcolor.o(i.LISTVIEW__CreateCellInfoLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LISTVIEW__CreateCellInfoLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
</UL>

<P><STRONG><a name="[87b]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[877]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[88f]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW__GetRowDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[88d]"></a>LISTVIEW__GetpCellInfo</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, listview_setitemcolor.o(i.LISTVIEW__GetpCellInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LISTVIEW__GetpCellInfo &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
</UL>

<P><STRONG><a name="[878]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__GetpRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[879]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[87c]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[88a]"></a>LISTVIEW__InvalidateRowAndBelow</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW__InvalidateRowAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LISTVIEW__InvalidateRowAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
</UL>

<P><STRONG><a name="[890]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[87a]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>

<P><STRONG><a name="[187]"></a>MESSAGEBOX_Callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, messagebox.o(i.MESSAGEBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MESSAGEBOX_Callback &rArr; GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[582]"></a>MESSAGEBOX_Create</STRONG> (Thumb, 472 bytes, Stack size 152 bytes, messagebox.o(i.MESSAGEBOX_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = MESSAGEBOX_Create &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetDefaultFont
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSizeEx
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetDefaultFont
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
</UL>

<P><STRONG><a name="[188]"></a>PROGBAR_Callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[1db]"></a>PROGBAR_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[897]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
</UL>

<P><STRONG><a name="[41]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.text)
<LI> progbar.o(.data)
</UL>
<P><STRONG><a name="[4de]"></a>PROGBAR_GetMinMax</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR_GetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = PROGBAR_GetMinMax &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
</UL>

<P><STRONG><a name="[4dd]"></a>PROGBAR_GetValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PROGBAR_GetValue &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_PROGBAR
</UL>

<P><STRONG><a name="[4e6]"></a>PROGBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, progbar_skin.o(i.PROGBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[4ac]"></a>PROGBAR_SetFont</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = PROGBAR_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[4d0]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR_SetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[4ab]"></a>PROGBAR_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = PROGBAR_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[4cf]"></a>PROGBAR_SetValue</STRONG> (Thumb, 338 bytes, Stack size 48 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[89c]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[89d]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetFontSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[89b]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[89e]"></a>RADIO_AddValue</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, radio.o(i.RADIO_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[189]"></a>RADIO_Callback</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, radio.o(i.RADIO_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = RADIO_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(i.RADIO_CreateUser)
</UL>
<P><STRONG><a name="[1ef]"></a>RADIO_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, radio.o(i.RADIO_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = RADIO_CreateIndirect &rArr; RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.constdata)
</UL>
<P><STRONG><a name="[8a3]"></a>RADIO_CreateUser</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, radio.o(i.RADIO_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateIndirect
</UL>

<P><STRONG><a name="[8a2]"></a>RADIO_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radio.o(i.RADIO_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[45]"></a>RADIO_DrawSkinFlex</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, radio_skinflex.o(i.RADIO_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = RADIO_DrawSkinFlex &rArr; GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_skinning.o(.text)
<LI> radio.o(.data)
</UL>
<P><STRONG><a name="[8a1]"></a>RADIO_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio.o(i.RADIO_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[59b]"></a>RADIO_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, radio_skin.o(i.RADIO_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
</UL>

<P><STRONG><a name="[58d]"></a>RADIO_SetText</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, radio.o(i.RADIO_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = RADIO_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[89f]"></a>RADIO_SetValue</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, radio.o(i.RADIO_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[44]"></a>RADIO__GetButtonSize</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, radio.o(i.RADIO__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RADIO__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.data)
</UL>
<P><STRONG><a name="[8a6]"></a>RADIO__SetValue</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, radio.o(i.RADIO__SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[8a7]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[18a]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[8ae]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[8af]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[8b0]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[8ac]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[6a]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.text)
<LI> scrollbar.o(.data)
</UL>
<P><STRONG><a name="[875]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(i.SCROLLBAR_GetDefaultWidth))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[8b4]"></a>SCROLLBAR_GetValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SCROLLBAR_GetValue &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
</UL>

<P><STRONG><a name="[8ab]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[874]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[4f9]"></a>SCROLLBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_skin.o(i.SCROLLBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[8a8]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[876]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[8a9]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[94a]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[191]"></a>SLIDER_Callback</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = SLIDER_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(i.SLIDER_CreateUser)
</UL>
<P><STRONG><a name="[1f2]"></a>SLIDER_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, slider.o(i.SLIDER_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = SLIDER_CreateIndirect &rArr; SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_transparentdialog.o(.constdata)
</UL>
<P><STRONG><a name="[8ba]"></a>SLIDER_CreateUser</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, slider.o(i.SLIDER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateIndirect
</UL>

<P><STRONG><a name="[8b9]"></a>SLIDER_Dec</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SLIDER_Dec &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[4a]"></a>SLIDER_DrawSkinFlex</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, slider_skinflex.o(i.SLIDER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SLIDER_DrawSkinFlex &rArr; _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidemo_1.o(.text)
<LI> slider.o(.data)
</UL>
<P><STRONG><a name="[8bf]"></a>SLIDER_GetFlag</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, slider.o(i.SLIDER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SLIDER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5ca]"></a>SLIDER_GetValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, slider.o(i.SLIDER_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SLIDER_GetValue &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnValueChanged
</UL>

<P><STRONG><a name="[8b8]"></a>SLIDER_Inc</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SLIDER_Inc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[4fa]"></a>SLIDER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, slider_skin.o(i.SLIDER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[5cb]"></a>SLIDER_SetRange</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, slider.o(i.SLIDER_SetRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SLIDER_SetRange &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[5cc]"></a>SLIDER_SetValue</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, slider.o(i.SLIDER_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SLIDER_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[192]"></a>TEXT_Callback</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[185]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, text.o(i.TEXT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 4]<UL><LI> guidemo_1.o(.constdata)
<LI> guidemo_skinning.o(.constdata)
<LI> guidemo_transparentdialog.o(.constdata)
<LI> messagebox.o(i.MESSAGEBOX_Create)
</UL>
<P><STRONG><a name="[8c1]"></a>TEXT_CreateUser</STRONG> (Thumb, 156 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[896]"></a>TEXT_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text_default.o(i.TEXT_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[4af]"></a>TEXT_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[4ae]"></a>TEXT_SetText</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text.o(i.TEXT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TEXT_SetText &rArr; _SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[4b5]"></a>TEXT_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text.o(i.TEXT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
</UL>

<P><STRONG><a name="[4b4]"></a>TEXT_SetWrapMode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, text.o(i.TEXT_SetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TEXT_SetWrapMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
</UL>

<P><STRONG><a name="[8c3]"></a>TREEVIEW_AttachItem</STRONG> (Thumb, 282 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_AttachItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
</UL>

<P><STRONG><a name="[193]"></a>TREEVIEW_Callback</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, treeview.o(i.TREEVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = TREEVIEW_Callback &rArr; _RecalcOnDemand &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcOnDemand
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1f3]"></a>TREEVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TREEVIEW_CreateIndirect &rArr; TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(.constdata)
</UL>
<P><STRONG><a name="[8cb]"></a>TREEVIEW_CreateUser</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[5de]"></a>TREEVIEW_DecSel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = TREEVIEW_DecSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5d3]"></a>TREEVIEW_GetItem</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_GetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TREEVIEW_GetItem &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevItem
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[5d8]"></a>TREEVIEW_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TREEVIEW_GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[5df]"></a>TREEVIEW_ITEM_Collapse</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TREEVIEW_ITEM_Collapse &rArr; _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[8cf]"></a>TREEVIEW_ITEM_Create</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_ITEM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TREEVIEW_ITEM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
</UL>

<P><STRONG><a name="[5d6]"></a>TREEVIEW_ITEM_Expand</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, treeview.o(i.TREEVIEW_ITEM_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TREEVIEW_ITEM_Expand &rArr; _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[5d9]"></a>TREEVIEW_ITEM_GetInfo</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_ITEM_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TREEVIEW_ITEM_GetInfo &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5dc]"></a>TREEVIEW_ITEM_SetImage</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, treeview.o(i.TREEVIEW_ITEM_SetImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TREEVIEW_ITEM_SetImage &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5dd]"></a>TREEVIEW_IncSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = TREEVIEW_IncSel &rArr; _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5d2]"></a>TREEVIEW_InsertItem</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = TREEVIEW_InsertItem &rArr; TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[194]"></a>TREEVIEW_OwnerDraw</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = TREEVIEW_OwnerDraw &rArr; _OnOwnerdraw_Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[5d4]"></a>TREEVIEW_SetAutoScrollH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetAutoScrollH))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = TREEVIEW_SetAutoScrollH &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[5d5]"></a>TREEVIEW_SetAutoScrollV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>

<P><STRONG><a name="[5da]"></a>TREEVIEW_SetHasLines</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetHasLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TREEVIEW_SetHasLines &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5db]"></a>TREEVIEW_SetSelMode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetSelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TREEVIEW_SetSelMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[648]"></a>WIDGET_AndState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[833]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[634]"></a>WIDGET_HandleActive</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[647]"></a>WIDGET_OrState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[53e]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[898]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[4ad]"></a>WIDGET_SetFocusable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_SetFocusable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[8d6]"></a>WIDGET_SetState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[8b5]"></a>WIDGET_SetWidth</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[8b3]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[9ef]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8d9]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8db]"></a>WIDGET__FillStringInRectEx</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, widget.o(i.WIDGET__FillStringInRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = WIDGET__FillStringInRectEx &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8dd]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[691]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[8df]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET__GetWindowSizeX &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[641]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[8b1]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[8e0]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[7af]"></a>WM_Activate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[546]"></a>WM_BringToBottom</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, wm_lib.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[8d5]"></a>WM_BringToTop</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, wm_lib.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[8e8]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_lib.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[8e7]"></a>WM_CheckScrollPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_lib.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[593]"></a>WM_ClrHasTrans</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_ClrHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_ClrHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[58c]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageTimer
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[570]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateUser
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[7a6]"></a>WM_Deactivate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_Deactivate &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
</UL>

<P><STRONG><a name="[49d]"></a>WM_DefaultProc</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[589]"></a>WM_DeleteTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageTimer
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>

<P><STRONG><a name="[4e9]"></a>WM_DeleteWindow</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[6a4]"></a>WM_DisableMemdev</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_DisableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_DisableMemdev &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[57a]"></a>WM_DisableWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_lib.o(i.WM_DisableWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
</UL>

<P><STRONG><a name="[75e]"></a>WM_Exec</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[8e6]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[9d2]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[8a4]"></a>WM_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[651]"></a>WM_GetClientRect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[585]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[58b]"></a>WM_GetClientWindow</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetClientWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[4a6]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[9f7]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>

<P><STRONG><a name="[4aa]"></a>WM_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnValueChanged
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[6b2]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[8f6]"></a>WM_GetFlags</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetFlags &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[664]"></a>WM_GetFocusedWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFocusedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetFocusedWindow &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[86e]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4b0]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_BUTTON
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Callback
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[86d]"></a>WM_GetInsideRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[832]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[6e0]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_lib.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[6b3]"></a>WM_GetNextSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetNextSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetNextSibling &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
</UL>

<P><STRONG><a name="[8f8]"></a>WM_GetOrgX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetOrgX &rArr; WM_GetWindowOrgX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>
<BR>[Called By]<UL><LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
</UL>

<P><STRONG><a name="[8f9]"></a>WM_GetOrgY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetOrgY &rArr; WM_GetWindowOrgY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>
<BR>[Called By]<UL><LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>

<P><STRONG><a name="[56e]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetParent &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnValueChanged
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[8b6]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[85a]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6d7]"></a>WM_GetScrollbarH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6d6]"></a>WM_GetScrollbarV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[56c]"></a>WM_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_GetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_GetUserData &rArr; WM__GetUserDataEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[5f4]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetWindowOrgX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[5f5]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowOrgY))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetWindowOrgY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
</UL>

<P><STRONG><a name="[8fb]"></a>WM_GetWindowRect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetWindowRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
</UL>

<P><STRONG><a name="[8f7]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[4a2]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[4a3]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDraw
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[174]"></a>WM_HandlePID</STRONG> (Thumb, 900 bytes, Stack size 152 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[91a]"></a>WM_HasCaptured</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[6a0]"></a>WM_HasFocus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4c6]"></a>WM_HideWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_lib.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HideProgress
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[78a]"></a>WM_Init</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6e1]"></a>WM_InvalidateRect</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateNewItem
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>

<P><STRONG><a name="[4d1]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnValueChanged
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnScrollValueChanged
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[90b]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wm_lib.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[90c]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[8a5]"></a>WM_IsEnabled</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_IsEnabled &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[67b]"></a>WM_IsFocusable</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, wm_lib.o(i.WM_IsFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WM_IsFocusable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4ed]"></a>WM_IsVisible</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_lib.o(i.WM_IsVisible))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_IsVisible &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
</UL>

<P><STRONG><a name="[595]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM_IsWindow &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[574]"></a>WM_MOTION_Enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wm_motion.o(i.WM_MOTION_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = WM_MOTION_Enable &rArr; _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
</UL>

<P><STRONG><a name="[572]"></a>WM_MOTION_SetMotion</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, wm_motion.o(i.WM_MOTION_SetMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = WM_MOTION_SetMotion &rArr; _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>

<P><STRONG><a name="[910]"></a>WM_MOTION_SetMoveable</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wm_motion.o(i.WM_MOTION_SetMoveable))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_MOTION_SetMoveable &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
</UL>

<P><STRONG><a name="[573]"></a>WM_MOTION_SetMovement</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, wm_motion.o(i.WM_MOTION_SetMovement))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = WM_MOTION_SetMovement &rArr; _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMoveable
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
</UL>

<P><STRONG><a name="[5c8]"></a>WM_MULTIBUF_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_multibuf.o(i.WM_MULTIBUF_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[4b2]"></a>WM_MakeModal</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, wm_makemodal.o(i.WM_MakeModal))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = WM_MakeModal &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[6b6]"></a>WM_MoveChildTo</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, wm_lib.o(i.WM_MoveChildTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[913]"></a>WM_MoveTo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>

<P><STRONG><a name="[6b5]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
</UL>

<P><STRONG><a name="[663]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[7e2]"></a>WM_OnKey</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, wm_lib.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[904]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[903]"></a>WM_ReleaseCapture</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[6b4]"></a>WM_ResizeWindow</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, wm_lib.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[588]"></a>WM_RestartTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbAnimation
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBk
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[8ff]"></a>WM_Screen2hWin</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_Screen2hWin &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[4e3]"></a>WM_SelectWindow</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbStatus
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[4a7]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_ByWindow
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMotionTagR
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
</UL>

<P><STRONG><a name="[5ce]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[8eb]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[4f5]"></a>WM_SetCallback</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoSkinning
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransparentDialog
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[918]"></a>WM_SetCapture</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[919]"></a>WM_SetCaptureMove</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_setcapturemove.o(i.WM_SetCaptureMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[5c6]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_lib.o(i.WM_SetCreateFlags))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[91b]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[8f1]"></a>WM_SetEnableState</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, wm_lib.o(i.WM_SetEnableState))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
</UL>

<P><STRONG><a name="[56b]"></a>WM_SetFocus</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, wm_lib.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[6a1]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i.WM_SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[6b8]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(i.WM_SetFocusOnPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
</UL>

<P><STRONG><a name="[541]"></a>WM_SetHasTrans</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[8e1]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[91f]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_lib.o(i.WM_SetScrollValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[895]"></a>WM_SetScrollbarH</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[578]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[5e1]"></a>WM_SetSize</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[749]"></a>WM_SetUserClipRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[571]"></a>WM_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_SetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_SetUserData &rArr; WM__SetUserDataEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RadialMenu
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
</UL>

<P><STRONG><a name="[4b7]"></a>WM_SetWindowPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SetWindowPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
</UL>

<P><STRONG><a name="[8d7]"></a>WM_SetXSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[8d8]"></a>WM_SetYSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[4cd]"></a>WM_ShowWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IntroduceDemo
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowProgress
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveWindow
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[7c2]"></a>WM_ValidateWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[922]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[8fe]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm__private.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
</UL>

<P><STRONG><a name="[907]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[909]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[8ee]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[75c]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[8f0]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[8f4]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__private.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[8ea]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>

<P><STRONG><a name="[8de]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[926]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[91c]"></a>WM__GetFocusedChild</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetFocusedChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocusedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[928]"></a>WM__GetLastSibling</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetLastSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[658]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[6f4]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__private.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
</UL>

<P><STRONG><a name="[6f5]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__private.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
</UL>

<P><STRONG><a name="[8e2]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[8ed]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[8fa]"></a>WM__GetUserDataEx</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__GetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM__GetUserDataEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>

<P><STRONG><a name="[681]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeX))
<BR><BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[6af]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[656]"></a>WM__InitIVRSearch</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[8e5]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[90a]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[906]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[92b]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[92c]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[8e3]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[92d]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[92e]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm__private.o(i.WM__IsAncestorOrSelf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[927]"></a>WM__IsChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>

<P><STRONG><a name="[644]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__private.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[900]"></a>WM__IsInModalArea</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9f6]"></a>WM__IsInWindow</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[8ec]"></a>WM__IsWindow</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[914]"></a>WM__MoveTo</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_move.o(i.WM__MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[912]"></a>WM__MoveWindow</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[930]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[1bf]"></a>WM__Paint1</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[9e4]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[905]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm__private.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[8e4]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[935]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__private.o(i.WM__Screen2Client))
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[917]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[69e]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[902]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[7b9]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__private.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>

<P><STRONG><a name="[8e9]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[911]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[901]"></a>WM__SendTouchMessage</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[90e]"></a>WM__SetMotionCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_touch.o(i.WM__SetMotionCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__SetMotionCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
</UL>

<P><STRONG><a name="[920]"></a>WM__SetScrollbarH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[921]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[923]"></a>WM__SetUserDataEx</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__SetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM__SetUserDataEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>

<P><STRONG><a name="[8d4]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wm__private.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + In Cycle
<LI>Call Chain = WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[974]"></a>__hardfp_ceil</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ceil.o(i.__hardfp_ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[976]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[5e9]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = __hardfp_sqrt &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
</UL>

<P><STRONG><a name="[5ee]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[ab7]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[ab8]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[ab9]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[aba]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[abb]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[975]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[9fe]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[5ea]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[a01]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[a07]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[5e6]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[a04]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[5eb]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[a05]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[5e5]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[abc]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[5ed]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[a06]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[a0a]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[5e7]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[a08]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[a00]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[a03]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[9fc]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[a09]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[5e8]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[a0b]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[9fd]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[5ec]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
</UL>

<P><STRONG><a name="[a0d]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[973]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>

<P><STRONG><a name="[a0e]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[a0f]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[2b5]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[abd]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[abe]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[9ff]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2ce]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2cc]"></a>SystemClock_Config</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2dd]"></a>Touch_Read</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, joystick_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_GetState
</UL>

<P><STRONG><a name="[2d9]"></a>Touch_Write</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, joystick_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_Uninitialize
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_Initialize
</UL>

<P><STRONG><a name="[2e6]"></a>Touch_Read</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, touch_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetState
</UL>

<P><STRONG><a name="[2e3]"></a>Touch_Write</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, touch_stmpe811.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GetState
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Uninitialize
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Initialize
</UL>

<P><STRONG><a name="[2ef]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[c8]"></a>svcRtxDelay</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = svcRtxDelay &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayStarted
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_delay.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>svcRtxDelayUntil</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rtx_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = svcRtxDelayUntil &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayUntilStarted
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxDelayError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_delay.o(.text)
</UL>
<P><STRONG><a name="[2ee]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[310]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_evflags.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGet
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGetName
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[2f2]"></a>EventFlagsSet</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventFlagsSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_set32
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[2f4]"></a>EventFlagsClear</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_clr32
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsClear
</UL>

<P><STRONG><a name="[2f6]"></a>EventFlagsCheck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_chk32_any
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_e167c757__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
</UL>

<P><STRONG><a name="[ca]"></a>osRtxEventFlagsPostProcess</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = osRtxEventFlagsPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>svcRtxEventFlagsNew</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxEventFlagsNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>svcRtxEventFlagsGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxEventFlagsGetName &rArr; EvrRtxEventFlagsGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>svcRtxEventFlagsSet</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxEventFlagsSet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>svcRtxEventFlagsClear</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = svcRtxEventFlagsClear &rArr; EvrRtxEventFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsClearDone
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsClear
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>svcRtxEventFlagsGet</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxEventFlagsGet &rArr; EvrRtxEventFlagsGet &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsGet
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>svcRtxEventFlagsWait</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = svcRtxEventFlagsWait &rArr; EvrRtxEventFlagsWaitPending &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitPending
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>svcRtxEventFlagsDelete</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, rtx_evflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxEventFlagsDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDestroyed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(.text)
</UL>
<P><STRONG><a name="[30f]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_evflags.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGet
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGetName
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[31a]"></a>isrRtxEventFlagsWait</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, rtx_evflags.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[3cc]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerFreq
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerCount
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickFreq
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelResume
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelSuspend
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[3b7]"></a>KernelBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KernelBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelSuspend
</UL>

<P><STRONG><a name="[3b9]"></a>KernelUnblock</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KernelUnblock
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelResume
</UL>

<P><STRONG><a name="[3c3]"></a>GetKernelSleepTime</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelResume
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelSuspend
</UL>

<P><STRONG><a name="[d2]"></a>svcRtxKernelInitialize</STRONG> (Thumb, 528 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = svcRtxKernelInitialize &rArr; osRtxMemoryPoolInit &rArr; EvrRtxMemoryBlockInit &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialized
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>svcRtxKernelGetInfo</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = svcRtxKernelGetInfo &rArr; EvrRtxKernelInfoRetrieved &rArr; EventRecordData &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInfoRetrieved
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>svcRtxKernelGetState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>svcRtxKernelStart</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = svcRtxKernelStart &rArr; osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Setup
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetIRQn
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Enable
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_CONTROL
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStarted
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>svcRtxKernelLock</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelLock &rArr; EvrRtxKernelLocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLocked
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>svcRtxKernelUnlock</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelUnlock &rArr; EvrRtxKernelUnlocked &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelUnlocked
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>svcRtxKernelRestoreLock</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = svcRtxKernelRestoreLock &rArr; EvrRtxKernelLockRestored &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelLockRestored
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>svcRtxKernelSuspend</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelSuspend &rArr; EvrRtxKernelSuspended &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKernelSleepTime
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KernelBlock
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelSuspended
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>svcRtxKernelResume</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = svcRtxKernelResume &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKernelSleepTime
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KernelUnblock
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelResumed
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>svcRtxKernelGetTickCount</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>svcRtxKernelGetTickFreq</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelGetTickFreq &rArr; EvrRtxKernelGetTickFreq &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetTickFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>svcRtxKernelGetSysTimerCount</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = svcRtxKernelGetSysTimerCount &rArr; EvrRtxKernelGetSysTimerCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetOverflow
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetInterval
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetCount
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetSysTimerCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>svcRtxKernelGetSysTimerFreq</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_kernel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxKernelGetSysTimerFreq &rArr; EvrRtxKernelGetSysTimerFreq &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetClock
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetSysTimerFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text)
</UL>
<P><STRONG><a name="[3c2]"></a>__set_CONTROL</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3ce]"></a>IsPrivileged</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[3cb]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_kernel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerFreq
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerCount
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickFreq
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelResume
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelSuspend
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[2a7]"></a>os_kernel_is_active</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rtx_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_kernel_is_active &rArr; osKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>

<P><STRONG><a name="[3dd]"></a>MemBlockPtr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rtx_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemBlockPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>

<P><STRONG><a name="[3e4]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolDelete
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetSpace
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCount
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetBlockSize
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCapacity
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolFree
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetName
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolNew
</UL>

<P><STRONG><a name="[df]"></a>osRtxMemoryPoolPostProcess</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = osRtxMemoryPoolPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocated
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>svcRtxMemoryPoolNew</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = svcRtxMemoryPoolNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolCreated
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>svcRtxMemoryPoolGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMemoryPoolGetName &rArr; EvrRtxMemoryPoolGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>svcRtxMemoryPoolAlloc</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = svcRtxMemoryPoolAlloc &rArr; osRtxMemoryPoolAlloc &rArr; EvrRtxMemoryBlockAlloc &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocFailed
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocated
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocTimeout
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocPending
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>svcRtxMemoryPoolFree</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxMemoryPoolFree &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolFreeFailed
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDeallocated
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocated
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>svcRtxMemoryPoolGetCapacity</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMemoryPoolGetCapacity &rArr; EvrRtxMemoryPoolGetCapacity &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCapacity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>svcRtxMemoryPoolGetBlockSize</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMemoryPoolGetBlockSize &rArr; EvrRtxMemoryPoolGetBlockSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetBlockSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetBlockSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>svcRtxMemoryPoolGetCount</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMemoryPoolGetCount &rArr; EvrRtxMemoryPoolGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>svcRtxMemoryPoolGetSpace</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMemoryPoolGetSpace &rArr; EvrRtxMemoryPoolGetSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolGetSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>svcRtxMemoryPoolDelete</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, rtx_mempool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxMemoryPoolDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDestroyed
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mempool.o(.text)
</UL>
<P><STRONG><a name="[3e3]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolDelete
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetSpace
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCount
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetBlockSize
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetCapacity
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolFree
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolAlloc
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolGetName
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolNew
</UL>

<P><STRONG><a name="[3e8]"></a>isrRtxMemoryPoolFree</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, rtx_mempool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolFreeFailed
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolDeallocated
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolError
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMemoryPoolFree
</UL>

<P><STRONG><a name="[3f8]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetSpace
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCount
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetMsgSize
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCapacity
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetName
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[3ee]"></a>MessageQueuePut</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MessageQueuePut
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_a86a7a93__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[3f0]"></a>MessageQueueGet</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MessageQueueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_a86a7a93__atomic_dec32_nz
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_a86a7a93__atomic_wr8
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[3f3]"></a>MessageQueueRemove</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueReset
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[e9]"></a>osRtxMessageQueuePostProcess</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = osRtxMessageQueuePostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>svcRtxMessageQueueNew</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueCreated
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueueTimerSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>svcRtxMessageQueueGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMessageQueueGetName &rArr; EvrRtxMessageQueueGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>svcRtxMessageQueuePut</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = svcRtxMessageQueuePut &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutPending
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>svcRtxMessageQueueGet</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = svcRtxMessageQueueGet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetPending
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>svcRtxMessageQueueGetCapacity</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMessageQueueGetCapacity &rArr; EvrRtxMessageQueueGetCapacity &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCapacity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>svcRtxMessageQueueGetMsgSize</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMessageQueueGetMsgSize &rArr; EvrRtxMessageQueueGetMsgSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetMsgSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetMsgSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>svcRtxMessageQueueGetCount</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMessageQueueGetCount &rArr; EvrRtxMessageQueueGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>svcRtxMessageQueueGetSpace</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMessageQueueGetSpace &rArr; EvrRtxMessageQueueGetSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>svcRtxMessageQueueReset</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxMessageQueueReset &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueResetDone
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>svcRtxMessageQueueDelete</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxMessageQueueDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueDestroyed
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(.text)
</UL>
<P><STRONG><a name="[3f7]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetSpace
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCount
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetMsgSize
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCapacity
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetName
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[3fb]"></a>isrRtxMessageQueuePut</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInsertPending
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[3fd]"></a>isrRtxMessageQueueGet</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, rtx_msgqueue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[408]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_mutex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetOwner
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetName
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[f4]"></a>svcRtxMutexNew</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxMutexNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexCreated
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>svcRtxMutexGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMutexGetName &rArr; EvrRtxMutexGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>svcRtxMutexAcquire</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = svcRtxMutexAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNotAcquired
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquirePending
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>svcRtxMutexRelease</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxMutexRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>svcRtxMutexGetOwner</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxMutexGetOwner &rArr; EvrRtxMutexGetOwner &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexGetOwner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>svcRtxMutexDelete</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, rtx_mutex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxMutexDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDestroyed
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text)
</UL>
<P><STRONG><a name="[407]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_mutex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetOwner
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetName
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[40b]"></a>isr_queue_put</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, rtx_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_queue_put
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
</UL>

<P><STRONG><a name="[40e]"></a>isr_queue_get</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isr_queue_get
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>

<P><STRONG><a name="[426]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetCount
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadJoin
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadDetach
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadYield
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSpace
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSize
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetState
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>

<P><STRONG><a name="[412]"></a>ThreadFlagsSet</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ThreadFlagsSet
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_set32
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxThreadFlagsSet
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
</UL>

<P><STRONG><a name="[414]"></a>ThreadFlagsClear</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ThreadFlagsClear
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_clr32
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
</UL>

<P><STRONG><a name="[416]"></a>ThreadFlagsCheck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ThreadFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_chk32_any
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsSet
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[419]"></a>osRtxThreadListRoot</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[424]"></a>osRtxThreadListUnlink</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadDetach
</UL>

<P><STRONG><a name="[41e]"></a>osRtxThreadDelayInsert</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
</UL>

<P><STRONG><a name="[41d]"></a>osRtxThreadDelayRemove</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadResume
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
</UL>

<P><STRONG><a name="[41a]"></a>osRtxThreadBlock</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>

<P><STRONG><a name="[fb]"></a>osRtxThreadPostProcess</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osRtxThreadPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[41f]"></a>osRtxThreadFree</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osRtxThreadFree &rArr; osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadDetach
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>

<P><STRONG><a name="[420]"></a>osRtxThreadDestroy</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osRtxThreadDestroy &rArr; osRtxThreadFree &rArr; osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDestroyed
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[421]"></a>osRtxThreadJoinWakeup</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osRtxThreadJoinWakeup &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoined
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[fa]"></a>svcRtxThreadExit</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = svcRtxThreadExit &rArr; osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSetRunning
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>svcRtxThreadNew</STRONG> (Thumb, 620 bytes, Stack size 56 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = svcRtxThreadNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadCreated
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>svcRtxThreadGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadGetName &rArr; EvrRtxThreadGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>svcRtxThreadGetId</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetId
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>svcRtxThreadGetState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadGetState &rArr; EvrRtxThreadGetState &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>svcRtxThreadGetStackSize</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadGetStackSize &rArr; EvrRtxThreadGetStackSize &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>svcRtxThreadGetStackSpace</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = svcRtxThreadGetStackSpace &rArr; EvrRtxThreadGetStackSpace &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetStackSpace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[103]"></a>svcRtxThreadSetPriority</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = svcRtxThreadSetPriority &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPriorityUpdated
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>svcRtxThreadGetPriority</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadGetPriority &rArr; EvrRtxThreadGetPriority &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>svcRtxThreadYield</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadYield &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadPreempted
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>svcRtxThreadSuspend</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = svcRtxThreadSuspend &rArr; osRtxThreadSwitch &rArr; EvrRtxThreadSwitched &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSuspended
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayInsert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>svcRtxThreadResume</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = svcRtxThreadResume &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadResumed
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[108]"></a>svcRtxThreadDetach</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = svcRtxThreadDetach &rArr; osRtxThreadFree &rArr; osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDetached
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListUnlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>svcRtxThreadJoin</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = svcRtxThreadJoin &rArr; osRtxThreadFree &rArr; osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoined
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoinPending
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListUnlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10a]"></a>svcRtxThreadTerminate</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = svcRtxThreadTerminate &rArr; osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSetRunning
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10b]"></a>svcRtxThreadGetCount</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = svcRtxThreadGetCount &rArr; EvrRtxThreadGetCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10c]"></a>svcRtxThreadEnumerate</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = svcRtxThreadEnumerate &rArr; EvrRtxThreadEnumerate &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadEnumerate
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10d]"></a>svcRtxThreadFlagsSet</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = svcRtxThreadFlagsSet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadBlock &rArr; EvrRtxThreadPreempted &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSetDone
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>svcRtxThreadFlagsClear</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxThreadFlagsClear &rArr; EvrRtxThreadFlagsError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsClearDone
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>svcRtxThreadFlagsGet</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = svcRtxThreadFlagsGet &rArr; EvrRtxThreadFlagsGet &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsGet
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>svcRtxThreadFlagsWait</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, rtx_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = svcRtxThreadFlagsWait &rArr; EvrRtxThreadFlagsWaitCompleted &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitNotCompleted
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitPending
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text)
</UL>
<P><STRONG><a name="[425]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetCount
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadJoin
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadDetach
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadYield
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSpace
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSize
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetState
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>

<P><STRONG><a name="[41b]"></a>osRtxKernelGetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSuspend
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[41c]"></a>osRtxThreadGetRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsWait
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsGet
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadFlagsClear
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadEnumerate
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadJoin
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadYield
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[423]"></a>osRtxThreadSetRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadTerminate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[436]"></a>isrRtxThreadFlagsSet</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, rtx_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsSetDone
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsError
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[440]"></a>IsIrqMasked</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerGetName
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[43c]"></a>TimerInsert</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimerInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[43d]"></a>TimerRemove</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rtx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerDelete
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStop
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxTimerStart
</UL>

<P><STRONG><a name="[43a]"></a>TimerUnlink</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[111]"></a>osRtxTimerTick</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = osRtxTimerTick &rArr; osMessageQueuePut &rArr; isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSetRunning
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerUnlink
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInsert
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>svcRtxTimerNew</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = svcRtxTimerNew &rArr; osRtxMemoryAlloc &rArr; EvrRtxMemoryAlloc &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCreated
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[113]"></a>svcRtxTimerGetName</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxTimerGetName &rArr; EvrRtxTimerGetName &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>svcRtxTimerStart</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxTimerStart &rArr; EvrRtxTimerError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStarted
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInsert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[115]"></a>svcRtxTimerStop</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxTimerStop &rArr; EvrRtxTimerError &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerStopped
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>svcRtxTimerIsRunning</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = svcRtxTimerIsRunning &rArr; EvrRtxTimerIsRunning &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerIsRunning
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>svcRtxTimerDelete</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, rtx_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = svcRtxTimerDelete &rArr; osRtxMemoryFree &rArr; EvrRtxMemoryFree &rArr; EventRecord4 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerDestroyed
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerError
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(.text)
</UL>
<P><STRONG><a name="[43f]"></a>IsException</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerGetName
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[43b]"></a>osRtxThreadSetRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[447]"></a>Enable_GPIO_Clock</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Enable_GPIO_Clock
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Initialize
</UL>

<P><STRONG><a name="[1cf]"></a>I2CX_GetVersion</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CX_GetVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d0]"></a>I2CX_GetCapabilities</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2c_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[446]"></a>I2C_Initialize</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = I2C_Initialize &rArr; HAL_DMA_Init &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_GPIO_Clock
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Initialize
</UL>

<P><STRONG><a name="[44a]"></a>I2C_Uninitialize</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_Uninitialize &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Uninitialize
</UL>

<P><STRONG><a name="[44c]"></a>I2C_PowerControl</STRONG> (Thumb, 706 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = I2C_PowerControl &rArr; HAL_DMA_Abort &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_PowerControl
</UL>

<P><STRONG><a name="[451]"></a>I2C_MasterTransmit</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = I2C_MasterTransmit &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MasterTransmit
</UL>

<P><STRONG><a name="[453]"></a>I2C_MasterReceive</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = I2C_MasterReceive &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_MasterReceive
</UL>

<P><STRONG><a name="[454]"></a>I2C_SlaveTransmit</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_SlaveTransmit &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_SlaveTransmit
</UL>

<P><STRONG><a name="[455]"></a>I2C_SlaveReceive</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_SlaveReceive &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_SlaveReceive
</UL>

<P><STRONG><a name="[45b]"></a>I2C_GetDataCount</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_GetDataCount
</UL>

<P><STRONG><a name="[456]"></a>I2C_Control</STRONG> (Thumb, 816 bytes, Stack size 56 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = I2C_Control &rArr; HAL_Delay &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Control
</UL>

<P><STRONG><a name="[45c]"></a>I2C_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_GetStatus
</UL>

<P><STRONG><a name="[45d]"></a>I2C_EV_IRQHandler</STRONG> (Thumb, 1752 bytes, Stack size 40 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_EV_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[45a]"></a>I2C_ER_IRQHandler</STRONG> (Thumb, 518 bytes, Stack size 24 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = I2C_ER_IRQHandler &rArr; HAL_DMA_Abort &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>

<P><STRONG><a name="[460]"></a>I2C_DMA_TxEvent</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_DMA_TxEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_TX_DMA_Error
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_TX_DMA_Complete
</UL>

<P><STRONG><a name="[45f]"></a>I2C_DMA_RxEvent</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_DMA_RxEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_RX_DMA_Error
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_RX_DMA_Complete
</UL>

<P><STRONG><a name="[1d1]"></a>I2C1_Initialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = I2C1_Initialize &rArr; I2C_Initialize &rArr; HAL_DMA_Init &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d2]"></a>I2C1_Uninitialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C1_Uninitialize &rArr; I2C_Uninitialize &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Uninitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d3]"></a>I2C1_PowerControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = I2C1_PowerControl &rArr; I2C_PowerControl &rArr; HAL_DMA_Abort &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_PowerControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d4]"></a>I2C1_MasterTransmit</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C1_MasterTransmit &rArr; I2C_MasterTransmit &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d5]"></a>I2C1_MasterReceive</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = I2C1_MasterReceive &rArr; I2C_MasterReceive &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterReceive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d6]"></a>I2C1_SlaveTransmit</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C1_SlaveTransmit &rArr; I2C_SlaveTransmit &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>I2C1_SlaveReceive</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C1_SlaveReceive &rArr; I2C_SlaveReceive &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveReceive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d8]"></a>I2C1_GetDataCount</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_GetDataCount
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetDataCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d9]"></a>I2C1_Control</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = I2C1_Control &rArr; I2C_Control &rArr; HAL_Delay &rArr; HAL_GetTick &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1da]"></a>I2C1_GetStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1cb]"></a>I2C1_RX_DMA_Complete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_RX_DMA_Complete &rArr; I2C_DMA_RxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_RxEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1cc]"></a>I2C1_RX_DMA_Error</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_RX_DMA_Error &rArr; I2C_DMA_RxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_RxEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1cd]"></a>I2C1_TX_DMA_Complete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_TX_DMA_Complete &rArr; I2C_DMA_TxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_TxEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[1ce]"></a>I2C1_TX_DMA_Error</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_TX_DMA_Error &rArr; I2C_DMA_TxEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_TxEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_stm32f4xx.o(.constdata)
</UL>
<P><STRONG><a name="[461]"></a>EventRecordItem</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__UnlockRecord
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__LockRecord
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderClockUpdate
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStop
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[465]"></a>EventGetTS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventGetTS
</UL>
<BR>[Calls]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderTimerGetCount
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__atomic_xch32
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderClockUpdate
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStop
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderStart
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[46f]"></a>EventCheckFilter</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, eventrecorder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord2
</UL>

<P><STRONG><a name="[469]"></a>crc16_ccitt</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecorderInitialize
</UL>

<P><STRONG><a name="[470]"></a>GetContext</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, eventrecorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetContext
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___15_EventRecorder_c_e8d3082c__atomic_inc8
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordData
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecord4
</UL>

<P><STRONG><a name="[47b]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[47a]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[480]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[47f]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[483]"></a>DMA_SetConfig</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f4xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[49c]"></a>SystemInit_ExtMemCtl</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit_ExtMemCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[123]"></a>_cbBk</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>_cbEffect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = _cbEffect &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[4a1]"></a>_DrawWindowBk</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawWindowBk &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinInfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbFrameWinControl
</UL>

<P><STRONG><a name="[11f]"></a>_cbFrameWinControl</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = _cbFrameWinControl &rArr; FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>_cbFrameWinInfo</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _cbFrameWinInfo &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawWindowBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>_DrawBk</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawBk &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>_DrawBkCircle</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _DrawBkCircle &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed32
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>_DrawBkSimple</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawBkSimple &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>_FrameDrawSkinFlex</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _FrameDrawSkinFlex &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawSkin_FRAMEWIN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[4c5]"></a>_HideProgress</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _HideProgress &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[4c7]"></a>_UpdateControlText</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _UpdateControlText &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddStringToString
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_AddIntToString
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Main
</UL>

<P><STRONG><a name="[4cc]"></a>_ShowProgress</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _ShowProgress &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Delay
</UL>

<P><STRONG><a name="[4d6]"></a>_IntroduceDemo</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _IntroduceDemo &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ConfigureDemo
</UL>

<P><STRONG><a name="[11d]"></a>_DrawSkin_BUTTON</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _DrawSkin_BUTTON &rArr; BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[11e]"></a>_DrawSkin_PROGBAR</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _DrawSkin_PROGBAR &rArr; PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_GetMinMax
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[11c]"></a>_DrawSkin_FRAMEWIN</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _DrawSkin_FRAMEWIN &rArr; _FrameDrawSkinFlex &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetText
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FrameDrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_1.o(.text)
</UL>
<P><STRONG><a name="[4e2]"></a>_Main</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, guidemo_1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _Main &rArr; GUIDEMO_Intro &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetDefaultSkin
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Intro
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultSkin
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShowCursor
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ClearHalt
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateControlText
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Main
</UL>

<P><STRONG><a name="[4ff]"></a>_DrawBk</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _DrawBk &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[502]"></a>_WriteGear</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _WriteGear &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AutomotiveDemo
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAngle_0
</UL>

<P><STRONG><a name="[3]"></a>_GetAngle_0</STRONG> (Thumb, 408 bytes, Stack size 8 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _GetAngle_0 &rArr; _WriteGear &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>_GetAngle_1</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, guidemo_automotive.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_Draw_0</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _Draw_0 &rArr; GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>_Draw_1</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _Draw_1 &rArr; GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_automotive.o(.data)
</UL>
<P><STRONG><a name="[506]"></a>_AutomotiveDemo</STRONG> (Thumb, 504 bytes, Stack size 152 bytes, guidemo_automotive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _AutomotiveDemo &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DeleteAuto
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateAuto
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteGear
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Automotive
</UL>

<P><STRONG><a name="[50e]"></a>_DrawLabel</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, guidemo_bargraph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawLabel &rArr; GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
</UL>

<P><STRONG><a name="[513]"></a>_DrawDiagramAt</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidemo_bargraph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _DrawDiagramAt &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmapMag
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoBarGraph
</UL>

<P><STRONG><a name="[51a]"></a>_DemoBarGraph</STRONG> (Thumb, 340 bytes, Stack size 184 bytes, guidemo_bargraph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = _DemoBarGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDiagramAt
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLabel
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_BarGraph
</UL>

<P><STRONG><a name="[51e]"></a>_SetPalette</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _SetPalette &rArr; GUIDEMO_MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
</UL>

<P><STRONG><a name="[520]"></a>_ShowGIF</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = _ShowGIF &rArr; GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSub
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreen_BMP_GIF_JPG
</UL>

<P><STRONG><a name="[524]"></a>_DrawBitmaps</STRONG> (Thumb, 258 bytes, Stack size 80 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _DrawBitmaps &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenGrayScale
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenHighColor
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawScreenPaletteBasedBitmaps
</UL>

<P><STRONG><a name="[a]"></a>_DrawScreenAlphaBitmaps</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = _DrawScreenAlphaBitmaps &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_MixColors
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>_DrawScreenPaletteBasedBitmaps</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _DrawScreenPaletteBasedBitmaps &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPalette
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>_DrawScreen_BMP_GIF_JPG</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1668<LI>Call Chain = _DrawScreen_BMP_GIF_JPG &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _JPEG_DrawEx &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>_DrawScreenHighColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = _DrawScreenHighColor &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>_DrawScreenGrayScale</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidemo_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = _DrawScreenGrayScale &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmaps
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_bitmap.o(.data)
</UL>
<P><STRONG><a name="[528]"></a>_ShowCursorType</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, guidemo_cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _ShowCursorType &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispCursor
</UL>

<P><STRONG><a name="[52a]"></a>_DispCursor</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, guidemo_cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = _DispCursor &rArr; GUIDEMO_Wait &rArr; GUIDEMO_Delay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Hide
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Wait
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_Select
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowCursorType
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Cursor
</UL>

<P><STRONG><a name="[52c]"></a>_DrawFrame</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawFrame &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[52d]"></a>_DrawLogo</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _DrawLogo &rArr; GUI_MEMDEV_RotateHQ &rArr; _Rotate32HQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[532]"></a>_DrawText</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint0
</UL>

<P><STRONG><a name="[1e0]"></a>_Paint0</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _Paint0 &rArr; _DrawLogo &rArr; GUI_MEMDEV_RotateHQ &rArr; _Rotate32HQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_fading.o(.constdata)
</UL>
<P><STRONG><a name="[1e1]"></a>_Paint1</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _Paint1 &rArr; _DrawLogo &rArr; GUI_MEMDEV_RotateHQ &rArr; _Rotate32HQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLogo
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_fading.o(.constdata)
</UL>
<P><STRONG><a name="[534]"></a>_FadeScreens</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = _FadeScreens &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadingDemo
</UL>

<P><STRONG><a name="[536]"></a>_FadingDemo</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, guidemo_fading.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _FadingDemo &rArr; _FadeScreens &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeScreens
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Fading
</UL>

<P><STRONG><a name="[1c]"></a>_AddData_Sine</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _AddData_Sine &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>_AddData_Heartbeat</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _AddData_Heartbeat &rArr; GRAPH_DATA_YT_AddValue &rArr; GRAPH__AddValue &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_AddValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.data)
</UL>
<P><STRONG><a name="[53a]"></a>_ShowGraph</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_NotifyStartNext
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachData
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachData
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GraphDemo
</UL>

<P><STRONG><a name="[127]"></a>_cbBk</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_graph.o(.text)
</UL>
<P><STRONG><a name="[53d]"></a>_GraphDemo</STRONG> (Thumb, 578 bytes, Stack size 80 bytes, guidemo_graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = _GraphDemo &rArr; _ShowGraph &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_ShiftRight
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridVis
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridOffY
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistY
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetGridDistX
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetColor
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetPos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_SetOff
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Delete
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SCALE_Create
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DetachScale
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Create
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_CreateEx
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_AttachScale
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGraph
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Graph
</UL>

<P><STRONG><a name="[553]"></a>_AddRow</STRONG> (Thumb, 162 bytes, Stack size 96 bytes, guidemo_listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_InsertRow
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[558]"></a>_InitListview</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, guidemo_listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = _InitListview &rArr; LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetCompareFunc
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDragLimit
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[562]"></a>_Action</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, guidemo_listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemBkColor
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddRow
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoListview
</UL>

<P><STRONG><a name="[569]"></a>_DemoListview</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, guidemo_listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = _DemoListview &rArr; _Action &rArr; _AddRow &rArr; LISTVIEW_InsertRow &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitListview
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Listview
</UL>

<P><STRONG><a name="[128]"></a>_cbDraw</STRONG> (Thumb, 772 bytes, Stack size 64 bytes, guidemo_radialmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _cbDraw &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_radialmenu.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>_cbMotion</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, guidemo_radialmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _cbMotion &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_radialmenu.o(.text)
</UL>
<P><STRONG><a name="[56f]"></a>_RadialMenu</STRONG> (Thumb, 590 bytes, Stack size 72 bytes, guidemo_radialmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = _RadialMenu &rArr; GUIDEMO_CheckCancelDelay &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DispTitle
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancelDelay
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_RadialMenu
</UL>

<P><STRONG><a name="[575]"></a>_AddListviewItem</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = _AddListviewItem &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
</UL>

<P><STRONG><a name="[12b]"></a>_DrawSkin</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _DrawSkin &rArr; FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[577]"></a>_InitDialogSelect</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = _InitDialogSelect &rArr; _AddListviewItem &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddListviewItem
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRBorder
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetLBorder
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[579]"></a>_InitDialogOrder</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _InitDialogOrder &rArr; DROPDOWN_SetTextColor &rArr; LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogOrder
</UL>

<P><STRONG><a name="[57e]"></a>_GetVehicle</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _GetVehicle &rArr; EDIT_SetText &rArr; _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[581]"></a>_MessageBox</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = _MessageBox &rArr; MESSAGEBOX_Create &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGEBOX_Create
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogSelect
</UL>

<P><STRONG><a name="[12d]"></a>_cbBkWindow</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _cbBkWindow &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDispPosY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[12a]"></a>_cbDialogSelect</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = _cbDialogSelect &rArr; GUI_MEMDEV_MoveOutWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MessageBox
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVehicle
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogSelect
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[12c]"></a>_cbDialogProgress</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = _cbDialogProgress &rArr; GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>_cbDialogOrder</STRONG> (Thumb, 724 bytes, Stack size 56 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = _cbDialogOrder &rArr; GUI_MEMDEV_MoveInWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDialogOrder
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>_cbAnimation</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = _cbAnimation &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_skinning.o(.text)
</UL>
<P><STRONG><a name="[598]"></a>_DemoSkinning</STRONG> (Thumb, 274 bytes, Stack size 72 bytes, guidemo_skinning.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = _DemoSkinning &rArr; GUI_MEMDEV_MoveInWindow &rArr; _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultSkin
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetSkin
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultTextAlign
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultFont
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetDefaultFont
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetDefaultSkin
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetDefaultSkin
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Skinning
</UL>

<P><STRONG><a name="[59f]"></a>_GetPixelsPerSecond</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, guidemo_speed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _GetPixelsPerSecond &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speed
</UL>

<P><STRONG><a name="[5a5]"></a>_CreateRoundedRect</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _CreateRoundedRect &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5a7]"></a>_ReplaceColorsGradient</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _ReplaceColorsGradient &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
</UL>

<P><STRONG><a name="[5a8]"></a>_ReplaceColors</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ReplaceColors &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5a9]"></a>_CreateCircle</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _CreateCircle &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColorsGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5ac]"></a>_CreateRing</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _CreateRing &rArr; GUI_AA_DrawArc &rArr; GUI_AA_DrawArcHR &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColorsGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
</UL>

<P><STRONG><a name="[5af]"></a>_CreateDoubleRing</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _CreateDoubleRing &rArr; _CreateRing &rArr; GUI_AA_DrawArc &rArr; GUI_AA_DrawArcHR &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5b1]"></a>_MakeNumberStringEx</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _MakeNumberStringEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNumberString
</UL>

<P><STRONG><a name="[5b0]"></a>_MakeNumberString</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _MakeNumberString &rArr; _MakeNumberStringEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNumberStringEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5b2]"></a>_CreateReflex</STRONG> (Thumb, 352 bytes, Stack size 80 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _CreateReflex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5b4]"></a>_RemoveTransparencyEffectCirc</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _RemoveTransparencyEffectCirc &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>

<P><STRONG><a name="[5b6]"></a>_CreateScale</STRONG> (Thumb, 1420 bytes, Stack size 224 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = _CreateScale &rArr; _CreateDoubleRing &rArr; _CreateRing &rArr; GUI_AA_DrawArc &rArr; GUI_AA_DrawArcHR &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColorIndex
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveTransparencyEffectCirc
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateReflex
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNumberString
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateDoubleRing
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRing
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateCircle
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReplaceColors
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5b7]"></a>_DrawCentered</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawCentered &rArr; GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[5b8]"></a>_GetFontColor</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _GetFontColor &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5b9]"></a>_DrawNeedleAndSpeed</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _DrawNeedleAndSpeed &rArr; GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[132]"></a>_Draw</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _Draw &rArr; _DrawNeedleAndSpeed &rArr; GUI_AA_FillPolygon &rArr; _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_speedometer.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>_CalcXIn</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _CalcXIn &rArr; LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_speedometer.o(.text)
</UL>
<P><STRONG><a name="[130]"></a>_CalcXOut</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _CalcXOut &rArr; LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_speedometer.o(.text)
</UL>
<P><STRONG><a name="[5bc]"></a>_FillBkDev</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _FillBkDev &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5bd]"></a>_Roll</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = _Roll &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Rotate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RollIn
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RollOut
</UL>

<P><STRONG><a name="[5bf]"></a>_RollOut</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = _RollOut &rArr; _Roll &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5c0]"></a>_RollIn</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = _RollIn &rArr; _Roll &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Roll
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5c1]"></a>_KillMemdevs</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _KillMemdevs &rArr; GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5c2]"></a>_ShowTitle</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = _ShowTitle &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpeedometerDemo
</UL>

<P><STRONG><a name="[5c3]"></a>_SpeedometerDemo</STRONG> (Thumb, 1026 bytes, Stack size 184 bytes, guidemo_speedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = _SpeedometerDemo &rArr; _RollIn &rArr; _Roll &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DeleteAuto
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateAuto
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTextExtend
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowTitle
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_KillMemdevs
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RollIn
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RollOut
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillBkDev
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNeedleAndSpeed
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetFontColor
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawCentered
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateScale
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Speedometer
</UL>

<P><STRONG><a name="[135]"></a>_cbBk</STRONG> (Thumb, 740 bytes, Stack size 40 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _cbBk &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_DrawBk
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_transparentdialog.o(.text)
</UL>
<P><STRONG><a name="[5c9]"></a>_OnValueChanged</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _OnValueChanged &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClient
</UL>

<P><STRONG><a name="[134]"></a>_cbClient</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _cbClient &rArr; _OnValueChanged &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnValueChanged
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_transparentdialog.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>_cbFrame</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _cbFrame &rArr; FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_transparentdialog.o(.text)
</UL>
<P><STRONG><a name="[136]"></a>_cbDialog</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _cbDialog &rArr; FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_transparentdialog.o(.text)
</UL>
<P><STRONG><a name="[5cd]"></a>_TransparentDialog</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, guidemo_transparentdialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = _TransparentDialog &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_TransparentDialog
</UL>

<P><STRONG><a name="[5cf]"></a>_MoveSprite</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = _MoveSprite &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
</UL>

<P><STRONG><a name="[5d1]"></a>_InitTreeview</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[5d7]"></a>_Action</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_SetInfoText
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_CheckCancel
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetHasLines
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_SetImage
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_GetInfo
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSprite
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoTreeview
</UL>

<P><STRONG><a name="[137]"></a>_cbDialog</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = _cbDialog &rArr; _InitTreeview &rArr; TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTreeview
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_treeview.o(.text)
</UL>
<P><STRONG><a name="[5e0]"></a>_DemoTreeview</STRONG> (Thumb, 480 bytes, Stack size 104 bytes, guidemo_treeview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = _DemoTreeview &rArr; _Action &rArr; GUIDEMO_CheckCancel &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Action
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_Treeview
</UL>

<P><STRONG><a name="[5e4]"></a>_DrawGradientRoundBar</STRONG> (Thumb, 576 bytes, Stack size 144 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawGradientRoundBar &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>

<P><STRONG><a name="[5ef]"></a>_OnPaintSub</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _OnPaintSub &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[5f0]"></a>_OnKeySub</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _OnKeySub &rArr; WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[5f1]"></a>_OnPIDStateChangeSub</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _OnPIDStateChangeSub &rArr; WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSubMenu
</UL>

<P><STRONG><a name="[138]"></a>_cbSubMenu</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _cbSubMenu &rArr; _OnKeySub &rArr; WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPIDStateChangeSub
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeySub
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(.text)
</UL>
<P><STRONG><a name="[5f2]"></a>_OpenSubMenu</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
</UL>

<P><STRONG><a name="[5f3]"></a>_CreateBitmap</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _CreateBitmap &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[5f7]"></a>_OnPaintMain</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _OnPaintMain &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[5f9]"></a>_OnKeyMain</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _OnKeyMain &rArr; _OpenSubMenu &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMain
</UL>

<P><STRONG><a name="[139]"></a>_cbStatus</STRONG> (Thumb, 604 bytes, Stack size 48 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _cbStatus &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(.text)
</UL>
<P><STRONG><a name="[13b]"></a>_cbMain</STRONG> (Thumb, 342 bytes, Stack size 48 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _cbMain &rArr; _CreateBitmap &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKeyMain
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintMain
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(.text)
</UL>
<P><STRONG><a name="[5fb]"></a>_DrawBackground</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWin
</UL>

<P><STRONG><a name="[13a]"></a>_cbBkWin</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _cbBkWin &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(.text)
</UL>
<P><STRONG><a name="[5fc]"></a>_ExecSpriteAnimation</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _ExecSpriteAnimation &rArr; GUI_SPRITE_SetBitmapAndPosition &rArr; _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[5fd]"></a>_CreateButton</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _CreateButton &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyFromLCD
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradientRoundBar
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbButton
</UL>

<P><STRONG><a name="[13c]"></a>_cbButton</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = _cbButton &rArr; BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidemo_washingmachine.o(.text)
</UL>
<P><STRONG><a name="[5fe]"></a>_ExecMachine</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _ExecMachine &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetTime
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DemoWashingMachine
</UL>

<P><STRONG><a name="[600]"></a>_DemoWashingMachine</STRONG> (Thumb, 546 bytes, Stack size 80 bytes, guidemo_washingmachine.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _DemoWashingMachine &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_GetConfFlag
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMachine
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecSpriteAnimation
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Create
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDEMO_WashingMachine
</UL>

<P><STRONG><a name="[13d]"></a>GUI_TOUCH_Tick</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_TOUCH_Tick &rArr; GUI_TOUCH_Exec &rArr; Touch_GetState &rArr; Touch_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_x_rte.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>GUI_JOYSTICK_Tick</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_rte.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_JOYSTICK_Tick &rArr; GUI_JOYSTICK_Exec &rArr; Joystick_GetState &rArr; Touch_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JOYSTICK_Exec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_x_rte.o(.text)
</UL>
<P><STRONG><a name="[615]"></a>wr_reg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lcdconf_mcbqvga_lg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Write1_16
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Write0_16
</UL>
<BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitController
</UL>

<P><STRONG><a name="[616]"></a>_InitController</STRONG> (Thumb, 518 bytes, Stack size 8 bytes, lcdconf_mcbqvga_lg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[6f6]"></a>_DrawArcAA</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, guiaa_arc.o(i._DrawArcAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArcHR
</UL>
<BR>[Called By]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArcHR
</UL>

<P><STRONG><a name="[701]"></a>_DrawCharAA4_NoTrans</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, guiaa_char4.o(i._DrawCharAA4_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _DrawCharAA4_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA4
</UL>

<P><STRONG><a name="[1d]"></a>_DrawCharAA4_Trans</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, guiaa_char4.o(i._DrawCharAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawCharAA4_Trans &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_char4.o(.data)
</UL>
<P><STRONG><a name="[6ce]"></a>_FillCircle</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, guiaa_circle.o(i._FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[6fe]"></a>_CalcClipRectHL</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, guiaa_lib.o(i._CalcClipRectHL))
<BR><BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[6fd]"></a>_CleanLine</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guiaa_lib.o(i._CleanLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CleanLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>

<P><STRONG><a name="[165]"></a>_DrawHLine</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[6f8]"></a>_FlushLine</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[164]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[6f7]"></a>_AA_DrawLine</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, guiaa_line.o(i._AA_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _AA_DrawLine &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawLine
</UL>

<P><STRONG><a name="[6fa]"></a>_FillPolygonAA</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, guiaa_poly.o(i._FillPolygonAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _FillPolygonAA &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
</UL>

<P><STRONG><a name="[1f6]"></a>_GetIndexMask_8666</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_8666.o(i._GetIndexMask_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[758]"></a>_DrawRect</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gui_2dlib.o(i._DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawRect &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[705]"></a>_AddFreeMemory</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[704]"></a>_Alloc</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[9b4]"></a>_EnlargeBlocks</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[93a]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[707]"></a>_InitOnce</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[942]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[706]"></a>_PushFreeBlock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>

<P><STRONG><a name="[709]"></a>_RemoveFreeBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[708]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[93b]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[978]"></a>_CalcInterSectLin</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_arc.o(i._CalcInterSectLin))
<BR><BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[977]"></a>_CalcX</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_arc.o(i._CalcX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcX
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[6bb]"></a>_DrawArc</STRONG> (Thumb, 714 bytes, Stack size 80 bytes, gui_arc.o(i._DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcX
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArcHR
</UL>

<P><STRONG><a name="[71d]"></a>_Draw</STRONG> (Thumb, 408 bytes, Stack size 120 bytes, gui_bmp.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _Draw &rArr; _DrawBitmap_16bpp &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_32bpp
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
</UL>

<P><STRONG><a name="[96f]"></a>_DrawBitmap_16bpp</STRONG> (Thumb, 412 bytes, Stack size 160 bytes, gui_bmp.o(i._DrawBitmap_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _DrawBitmap_16bpp &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[96e]"></a>_DrawBitmap_32bpp</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, gui_bmp.o(i._DrawBitmap_32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _DrawBitmap_32bpp &rArr; _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[96b]"></a>_DrawBitmap_Pal</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, gui_bmp.o(i._DrawBitmap_Pal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawBitmap_Pal &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[96c]"></a>_DrawBitmap_RGB</STRONG> (Thumb, 248 bytes, Stack size 144 bytes, gui_bmp.o(i._DrawBitmap_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_32bpp
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[96d]"></a>_DrawBitmap_RLE</STRONG> (Thumb, 580 bytes, Stack size 88 bytes, gui_bmp.o(i._DrawBitmap_RLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawBitmap_RLE &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[1e]"></a>_DrawLine_RGB</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_bmp.o(i._DrawLine_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawLine_RGB
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_bmp.o(i._Draw)
<LI> gui_bmp.o(i._DrawBitmap_RGB)
<LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[9e6]"></a>_GetBitfieldsPara</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_bmp.o(i._GetBitfieldsPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetBitfieldsPara
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>

<P><STRONG><a name="[9a9]"></a>_GetClipParam</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, gui_bmp.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[9aa]"></a>_GetEarlyOut</STRONG> (Thumb, 188 bytes, Stack size 28 bytes, gui_bmp.o(i._GetEarlyOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _GetEarlyOut
</UL>
<BR>[Called By]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[1a4]"></a>_Index2ColorBitfields</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui_bmp.o(i._Index2ColorBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Index2ColorBitfields &rArr; _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[722]"></a>_ManageBitfields</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gui_bmp.o(i._ManageBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitfieldsPara
</UL>
<BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBitfields
</UL>

<P><STRONG><a name="[22]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_End &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[9ea]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gui_bmp.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[21]"></a>_NextPixel_NextLine</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, gui_bmp.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>_NextPixel_Start</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui_bmp.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[1fa]"></a>_DrawNonExistingCharacter</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, gui_char.o(i._DrawNonExistingCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawNonExistingCharacter &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddRect
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNonExistingCharWidth
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_char.o(.constdata)
</UL>
<P><STRONG><a name="[1f8]"></a>_DrawNonExistingCharacter_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_char.o(i._DrawNonExistingCharacter_Dummy))
<BR>[Address Reference Count : 1]<UL><LI> gui_char.o(.constdata)
</UL>
<P><STRONG><a name="[1f9]"></a>_GetNonExistingCharWidth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i._GetNonExistingCharWidth))
<BR>[Address Reference Count : 1]<UL><LI> gui_char.o(.constdata)
</UL>
<P><STRONG><a name="[1f7]"></a>_GetNonExistingCharWidth_Dummy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_char.o(i._GetNonExistingCharWidth_Dummy))
<BR>[Address Reference Count : 1]<UL><LI> gui_char.o(.constdata)
</UL>
<P><STRONG><a name="[6c0]"></a>_Draw8Point</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, gui_circ.o(i._Draw8Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[752]"></a>_DrawCircle_PenSize</STRONG> (Thumb, 182 bytes, Stack size 72 bytes, gui_circ.o(i._DrawCircle_PenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawCircle_PenSize
</UL>
<BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[782]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[177]"></a>_OnExit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[167]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_cursor.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_cursor.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[72f]"></a>_Show</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_cursor.o(i._Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_ShowEx
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[654]"></a>CL_DispChar</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CL_DispChar &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[1fc]"></a>_DrawBitmap</STRONG> (Thumb, 396 bytes, Stack size 88 bytes, gui_drawbitmap_24.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_24.o(.constdata)
</UL>
<P><STRONG><a name="[1fe]"></a>_DrawBitmap444_12</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_444.o(i._DrawBitmap444_12))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _DrawBitmap444_12 &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_444.o(.constdata)
</UL>
<P><STRONG><a name="[1ff]"></a>_DrawBitmap</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_565.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _DrawBitmap &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_565.o(.constdata)
</UL>
<P><STRONG><a name="[201]"></a>_CallDrawBitmapHW</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui_drawbitmap_8888.o(i._CallDrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _CallDrawBitmapHW &rArr; _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[986]"></a>_DoClipping</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_drawbitmap_8888.o(i._DoClipping))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[985]"></a>_DrawBitmap</STRONG> (Thumb, 1094 bytes, Stack size 136 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[950]"></a>_DrawBitmapHW</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallDrawBitmapHW
</UL>

<P><STRONG><a name="[200]"></a>_DrawBitmap_8888</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>_SetPixelAlpha</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_drawbitmap_8888.o(i._SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.data)
</UL>
<P><STRONG><a name="[754]"></a>_DrawGradient</STRONG> (Thumb, 340 bytes, Stack size 80 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[759]"></a>_DrawRoundedFrame</STRONG> (Thumb, 284 bytes, Stack size 104 bytes, gui_drawroundedframe.o(i._DrawRoundedFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawRoundedFrame &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedFrame
</UL>

<P><STRONG><a name="[75a]"></a>_DrawRoundedRect</STRONG> (Thumb, 286 bytes, Stack size 104 bytes, gui_drawroundedrect.o(i._DrawRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawRoundedRect &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRoundedRect
</UL>

<P><STRONG><a name="[6ee]"></a>_ClearTextBackground</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_encext.o(i._ClearTextBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _ClearTextBackground &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[16b]"></a>_ClearUnusedPixels</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gui_gif.o(i._ClearUnusedPixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClearUnusedPixels &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[16c]"></a>_DrawFromDataBlock</STRONG> (Thumb, 444 bytes, Stack size 128 bytes, gui_gif.o(i._DrawFromDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawFromDataBlock &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__InitLZW
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[76f]"></a>_GetDataBlock</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_gif.o(i._GetDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[76b]"></a>_GetGIFInfo</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_gif.o(i._GetGIFInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _GetGIFInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>

<P><STRONG><a name="[764]"></a>_GetImageDimension</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_gif.o(i._GetImageDimension))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetImageDimension &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
</UL>

<P><STRONG><a name="[769]"></a>_GetImageInfo</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gui_gif.o(i._GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _GetImageInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[772]"></a>_GetNextCode</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, gui_gif.o(i._GetNextCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
</UL>

<P><STRONG><a name="[76c]"></a>_GetSizeAndColorTable</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_gif.o(i._GetSizeAndColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetSizeAndColorTable &rArr; _ReadColorMap &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[76e]"></a>_ReadColorMap</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_gif.o(i._ReadColorMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ReadColorMap &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
</UL>

<P><STRONG><a name="[770]"></a>_ReadExtension</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_gif.o(i._ReadExtension))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[9d4]"></a>_SkipLocalColorTable</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gui_gif.o(i._SkipLocalColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SkipLocalColorTable &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[966]"></a>_CalcMCUBlockOrder</STRONG> (Thumb, 332 bytes, Stack size 68 bytes, gui_jpeg.o(i._CalcMCUBlockOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[953]"></a>_CheckHuffmanTables</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, gui_jpeg.o(i._CheckHuffmanTables))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHuffmanTable
</UL>
<BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[957]"></a>_CoeffBufferAlloc</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gui_jpeg.o(i._CoeffBufferAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _CoeffBufferAlloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[959]"></a>_CoeffBufferGetP_Locked</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gui_jpeg.o(i._CoeffBufferGetP_Locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[795]"></a>_ConvertH1V1</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, gui_jpeg.o(i._ConvertH1V1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ConvertH1V1
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[794]"></a>_ConvertH1V2</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, gui_jpeg.o(i._ConvertH1V2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ConvertH1V2
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[793]"></a>_ConvertH2V1</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, gui_jpeg.o(i._ConvertH2V1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ConvertH2V1
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[792]"></a>_ConvertH2V2</STRONG> (Thumb, 392 bytes, Stack size 64 bytes, gui_jpeg.o(i._ConvertH2V2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ConvertH2V2
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[954]"></a>_CreateHuffmanTable</STRONG> (Thumb, 318 bytes, Stack size 1360 bytes, gui_jpeg.o(i._CreateHuffmanTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1364<LI>Call Chain = _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckHuffmanTables
</UL>

<P><STRONG><a name="[1a2]"></a>_DecodeBlockAC_First</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, gui_jpeg.o(i._DecodeBlockAC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DecodeBlockAC_First &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[1a1]"></a>_DecodeBlockAC_Refine</STRONG> (Thumb, 390 bytes, Stack size 72 bytes, gui_jpeg.o(i._DecodeBlockAC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DecodeBlockAC_Refine &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[1a0]"></a>_DecodeBlockDC_First</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DecodeBlockDC_First &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[19f]"></a>_DecodeBlockDC_Refine</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DecodeBlockDC_Refine &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[78f]"></a>_DecodeNextRow</STRONG> (Thumb, 510 bytes, Stack size 104 bytes, gui_jpeg.o(i._DecodeNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DecodeNextRow &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[79b]"></a>_DecodeProgressive</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, gui_jpeg.o(i._DecodeProgressive))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
</UL>

<P><STRONG><a name="[965]"></a>_DecodeScanProg</STRONG> (Thumb, 318 bytes, Stack size 112 bytes, gui_jpeg.o(i._DecodeScanProg))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DecodeScanProg &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
</UL>
<BR>[Called By]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[970]"></a>_Draw</STRONG> (Thumb, 260 bytes, Stack size 112 bytes, gui_jpeg.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556<LI>Call Chain = _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_JPEG_DrawEx
</UL>

<P><STRONG><a name="[9df]"></a>_FillInputBuffer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_jpeg.o(i._FillInputBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8
</UL>

<P><STRONG><a name="[963]"></a>_GetBitsNoMarker</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetBitsNoMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8_NoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[958]"></a>_GetBuffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_jpeg.o(i._GetBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
</UL>

<P><STRONG><a name="[9ce]"></a>_GetDHT</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, gui_jpeg.o(i._GetDHT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetDHT &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
</UL>

<P><STRONG><a name="[9d0]"></a>_GetDQT</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, gui_jpeg.o(i._GetDQT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU16
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
</UL>

<P><STRONG><a name="[9cf]"></a>_GetInt</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDHT
</UL>

<P><STRONG><a name="[79d]"></a>_GetSOF</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_jpeg.o(i._GetSOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetSOF &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU16
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>

<P><STRONG><a name="[9dc]"></a>_GetSOS</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, gui_jpeg.o(i._GetSOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetSOS &rArr; _SkipInputData &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[1ca]"></a>_GetStuff</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_jpeg.o(i._GetStuff))
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._StoreU8)
</UL>
<P><STRONG><a name="[9d1]"></a>_GetU16</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetU16
</UL>
<BR>[Called By]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
</UL>

<P><STRONG><a name="[16e]"></a>_GetU8</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_jpeg.o(i._GetU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetU8 &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
<LI> gui_jpeg.o(i._GetStuff)
</UL>
<P><STRONG><a name="[9c9]"></a>_GetU8_NoMarker</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetU8_NoMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreU8
</UL>
<BR>[Called By]<UL><LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>

<P><STRONG><a name="[962]"></a>_HuffDecode</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_jpeg.o(i._HuffDecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[791]"></a>_IDCT</STRONG> (Thumb, 992 bytes, Stack size 116 bytes, gui_jpeg.o(i._IDCT))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _IDCT
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[9e3]"></a>_InitBitBuffer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_jpeg.o(i._InitBitBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[79a]"></a>_InitFrame</STRONG> (Thumb, 530 bytes, Stack size 48 bytes, gui_jpeg.o(i._InitFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _InitFrame &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
</UL>

<P><STRONG><a name="[79c]"></a>_InitScan</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gui_jpeg.o(i._InitScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckHuffmanTables
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[78c]"></a>_JPEG_DrawEx</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, gui_jpeg.o(i._JPEG_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588<LI>Call Chain = _JPEG_DrawEx &rArr; _Draw &rArr; GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
</UL>

<P><STRONG><a name="[78e]"></a>_LoadNextRow</STRONG> (Thumb, 490 bytes, Stack size 136 bytes, gui_jpeg.o(i._LoadNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _LoadNextRow &rArr; _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[964]"></a>_ProcessRestart</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gui_jpeg.o(i._ProcessRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
</UL>

<P><STRONG><a name="[790]"></a>_ReadMarkers</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gui_jpeg.o(i._ReadMarkers))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDHT
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[9dd]"></a>_SkipInputData</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_jpeg.o(i._SkipInputData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SkipInputData &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
</UL>

<P><STRONG><a name="[9e0]"></a>_StoreU8</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_jpeg.o(i._StoreU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _StoreU8
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8_NoMarker
</UL>

<P><STRONG><a name="[971]"></a>_WritePixels</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, gui_jpeg.o(i._WritePixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _WritePixels &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[7f9]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[7e1]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[9fb]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[7dd]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[173]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[7de]"></a>_StoreState</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[203]"></a>_Color2Index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Color2Index))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[206]"></a>_Color2IndexBulk</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gui_setalpha.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[97b]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, gui_setalpha.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitLine16BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[980]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 368 bytes, Stack size 80 bytes, gui_setalpha.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[981]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[982]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, gui_setalpha.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitLine32BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[983]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[984]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui_setalpha.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[208]"></a>_DrawBitmap</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[97f]"></a>_DrawBitmapLine</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitmapLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[209]"></a>_DrawHLine</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[20a]"></a>_DrawVLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[20b]"></a>_FillRect</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_setalpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[9a8]"></a>_GetBitsPerPixel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_setalpha.o(i._GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>

<P><STRONG><a name="[212]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[210]"></a>_GetDevFunc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_setalpha.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[211]"></a>_GetDevProp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[205]"></a>_GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetIndexMask))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[97d]"></a>_GetLine</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, gui_setalpha.o(i._GetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[20c]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[97c]"></a>_GetPointers</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPointers))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[213]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[204]"></a>_Index2Color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Index2Color))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[207]"></a>_Index2ColorBulk</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui_setalpha.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[7f0]"></a>_InitAlpha</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gui_setalpha.o(i._InitAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[97e]"></a>_MixColors</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_setalpha.o(i._MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[1bd]"></a>_OnExit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_setalpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._InitAlpha)
</UL>
<P><STRONG><a name="[1bc]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, gui_setalpha.o(i._ReadRectFromMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._GetLine)
</UL>
<P><STRONG><a name="[20f]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[20d]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[20e]"></a>_XorPixel</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_setalpha.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[955]"></a>_ClipRectEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_sprite.o(i._ClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClipRectEx &rArr; _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[960]"></a>_CreateBuffer</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[7e8]"></a>_DoColorConversion</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[214]"></a>_DrawBitmap</STRONG> (Thumb, 990 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[215]"></a>_DrawHLine</STRONG> (Thumb, 444 bytes, Stack size 112 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[216]"></a>_DrawVLine</STRONG> (Thumb, 424 bytes, Stack size 112 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[217]"></a>_FillRect</STRONG> (Thumb, 482 bytes, Stack size 80 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[9c7]"></a>_FlushBuffer</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[9ca]"></a>_GetBkIndex</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndex &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect
</UL>

<P><STRONG><a name="[9cb]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndexAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndexAlpha &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[987]"></a>_GetClipParam</STRONG> (Thumb, 320 bytes, Stack size 36 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[988]"></a>_GetClipRect</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[21e]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[21c]"></a>_GetDevFunc</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[21d]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[956]"></a>_GetDeviceRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDeviceRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[218]"></a>_GetPixelIndex</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[21f]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[7ec]"></a>_Link</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Link &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[9f8]"></a>_Multibuf_Begin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._Multibuf_Begin))
<BR><BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[9d9]"></a>_PixelExists</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i._PixelExists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[1ae]"></a>_ReadRect</STRONG> (Thumb, 312 bytes, Stack size 112 bytes, gui_sprite.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ReadRect &rArr; _GetBkIndex &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[9f1]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ReleaseBuffer &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[7e9]"></a>_SetBitmapAndPosition</STRONG> (Thumb, 936 bytes, Stack size 168 bytes, gui_sprite.o(i._SetBitmapAndPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _SetBitmapAndPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Multibuf_Begin
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[9f9]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetBkIndexBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetBkIndexBuffered &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapAndPosition
</UL>

<P><STRONG><a name="[21b]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[219]"></a>_SetPixelIndex</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[7ea]"></a>_SetPosition</STRONG> (Thumb, 1120 bytes, Stack size 216 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Multibuf_Begin
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[7ed]"></a>_SpriteDraw</STRONG> (Thumb, 494 bytes, Stack size 80 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Multibuf_Begin
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[7e6]"></a>_Undraw</STRONG> (Thumb, 234 bytes, Stack size 96 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Multibuf_Begin
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
</UL>

<P><STRONG><a name="[7e7]"></a>_Unlink</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Unlink &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Hide
</UL>

<P><STRONG><a name="[21a]"></a>_XorPixel</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[222]"></a>_Color2IndexBulk</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guicc_565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[220]"></a>_Color2Index_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565.o(i._Color2Index_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[221]"></a>_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_565.o(i._GetIndexMask_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[223]"></a>_Index2ColorBulk</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, guicc_565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[226]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[224]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[225]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[227]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[840]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSize
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXY
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSize
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[848]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
</UL>

<P><STRONG><a name="[842]"></a>_GetDevCap</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_info.o(i._GetDevCap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevCap
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevCap
</UL>

<P><STRONG><a name="[989]"></a>_DrawBitmap</STRONG> (Thumb, 532 bytes, Stack size 72 bytes, lcd_rle8.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitmap &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
</UL>

<P><STRONG><a name="[228]"></a>_DrawBitmap_RLE8</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, lcd_rle8.o(i._DrawBitmap_RLE8))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap_RLE8 &rArr; _DrawBitmap &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>_GetByte_pPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_rle8.o(i._GetByte_pPixel))
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(i._DrawBitmap_RLE8)
</UL>
<P><STRONG><a name="[1a9]"></a>_Draw</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, lcd_rlealpha.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[229]"></a>_DrawBitmap_RLEAlpha</STRONG> (Thumb, 488 bytes, Stack size 104 bytes, lcd_rlealpha.o(i._DrawBitmap_RLEAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _DrawBitmap_RLEAlpha &rArr; GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>_DrawClip</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lcd_rlealpha.o(i._DrawClip))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _DrawClip &rArr; _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rlealpha.o(i._DrawBitmap_RLEAlpha)
</UL>
<P><STRONG><a name="[972]"></a>_FlushBuffer</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, lcd_rlealpha.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLEAlpha
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[22a]"></a>_DrawBitmap</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, guidrv_flexcolor.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[22b]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[22c]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[22d]"></a>_FillRect</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[234]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[232]"></a>_GetDevFunc</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[1b6]"></a>_GetDevFunc_Exit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1b3]"></a>_GetDevFunc_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = _GetDevFunc_Init &rArr; LCD_X_DisplayDriver &rArr; _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1b0]"></a>_GetDevFunc_Off</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._GetDevFunc_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = _GetDevFunc_Off &rArr; LCD_X_DisplayDriver &rArr; _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1af]"></a>_GetDevFunc_On</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._GetDevFunc_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = _GetDevFunc_On &rArr; LCD_X_DisplayDriver &rArr; _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1bb]"></a>_GetDevFunc_SetRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
</UL>
<P><STRONG><a name="[1b5]"></a>_GetDevFunc_SetRectOutside</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetDevFunc_SetRectOutside
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1b2]"></a>_GetDevFunc_SetSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _GetDevFunc_SetSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1b1]"></a>_GetDevFunc_SetVSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _GetDevFunc_SetVSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[233]"></a>_GetDevProp</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[22e]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[235]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[236]"></a>_Log2PhysX_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23a]"></a>_Log2PhysX_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[238]"></a>_Log2PhysX_X0Y1S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23c]"></a>_Log2PhysX_X0Y1S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[237]"></a>_Log2PhysX_X1Y0S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23b]"></a>_Log2PhysX_X1Y0S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[239]"></a>_Log2PhysX_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23d]"></a>_Log2PhysX_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23e]"></a>_Log2PhysY_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[242]"></a>_Log2PhysY_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[240]"></a>_Log2PhysY_X0Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[244]"></a>_Log2PhysY_X0Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[23f]"></a>_Log2PhysY_X1Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[243]"></a>_Log2PhysY_X1Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[241]"></a>_Log2PhysY_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[245]"></a>_Log2PhysY_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[1c3]"></a>_ReadPixelCust_16bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_16bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[1c2]"></a>_ReadPixelCust_18bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_18bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[1c4]"></a>_ReadRectCust_16bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[1c1]"></a>_ReadRectCust_18bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_18bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_18bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[1b4]"></a>_SetDevFunc</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _SetDevFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[231]"></a>_SetOrg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; _InitController &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[22f]"></a>_SetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[230]"></a>_XorPixel</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[98a]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 322 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[98b]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[98c]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[98d]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[153]"></a>_DrawBitmap</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[154]"></a>_FillRect</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI__memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[157]"></a>_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._ReadData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[158]"></a>_WriteData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._WriteData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[27]"></a>_ReadPixel_16bpp_B16_I</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16_I
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
<LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[159]"></a>_ReadPixel_16bpp_B16_II</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_II))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16_II
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
</UL>
<P><STRONG><a name="[15a]"></a>_ReadPixel_16bpp_B16_III</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B16_III))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16_III
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor_SetReadFunc66712_B16)
</UL>
<P><STRONG><a name="[15f]"></a>_ReadPixel_16bpp_B8</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadPixel_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[160]"></a>_ReadPixel_18bpp_B18</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_18bpp_B18))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ReadPixel_18bpp_B18
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[28]"></a>_ReadPixel_18bpp_B9_I</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidrv_flexcolor_func66712.o(i._ReadPixel_18bpp_B9_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_18bpp_B9_I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[161]"></a>_ReadRect_18bpp_B18</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, guidrv_flexcolor_func66712.o(i._ReadRect_18bpp_B18))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ReadRect_18bpp_B18
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[162]"></a>_SetInterface</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._SetInterface))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[15e]"></a>_SetOrientation</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i._SetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[15c]"></a>_SetPhysRAMAddr</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i._SetPhysRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPhysRAMAddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[15d]"></a>_SetRect</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, guidrv_flexcolor_func66712.o(i._SetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SetRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i.GUIDRV_FlexColor__SetFunc66712)
</UL>
<P><STRONG><a name="[1c7]"></a>_SetReg_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._SetReg_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i._SetInterface)
</UL>
<P><STRONG><a name="[29]"></a>_SetReg_B18_I</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._SetReg_B18_I))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[1c5]"></a>_SetReg_B8</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidrv_flexcolor_func66712.o(i._SetReg_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetReg_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i._SetInterface)
</UL>
<P><STRONG><a name="[2b]"></a>_SetReg_B9_I</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._SetReg_B9_I))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[1c8]"></a>_WritePara_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._WritePara_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i._SetInterface)
</UL>
<P><STRONG><a name="[2a]"></a>_WritePara_B18_I</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._WritePara_B18_I))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[1c6]"></a>_WritePara_B8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._WritePara_B8))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(i._SetInterface)
</UL>
<P><STRONG><a name="[2c]"></a>_WritePara_B9_I</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66712.o(i._WritePara_B9_I))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66712.o(.data)
</UL>
<P><STRONG><a name="[990]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidev_8.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[991]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_8.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[992]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 344 bytes, Stack size 40 bytes, guidev_8.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[24a]"></a>_DrawBitmap</STRONG> (Thumb, 482 bytes, Stack size 112 bytes, guidev_8.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[24b]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_8.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[24c]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_8.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[24d]"></a>_FillRect</STRONG> (Thumb, 168 bytes, Stack size 72 bytes, guidev_8.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[254]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_8.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[252]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_8.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[253]"></a>_GetDevProp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guidev_8.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[24e]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_8.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[255]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_8.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[251]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_8.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[24f]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_8.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[98f]"></a>_XY2PTR</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_8.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[250]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_8.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_8.o(.constdata)
</UL>
<P><STRONG><a name="[995]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[996]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[994]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP_DDB
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[997]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[256]"></a>_DrawBitmap</STRONG> (Thumb, 666 bytes, Stack size 104 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[257]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[258]"></a>_DrawVLine</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[259]"></a>_FillRect</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[260]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[25e]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[25f]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[25a]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[261]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[25d]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[25b]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[993]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[25c]"></a>_XorPixel</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[7be]"></a>_FadeDevices</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, guidev_moveandfade.o(i._FadeDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _FadeDevices &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInDevices
</UL>

<P><STRONG><a name="[170]"></a>_CalcParaFadeOut</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaFadeOut))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow)
</UL>
<P><STRONG><a name="[171]"></a>_CalcParaMoveIn</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, guidev_moveandfadewin.o(i._CalcParaMoveIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcParaMoveIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveInWindow)
</UL>
<P><STRONG><a name="[172]"></a>_CalcParaMoveOut</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaMoveOut))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_MoveOutWindow)
</UL>
<P><STRONG><a name="[7c0]"></a>_FadeWindow</STRONG> (Thumb, 312 bytes, Stack size 88 bytes, guidev_moveandfadewin.o(i._FadeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = _FadeWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[7c9]"></a>_MoveWindow</STRONG> (Thumb, 362 bytes, Stack size 128 bytes, guidev_moveandfadewin.o(i._MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = _MoveWindow &rArr; GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveOutWindow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_MoveInWindow
</UL>

<P><STRONG><a name="[9ac]"></a>_DrawColumnScaled</STRONG> (Thumb, 224 bytes, Stack size 96 bytes, guidev_perspective.o(i._DrawColumnScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawColumnScaled &rArr; GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>

<P><STRONG><a name="[7bd]"></a>_DrawMemdevPerspective</STRONG> (Thumb, 208 bytes, Stack size 88 bytes, guidev_perspective.o(i._DrawMemdevPerspective))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _DrawMemdevPerspective &rArr; _GetX &rArr; __hardfp_sqrt &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetX
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawColumnScaled
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawPerspectiveX
</UL>

<P><STRONG><a name="[9b1]"></a>_GetX</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, guidev_perspective.o(i._GetX))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GetX &rArr; __hardfp_sqrt &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxKernelErrorNotify &rArr; EvrRtxKernelErrorNotify &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawMemdevPerspective
</UL>

<P><STRONG><a name="[7cc]"></a>_Check</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guidev_rotate.o(i._Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _Check &rArr; GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>

<P><STRONG><a name="[9f3]"></a>_GetColor</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, guidev_rotate.o(i._GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[9cd]"></a>_GetColorHQ</STRONG> (Thumb, 406 bytes, Stack size 136 bytes, guidev_rotate.o(i._GetColorHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _GetColorHQ &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
</UL>

<P><STRONG><a name="[9f2]"></a>_GetMinMax</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, guidev_rotate.o(i._GetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[9f4]"></a>_MixColors</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_rotate.o(i._MixColors))
<BR><BR>[Called By]<UL><LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32HQ
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Rotate32
</UL>

<P><STRONG><a name="[7d6]"></a>_Rotate32</STRONG> (Thumb, 492 bytes, Stack size 144 bytes, guidev_rotate.o(i._Rotate32))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Rotate32 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinMax
<LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Rotate
</UL>

<P><STRONG><a name="[7cd]"></a>_Rotate32HQ</STRONG> (Thumb, 490 bytes, Stack size 144 bytes, guidev_rotate.o(i._Rotate32HQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Rotate32HQ &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinMax
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_RotateHQ
</UL>

<P><STRONG><a name="[639]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
</UL>

<P><STRONG><a name="[63b]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchReactOnLevel
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Toggle
</UL>

<P><STRONG><a name="[30]"></a>_OnPidStateChange</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, button.o(i._OnPidStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnPidStateChange &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
<LI> button.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>_OnTouchReactOnLevel</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, button.o(i._OnTouchReactOnLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _OnTouchReactOnLevel &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(i.BUTTON_SetReactOnLevel)
<LI> button.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _Create &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>_Paint</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[64e]"></a>_DrawBackground</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetBkColor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[64f]"></a>_DrawBitmap</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, checkbox_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[652]"></a>_DrawFocus</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawFocus &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[998]"></a>_GenCheck</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9c8]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Called By]<UL><LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[65b]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dropdown.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[38]"></a>_Create</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, dropdown_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 80 bytes, dropdown_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[66d]"></a>_DrawBackground</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, dropdown_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[66e]"></a>_DrawText</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, dropdown_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[698]"></a>_CalcScrollPos</STRONG> (Thumb, 864 bytes, Stack size 136 bytes, edit.o(i._CalcScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _CalcScrollPos &rArr; EDIT_GetCursorPixelPos &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistXEx
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorPixelPos
</UL>
<BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPosEx
</UL>

<P><STRONG><a name="[94e]"></a>_CalcSizes</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, edit.o(i._CalcSizes))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _CalcSizes &rArr; GUI__CalcTextRect &rArr; GUI_GetFontDistY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[688]"></a>_ChangeCharacter</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, edit.o(i._ChangeCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _ChangeCharacter &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[683]"></a>_DeleteChar</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, edit.o(i._DeleteChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[68f]"></a>_IncrementBuffer</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, edit.o(i._IncrementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[684]"></a>_InsertChar</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, edit.o(i._InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumGlyphs2NumBytes
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[697]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, edit.o(i._IsSpaceInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[68b]"></a>_ManageTimer</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, edit.o(i._ManageTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _ManageTimer &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[68d]"></a>_Paint</STRONG> (Thumb, 514 bytes, Stack size 104 bytes, edit.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRectEx &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRectEx
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRectEx
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[14d]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__cbClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[6a2]"></a>_OnChildHasFocus</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, framewin.o(i._OnChildHasFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _OnChildHasFocus &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[69d]"></a>_OnTouch</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, framewin.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _OnTouch &rArr; WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[6ab]"></a>_SetActive</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, framewin.o(i._SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[14a]"></a>_Draw</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, framewin_buttonclose.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _Draw &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[14b]"></a>_cbClose</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_buttonclose.o(i._cbClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _cbClose &rArr; BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[3d]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, framewin_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>_GetBorderSize</STRONG> (Thumb, 64 bytes, Stack size 64 bytes, framewin_skin.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>_Paint</STRONG> (Thumb, 264 bytes, Stack size 136 bytes, framewin_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _Paint &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[9ab]"></a>_DrawBorder</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, graph.o(i._DrawBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _DrawBorder &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[9ae]"></a>_DrawGrid</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, graph.o(i._DrawGrid))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _DrawGrid &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLineStyle
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6df]"></a>_GetParams</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, graph.o(i._GetParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetParams
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollbars
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
</UL>

<P><STRONG><a name="[6d3]"></a>_ManageScrollbars</STRONG> (Thumb, 206 bytes, Stack size 80 bytes, graph.o(i._ManageScrollbars))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = _ManageScrollbars &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_SetBorder
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[6d5]"></a>_OnDelete</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, graph.o(i._OnDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _OnDelete &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[6d4]"></a>_OnPaint</STRONG> (Thumb, 466 bytes, Stack size 104 bytes, graph.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = _OnPaint &rArr; _DrawGrid &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetParams
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGrid
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBorder
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[6d8]"></a>_OnScrollValueChanged</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, graph.o(i._OnScrollValueChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _OnScrollValueChanged &rArr; WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_Callback
</UL>

<P><STRONG><a name="[14f]"></a>_InvalidateNewItem</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, graph_data_yt.o(i._InvalidateNewItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _InvalidateNewItem &rArr; GRAPH__InvalidateGraph &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH__InvalidateGraph
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[151]"></a>_OnDelete</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, graph_data_yt.o(i._OnDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _OnDelete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPH_DATA_YT_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[150]"></a>_OnPaint</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, graph_data_yt.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_data_yt.o(i.GRAPH_DATA_YT_Create)
</UL>
<P><STRONG><a name="[152]"></a>_OnPaint</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, graph_scale.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _OnPaint &rArr; _OnPaintHorz &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintVert
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintHorz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graph_scale.o(i.GRAPH_SCALE_Create)
</UL>
<P><STRONG><a name="[9ee]"></a>_OnPaintHorz</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, graph_scale.o(i._OnPaintHorz))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _OnPaintHorz &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[9ed]"></a>_OnPaintVert</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, graph_scale.o(i._OnPaintVert))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _OnPaintVert &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[9d3]"></a>_GetDividerIndex</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, header.o(i._GetDividerIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetDividerIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[82d]"></a>_GetItemIndex</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, header.o(i._GetItemIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetItemIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[82e]"></a>_HandlePID</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[9e2]"></a>_LimitDragWitdh</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._LimitDragWitdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _LimitDragWitdh &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[82f]"></a>_RestoreOldCursor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, header.o(i._RestoreOldCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[40]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>_Paint</STRONG> (Thumb, 314 bytes, Stack size 152 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _Paint &rArr; WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[837]"></a>_DrawArrow</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[834]"></a>_DrawBackground</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[835]"></a>_DrawBitmap</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmap &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[838]"></a>_DrawOverlap</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[836]"></a>_DrawText</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, header_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[979]"></a>_GetArrowPara</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, header_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[881]"></a>_AddKey</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, listview.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = _AddKey &rArr; _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[93d]"></a>_ColumnScroll</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, listview.o(i._ColumnScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _ColumnScroll &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[882]"></a>_FreeAttached</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview.o(i._FreeAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[894]"></a>_GetHeaderWidth</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, listview.o(i._GetHeaderWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _GetHeaderWidth &rArr; HEADER_GetItemWidth &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
</UL>

<P><STRONG><a name="[892]"></a>_GetNumVisibleRows</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, listview.o(i._GetNumVisibleRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _GetNumVisibleRows &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
</UL>

<P><STRONG><a name="[888]"></a>_GetSel</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, listview.o(i._GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _GetSel &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
</UL>

<P><STRONG><a name="[893]"></a>_GetXSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listview.o(i._GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMotion
</UL>

<P><STRONG><a name="[9d8]"></a>_GetYSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, listview.o(i._GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[884]"></a>_MoveSel</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[95b]"></a>_MoveSelCol</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, listview.o(i._MoveSelCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _MoveSelCol &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[880]"></a>_NotifyOwner</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, listview.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[87d]"></a>_OnMotion</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, listview.o(i._OnMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _OnMotion &rArr; _GetNumVisibleRows &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[93c]"></a>_OnPage</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, listview.o(i._OnPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[87e]"></a>_OnPaint</STRONG> (Thumb, 1216 bytes, Stack size 264 bytes, listview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = _OnPaint &rArr; _GetNumVisibleRows &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[88c]"></a>_SetAutoScroll</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, listview.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
</UL>

<P><STRONG><a name="[87f]"></a>_SetSelFromPos</STRONG> (Thumb, 314 bytes, Stack size 120 bytes, listview.o(i._SetSelFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[891]"></a>_UpdateScrollPos</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, listview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _UpdateScrollPos &rArr; WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[95c]"></a>_Compare</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, listview_setsort.o(i._Compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Compare &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[885]"></a>_CreateSortObject</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listview_setsort.o(i._CreateSortObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _CreateSortObject &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSort
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_EnableSort
</UL>

<P><STRONG><a name="[19d]"></a>_Free</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, listview_setsort.o(i._Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Free &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview_setsort.o(i._CreateSortObject)
</UL>
<P><STRONG><a name="[9de]"></a>_GetSelUnsorted</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listview_setsort.o(i._GetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetSelUnsorted
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[9fa]"></a>_SetSelUnsorted</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, listview_setsort.o(i._SetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[19e]"></a>_Sort</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, listview_setsort.o(i._Sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = _Sort &rArr; _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview_setsort.o(i._CreateSortObject)
</UL>
<P><STRONG><a name="[899]"></a>_SetValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, progbar.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[43]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>_Paint</STRONG> (Thumb, 332 bytes, Stack size 120 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _Paint &rArr; PROGBAR__GetTextRect &rArr; GUI_GetFontSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[89a]"></a>_DrawBackground</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, progbar_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[8a0]"></a>_OnTouch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, radio.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _OnTouch &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[47]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>_Paint</STRONG> (Thumb, 444 bytes, Stack size 160 bytes, radio_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _Paint &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[19c]"></a>_CalcPositions</STRONG> (Thumb, 334 bytes, Stack size 120 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[49]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>_Paint</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[18e]"></a>_DrawBackgroundH</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[18b]"></a>_DrawBackgroundV</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[97a]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[190]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[18d]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[8b2]"></a>_GetArrowPara</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollbar_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[8b7]"></a>_OnTouch</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, slider.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[9f0]"></a>_CopyItemInfo2Rect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider_skin.o(i._CopyItemInfo2Rect))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[4c]"></a>_Create</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, slider_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>_Paint</STRONG> (Thumb, 542 bytes, Stack size 152 bytes, slider_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyItemInfo2Rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[8bc]"></a>_DrawShaftH</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftH))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawShaftH &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[8bb]"></a>_DrawShaftV</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftV))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawShaftV &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[8be]"></a>_DrawThumbH</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbH))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _DrawThumbH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[8bd]"></a>_DrawThumbV</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbV))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[8c0]"></a>_Paint</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, text.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrapEx &rArr; GUI_DispStringInRectEx &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrapEx
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[8c2]"></a>_SetText</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, text.o(i._SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>

<P><STRONG><a name="[943]"></a>_CalcDrawInfo</STRONG> (Thumb, 938 bytes, Stack size 64 bytes, treeview.o(i._CalcDrawInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _CalcDrawInfo &rArr; GUI_GetFontSizeY &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[946]"></a>_CalcParams</STRONG> (Thumb, 206 bytes, Stack size 136 bytes, treeview.o(i._CalcParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _CalcParams &rArr; _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcOnDemand
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[948]"></a>_CallOwnerDraw</STRONG> (Thumb, 28 bytes, Stack size 64 bytes, treeview.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[8ce]"></a>_CollapseItem</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, treeview.o(i._CollapseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[947]"></a>_ConnectLines</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, treeview.o(i._ConnectLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ConnectLines
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[8d0]"></a>_ExpandItem</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, treeview.o(i._ExpandItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[945]"></a>_GetBitmap</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, treeview.o(i._GetBitmap))
<BR><BR>[Called By]<UL><LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[944]"></a>_GetBitmapPointer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i._GetBitmapPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[8c4]"></a>_GetLastNodeItem</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, treeview.o(i._GetLastNodeItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetLastNodeItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
</UL>

<P><STRONG><a name="[9d6]"></a>_GetNextVisibleItem</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, treeview.o(i._GetNextVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetNextVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[8cd]"></a>_GetPrevItem</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, treeview.o(i._GetPrevItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPrevItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetItem
</UL>

<P><STRONG><a name="[9da]"></a>_GetPrevVisibleItem</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
</UL>

<P><STRONG><a name="[9db]"></a>_GetPrevVisibleNode</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetPrevVisibleNode &rArr; _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[9e1]"></a>_GetVisibility</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, treeview.o(i._GetVisibility))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[8c6]"></a>_InitRecalc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, treeview.o(i._InitRecalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _InitRecalc
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>

<P><STRONG><a name="[8c5]"></a>_LinkItem</STRONG> (Thumb, 364 bytes, Stack size 64 bytes, treeview.o(i._LinkItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>

<P><STRONG><a name="[9e5]"></a>_ManageAutoScroll</STRONG> (Thumb, 406 bytes, Stack size 120 bytes, treeview.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Called By]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RecalcOnDemand
</UL>

<P><STRONG><a name="[8cc]"></a>_MoveSel</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, treeview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = _MoveSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_IncSel
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_DecSel
</UL>

<P><STRONG><a name="[8ca]"></a>_OnKey</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, treeview.o(i._OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _OnKey &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[8d1]"></a>_OnOwnerdraw_GetYSize</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, treeview.o(i._OnOwnerdraw_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _OnOwnerdraw_GetYSize &rArr; _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[8d2]"></a>_OnOwnerdraw_Paint</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, treeview.o(i._OnOwnerdraw_Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _OnOwnerdraw_Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[8c7]"></a>_OnPaint</STRONG> (Thumb, 426 bytes, Stack size 224 bytes, treeview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[8c8]"></a>_OnTouch</STRONG> (Thumb, 430 bytes, Stack size 96 bytes, treeview.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = _OnTouch &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_GetSel
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[8c9]"></a>_RecalcOnDemand</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, treeview.o(i._RecalcOnDemand))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _RecalcOnDemand &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[8d3]"></a>_SetAutoScroll</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, treeview.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollH
</UL>

<P><STRONG><a name="[9e8]"></a>_SetSel</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, treeview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[949]"></a>_SkipClosedItems</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, treeview.o(i._SkipClosedItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SkipClosedItems
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[9ec]"></a>_UpdateScrollPos</STRONG> (Thumb, 204 bytes, Stack size 72 bytes, treeview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[8da]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[264]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[265]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[262]"></a>_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[931]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[8ef]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[925]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[9b2]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 136 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[8f3]"></a>_Exec1Draw</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wm.o(i._Exec1Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[8f2]"></a>_Exec1Input</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _Exec1Input &rArr; GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[929]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[9c5]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[9c6]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[9c4]"></a>_Findy1</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[90d]"></a>_Invalidate1Abs</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[198]"></a>_OnExit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[932]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[934]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[933]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[924]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[197]"></a>_cbBackWin</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[19b]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[8fc]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[8f5]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_lib.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[195]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_lib.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_lib.o(i.WM_BringToTop)
</UL>
<P><STRONG><a name="[93f]"></a>_AimDestination</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm_motion.o(i._AimDestination))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _AimDestination &rArr; _AimDestinationXY
</UL>
<BR>[Calls]<UL><LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestinationXY
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[941]"></a>_AimDestinationXY</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, wm_motion.o(i._AimDestinationXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _AimDestinationXY
</UL>
<BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
</UL>

<P><STRONG><a name="[961]"></a>_CreatehCrit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_motion.o(i._CreatehCrit))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _CreatehCrit &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
</UL>

<P><STRONG><a name="[9bf]"></a>_DoFinalMoveXY</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wm_motion.o(i._DoFinalMoveXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoFinalMoveXY
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[90f]"></a>_ExecMotion</STRONG> (Thumb, 1664 bytes, Stack size 256 bytes, wm_motion.o(i._ExecMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendFinalMoveMessage
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SavePrivateContextOnDemand
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSigns
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConfirmation
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoFinalMoveXY
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMovement
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_SetMotion
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MOTION_Enable
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
</UL>

<P><STRONG><a name="[9b7]"></a>_GetConfirmation</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, wm_motion.o(i._GetConfirmation))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _GetConfirmation &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9b6]"></a>_GetContext</STRONG> (Thumb, 130 bytes, Stack size 104 bytes, wm_motion.o(i._GetContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetphCrit
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[1ad]"></a>_GetMotionTagR</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, wm_motion.o(i._GetMotionTagR))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _GetMotionTagR &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ATan2
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[1aa]"></a>_GetMotionTagXY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_motion.o(i._GetMotionTagXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _GetMotionTagXY &rArr; GUI_GetTime &rArr; GUI_X_GetTime &rArr; osKernelGetTickCount &rArr; svcRtxKernelGetTickCount &rArr; EvrRtxKernelGetTickCount &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._ExecMotion)
</UL>
<P><STRONG><a name="[940]"></a>_GetPos</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_motion.o(i._GetPos))
<BR><BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AimDestination
</UL>

<P><STRONG><a name="[9b8]"></a>_GetSigns</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_motion.o(i._GetSigns))
<BR><BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9b5]"></a>_GetphCrit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_motion.o(i._GetphCrit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _GetphCrit &rArr; _CreatehCrit &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreatehCrit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContext
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[1ac]"></a>_Motion_AutoWithinParent</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, wm_motion.o(i._Motion_AutoWithinParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = _Motion_AutoWithinParent &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_ByWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[1ab]"></a>_Motion_ByWindow</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, wm_motion.o(i._Motion_ByWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _Motion_ByWindow &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Motion_AutoWithinParent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._GetConfirmation)
</UL>
<P><STRONG><a name="[9be]"></a>_MoveToNearestSnapPosition</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, wm_motion.o(i._MoveToNearestSnapPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _MoveToNearestSnapPosition &rArr; _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartMotionTimer
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendFinalMoveMessage
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPositionXY
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9e9]"></a>_MoveToNearestSnapPositionXY</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, wm_motion.o(i._MoveToNearestSnapPositionXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MoveToNearestSnapPositionXY
</UL>
<BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
</UL>

<P><STRONG><a name="[199]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_motion.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[9bd]"></a>_ProcessMotion</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, wm_motion.o(i._ProcessMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ProcessMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendFinalMoveMessage
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9ba]"></a>_SavePrivateContextOnDemand</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_motion.o(i._SavePrivateContextOnDemand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SavePrivateContextOnDemand &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9bb]"></a>_Screen2hWin</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wm_motion.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _Screen2hWin &rArr; WM_IsEnabled &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsEnabled
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StopMotionOnHit
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9c0]"></a>_SendFinalMoveMessage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_motion.o(i._SendFinalMoveMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SendFinalMoveMessage &rArr; _ProcessMotion
</UL>
<BR>[Calls]<UL><LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9b9]"></a>_StartMotionTimer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_motion.o(i._StartMotionTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _StartMotionTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveToNearestSnapPosition
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[9bc]"></a>_StopMotionOnHit</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_motion.o(i._StopMotionOnHit))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _StopMotionOnHit &rArr; _Screen2hWin &rArr; WM_IsEnabled &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>

<P><STRONG><a name="[19a]"></a>_cbMotion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_motion.o(i._cbMotion))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = _cbMotion &rArr; _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExecMotion
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i.WM_MOTION_Enable)
</UL>
<P><STRONG><a name="[1c9]"></a>_cbTimer</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wm_motion.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = _cbTimer &rArr; _cbMotion &rArr; _ExecMotion &rArr; _GetContext &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMotion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_motion.o(i._StartMotionTimer)
</UL>
<P><STRONG><a name="[266]"></a>_MULTIBUF_Begin</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[267]"></a>_MULTIBUF_End</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_End &rArr; GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[937]"></a>_SetScrollbar</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[196]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[92a]"></a>_CalcNumBytes</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_userdata.o(i._CalcNumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CalcNumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[6ff]"></a>_DrawCharAA2_NoTrans</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, guiaa_char2.o(i._DrawCharAA2_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _DrawCharAA2_NoTrans &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[700]"></a>_DrawCharAA2_Trans</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, guiaa_char2.o(i._DrawCharAA2_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawCharAA2_Trans &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[179]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[81d]"></a>_DrawTwinArc2</STRONG> (Thumb, 262 bytes, Stack size 88 bytes, gui__drawtwinarc.o(i._DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[81e]"></a>_DrawTwinArc4</STRONG> (Thumb, 370 bytes, Stack size 112 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[820]"></a>_FillTrippleArc</STRONG> (Thumb, 572 bytes, Stack size 104 bytes, gui__drawtwinarc.o(i._FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[9c3]"></a>_GetTrippleArcPara</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i._GetTrippleArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[9b3]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[82b]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[815]"></a>_DispLine</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[74b]"></a>_SetRotation</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_dispstringinrectex.o(i._SetRotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _SetRotation &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
</UL>

<P><STRONG><a name="[756]"></a>_DrawGraph</STRONG> (Thumb, 514 bytes, Stack size 112 bytes, gui_drawgraphex.o(i._DrawGraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawGraph &rArr; LCD_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGraphEx
</UL>

<P><STRONG><a name="[9af]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>

<P><STRONG><a name="[6c7]"></a>_DrawLine1Ex</STRONG> (Thumb, 456 bytes, Stack size 64 bytes, gui_drawline.o(i._DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[6c9]"></a>_DrawLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[9b0]"></a>_SetLineColor</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine1Ex
</UL>

<P><STRONG><a name="[6c3]"></a>_atan2</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[6d0]"></a>_Add</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[6f0]"></a>_GetTaskNo</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_task.o(i._GetTaskNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
</UL>

<P><STRONG><a name="[163]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[7fb]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[176]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[7fd]"></a>_RemoveFromLinList</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[7fe]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[26a]"></a>_CalcSizeOfChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_uc.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc.o(.constdata)
</UL>
<P><STRONG><a name="[26b]"></a>_Encode</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, gui_uc.o(i._Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc.o(.constdata)
</UL>
<P><STRONG><a name="[268]"></a>_GetCharCode</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gui_uc.o(i._GetCharCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetCharCode
</UL>
<BR>[Calls]<UL><LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetLigature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc.o(.constdata)
</UL>
<P><STRONG><a name="[269]"></a>_GetCharSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_uc.o(i._GetCharSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetCharSize
</UL>
<BR>[Calls]<UL><LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetLigature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc.o(.constdata)
</UL>
<P><STRONG><a name="[26e]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[26f]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[26c]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[26d]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[968]"></a>_DispFloatFix</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_valf.o(i._DispFloatFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[73f]"></a>_DispFloatMin</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, gui_valf.o(i._DispFloatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _DispFloatMin &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RoundHalfUp
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatMin
</UL>

<P><STRONG><a name="[96a]"></a>_GetDecs</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gui_valf.o(i._GetDecs))
<BR><BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
</UL>

<P><STRONG><a name="[969]"></a>_RoundHalfUp</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gui_valf.o(i._RoundHalfUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _RoundHalfUp &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatMin
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[80c]"></a>_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i._WaitEvent))
<BR><BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[272]"></a>_Color2IndexBulk</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guicc_888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[270]"></a>_Color2Index_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._Color2Index_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[271]"></a>_GetIndexMask_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._GetIndexMask_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[273]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[277]"></a>_Color2IndexBulk</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[274]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[276]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[278]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[27a]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[279]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[27b]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[5f]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_End &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[9eb]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, lcd_nextpixelapi.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NextPixel_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[5e]"></a>_NextPixel_NextLine</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, lcd_nextpixelapi.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>_NextPixel_Start</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lcd_nextpixelapi.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[7e4]"></a>LCD_ReadRectEx</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRect
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[99a]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, lcd_rotate180.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[999]"></a>_DrawBitmap</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, lcd_rotate180.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetPfSetPixel
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap180
</UL>

<P><STRONG><a name="[60]"></a>_DrawBitmap180</STRONG> (Thumb, 440 bytes, Stack size 112 bytes, lcd_rotate180.o(i._DrawBitmap180))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawBitmap180 &rArr; _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotate180.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>_Rect2TextRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_rotate180.o(i._Rect2TextRect))
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotate180.o(.data)
</UL>
<P><STRONG><a name="[9a5]"></a>_TransformPoint</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcd_rotate180.o(i._TransformPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap180
</UL>

<P><STRONG><a name="[99d]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, lcd_rotateccw.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[99c]"></a>_DrawBitmap</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, lcd_rotateccw.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetPfSetPixel
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCCW
</UL>

<P><STRONG><a name="[62]"></a>_DrawBitmapCCW</STRONG> (Thumb, 440 bytes, Stack size 112 bytes, lcd_rotateccw.o(i._DrawBitmapCCW))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawBitmapCCW &rArr; _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotateccw.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>_Rect2TextRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_rotateccw.o(i._Rect2TextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Rect2TextRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotateccw.o(.data)
</UL>
<P><STRONG><a name="[9a6]"></a>_TransformPoint</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lcd_rotateccw.o(i._TransformPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformRect
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCCW
</UL>

<P><STRONG><a name="[64]"></a>_TransformRect</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lcd_rotateccw.o(i._TransformRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _TransformRect &rArr; _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotateccw.o(.data)
</UL>
<P><STRONG><a name="[99f]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, lcd_rotatecw.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[99e]"></a>_DrawBitmap</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, lcd_rotatecw.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetPfSetPixel
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
</UL>

<P><STRONG><a name="[65]"></a>_DrawBitmapCW</STRONG> (Thumb, 456 bytes, Stack size 112 bytes, lcd_rotatecw.o(i._DrawBitmapCW))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawBitmapCW &rArr; _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>_Rect2TextRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_rotatecw.o(i._Rect2TextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Rect2TextRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(.data)
</UL>
<P><STRONG><a name="[9a7]"></a>_TransformPoint</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lcd_rotatecw.o(i._TransformPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformRect
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
</UL>

<P><STRONG><a name="[67]"></a>_TransformRect</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lcd_rotatecw.o(i._TransformRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _TransformRect &rArr; _TransformPoint &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(.data)
</UL>
<P><STRONG><a name="[9a1]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9a2]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9a3]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[27c]"></a>_DrawBitmap</STRONG> (Thumb, 682 bytes, Stack size 112 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[27d]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[27e]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[27f]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[286]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[284]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[285]"></a>_GetDevProp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[280]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[287]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[283]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[281]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9a0]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[282]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[7b8]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[9c1]"></a>_CalcPolyRect</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, guidev_measure.o(i._CalcPolyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _CalcPolyRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
</UL>

<P><STRONG><a name="[288]"></a>_DrawBitmap</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guidev_measure.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitmap &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[289]"></a>_DrawHLine</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidev_measure.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawHLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[28a]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidev_measure.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawVLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>_FillPolygon</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, guidev_measure.o(i._FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillPolygon &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPolyRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1ba]"></a>_FillPolygonAA</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, guidev_measure.o(i._FillPolygonAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _FillPolygonAA &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPolyRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[28b]"></a>_FillRect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_measure.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _FillRect &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[292]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[290]"></a>_GetDevFunc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[291]"></a>_GetDevProp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[28c]"></a>_GetPixelIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[293]"></a>_GetRect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_measure.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[9e7]"></a>_MarkPixel</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, guidev_measure.o(i._MarkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>

<P><STRONG><a name="[9a4]"></a>_MarkRect</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, guidev_measure.o(i._MarkRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[28f]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[28d]"></a>_SetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPixelIndex &rArr; _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[28e]"></a>_XorPixel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XorPixel &rArr; _MarkPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[938]"></a>_AddContent</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._AddContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _AddContent &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>
<BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[939]"></a>_CopyContent</STRONG> (Thumb, 464 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CopyContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _CopyContent &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[7d2]"></a>_CreateStatic</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, guidev_staticdevices.o(i._CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + In Cycle
<LI>Call Chain = _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[7ca]"></a>_CreateStaticDevice</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[7c6]"></a>_GetWindowDevice</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + In Cycle
<LI>Call Chain = _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>
<BR>[Called By]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[295]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[294]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[296]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[298]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[297]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[7d7]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 390 bytes, Stack size 104 bytes, guidev_writetoactivealpha.o(i._WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[95d]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[95f]"></a>_Convert8</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert8))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert8 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[7d8]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 824 bytes, Stack size 168 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[7d9]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 826 bytes, Stack size 144 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[854]"></a>_AddKey</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, listbox.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _AddKey &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[872]"></a>_CalcScrollParas</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, listbox.o(i._CalcScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[951]"></a>_CallOwnerDraw</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, listbox.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[94c]"></a>_GetContentsSizeX</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, listbox.o(i._GetContentsSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GetContentsSizeX &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[85e]"></a>_GetItemFromPos</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, listbox.o(i._GetItemFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
</UL>

<P><STRONG><a name="[873]"></a>_GetItemPosY</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, listbox.o(i._GetItemPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[863]"></a>_GetItemSizeY</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, listbox.o(i._GetItemSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[864]"></a>_GetNumVisItems</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, listbox.o(i._GetNumVisItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _GetNumVisItems &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[9d7]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(i._GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateMotionOnEdge
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
</UL>

<P><STRONG><a name="[871]"></a>_ManageAutoScroll</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, listbox.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[868]"></a>_MoveSel</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, listbox.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = _MoveSel &rArr; LISTBOX_SetSel &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[85c]"></a>_NotifyOwner</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, listbox.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[85d]"></a>_OnPaint</STRONG> (Thumb, 462 bytes, Stack size 168 bytes, listbox.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[861]"></a>_SetSel</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, listbox.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = _SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[85f]"></a>_ToggleMultiSel</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, listbox.o(i._ToggleMultiSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[93e]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[862]"></a>_UpdateMotionOnEdge</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, listbox.o(i._UpdateMotionOnEdge))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _UpdateMotionOnEdge &rArr; _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[94d]"></a>_UpdateScrollPos</STRONG> (Thumb, 190 bytes, Stack size 72 bytes, listbox.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[967]"></a>_DeleteTimer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[8ad]"></a>_OnTimer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[8aa]"></a>_OnTouch</STRONG> (Thumb, 526 bytes, Stack size 104 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[29b]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[29c]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[29d]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[299]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[29a]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[92f]"></a>_MoveDescendants</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendants))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + In Cycle
<LI>Call Chain = _MoveDescendants &rArr;  _MoveDescendants (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
</UL>
<BR>[Called By]<UL><LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendants
</UL>

<P><STRONG><a name="[9f5]"></a>_Screen2hWin</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[916]"></a>_Screen2hWinStop</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[915]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[91d]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i._GetNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[91e]"></a>_GetPrevChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_setfocusonprevchild.o(i._GetPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; _GetTaskNo &rArr; GUI_X_GetTaskId &rArr; osThreadGetId &rArr; svcRtxThreadGetId &rArr; EvrRtxThreadGetId &rArr; EventRecord2 &rArr; EventRecordItem
</UL>
<BR>[Calls]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[1c0]"></a>_OnExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_touch.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> wm_touch.o(i._RegisterExit)
</UL>
<P><STRONG><a name="[936]"></a>_RegisterExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_touch.o(i._RegisterExit))
<BR><BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetMotionCallback
</UL>

<P><STRONG><a name="[29e]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[2a0]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[29f]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[2a1]"></a>_Draw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_draw_self.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[2a2]"></a>_GetXSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetXSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[2a3]"></a>_GetYSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetYSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[a0c]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[a02]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[146]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
